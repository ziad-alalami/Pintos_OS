!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/zezolemeilleur/pintos/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
-101,6 +101,7	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -101,6 +101,7 @@ BOCHSAPI BX_CPU_C bx_cpu;$/;"	h	modifiedFile:a/main.cc
-1033,6 +1033,10	src/misc/bochs-2.2.6-page-fault-segv.patch	/^@@ -1033,6 +1033,10 @@ void BX_CPU_C::exception(unsigned vector$/;"	h	modifiedFile:bochs-2.2.6/cpu/exception.cc~
-105,23 +105,23	src/misc/bochs-2.6.2-banner-stderr.patch	/^@@ -105,23 +105,23 @@$/;"	h	modifiedFile:bochs-2.6.2/main.cc
-105,6 +105,7	src/misc/bochs-2.2.6-jitter.patch	/^@@ -105,6 +105,7 @@$/;"	h	modifiedFile:bochs-2.2.6.orig/main.cc
-118,18 +118,18	src/misc/bochs-2.6.11-banner-stderr.patch	/^@@ -118,18 +118,18 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/main.cc
-200,7 +200,7	src/misc/bochs-2.6.2-block-device-check.patch	/^@@ -200,7 +200,7 @@$/;"	h	modifiedFile:bochs-2.6.2/iodev/hdimage/hdimage.cc
-24202,8 +24202,8	src/misc/bochs-2.6.2-xrandr-pkgconfig.patch	/^@@ -24202,8 +24202,8 @@$/;"	h	modifiedFile:bochs-2.6.2.orig/configure
-245,8 +245,13	src/misc/bochs-2.2.6-solaris-tty.patch	/^@@ -245,8 +245,13 @@$/;"	h	modifiedFile:bochs-2.2.6/iodev/serial.cc
-24739,7 +24739,7	src/misc/bochs-2.6.2-link-tinfo.patch	/^@@ -24739,7 +24739,7 @@ if ${ac_cv_lib_ncurses_mvaddch+:} false; then :$/;"	h	modifiedFile:i/configure
-24770,7 +24770,7	src/misc/bochs-2.6.2-link-tinfo.patch	/^@@ -24770,7 +24770,7 @@ fi$/;"	h	modifiedFile:i/configure
-25331,7 +25331,7	src/misc/bochs-2.6.11-link-tinfo.patch	/^@@ -25331,7 +25331,7 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/configure
-25523,7 +25523,7	src/misc/bochs-2.6.11-link-tinfo.patch	/^@@ -25523,7 +25523,7 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/configure
-26,6 +26,7	src/misc/bochs-2.2.6-page-fault-segv.patch	/^@@ -26,6 +26,7 @@ static int last_stop_reason = GDBSTUB_ST$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc~
-271,6 +272,12	src/misc/bochs-2.2.6-page-fault-segv.patch	/^@@ -271,6 +272,12 @@ int bx_gdbstub_check(unsigned int eip)$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc~
-273,14 +273,8	src/misc/bochs-2.2.6-paranoia.patch	/^@@ -273,14 +273,8 @@ class sparse_image_t : public device_ima$/;"	h	modifiedFile:bochs-2.2.6/iodev/hdimage.h~
-28,6 +28,7	src/misc/bochs-2.2.6-jitter.patch	/^@@ -28,6 +28,7 @@$/;"	h	modifiedFile:bochs-2.2.6.orig/iodev/pit82c54.cc
-317,6 +318,12	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -317,6 +318,12 @@ int bx_gdbstub_check(unsigned int eip)$/;"	h	modifiedFile:a/gdbstub.cc
-319,6 +320,12	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -319,6 +320,12 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/gdbstub.cc
-359,7 +360,13	src/misc/bochs-2.2.6-jitter.patch	/^@@ -359,7 +360,13 @@$/;"	h	modifiedFile:bochs-2.2.6.orig/iodev/pit82c54.cc
-375,6 +375,7	src/misc/bochs-2.2.6-page-fault-segv.patch	/^@@ -375,6 +375,7 @@ BOCHSAPI extern logfunc_t *genlog;$/;"	h	modifiedFile:bochs-2.2.6/bochs.h~
-392,6 +392,7	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -392,6 +392,7 @@ BOCHSAPI extern logfunc_t *genlog;$/;"	h	modifiedFile:a/bochs.h
-40,7 +40,7	src/misc/bochs-2.2.6-solaris-tty.patch	/^@@ -40,7 +40,7 @@$/;"	h	modifiedFile:bochs-2.2.6/iodev/serial.h
-409,6 +409,7	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -409,6 +409,7 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/bochs.h
-410,7 +411,14	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -410,7 +411,14 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/iodev/pit82c54.cc
-410,7 +411,14	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -410,7 +411,14 @@ void BX_CPP_AttrRegparmN(1) pit_82C54::clock(Bit8u cnum)$/;"	h	modifiedFile:a/iodev/pit82c54.cc
-44,7 +44,7	src/misc/bochs-2.2.6-ms-extensions.patch	/^@@ -44,7 +44,7 @@ SHELL = \/bin\/sh$/;"	h	modifiedFile:orig/bochs-2.1.1/gui/Makefile.in
-452,6 +459,10	src/misc/bochs-2.2.6-page-fault-segv.patch	/^@@ -452,6 +459,10 @@ static void debug_loop(void)$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc~
-459,6 +460,13	src/misc/bochs-2.2.6-jitter.patch	/^@@ -459,6 +460,13 @@$/;"	h	modifiedFile:bochs-2.2.6.orig/main.cc
-466,19 +466,19	src/misc/bochs-2.2.6-triple-fault.patch	/^@@ -466,19 +466,19 @@ static void debug_loop(void)$/;"	h	modifiedFile:bochs-2.2.6.orig/gdbstub.cc
-476,10 +487,14	src/misc/bochs-2.2.6-page-fault-segv.patch	/^@@ -476,10 +487,14 @@ static void debug_loop(void)$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc~
-487,6 +494,10	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -487,6 +494,10 @@ static void debug_loop(void)$/;"	h	modifiedFile:a/gdbstub.cc
-489,6 +496,10	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -489,6 +496,10 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/gdbstub.cc
-49,6 +49,7	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -49,6 +49,7 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/iodev/pit82c54.cc
-49,6 +49,7	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -49,6 +49,7 @@ static int last_stop_reason = GDBSTUB_STOP_NO_REASON;$/;"	h	modifiedFile:a/gdbstub.cc
-49,6 +49,7	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -49,6 +49,7 @@$/;"	h	modifiedFile:a/iodev/pit82c54.cc
-50,6 +50,7	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -50,6 +50,7 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/gdbstub.cc
-514,6 +525,10	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -514,6 +525,10 @@ static void debug_loop(void)$/;"	h	modifiedFile:a/gdbstub.cc
-515,7 +515,7	src/misc/bochs-2.2.6-gdbstub-ENN.patch	/^@@ -515,7 +515,7 @@$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc
-516,6 +527,10	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -516,6 +527,10 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/gdbstub.cc
-589,4 +590,6	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -589,4 +590,6 @@ BX_CPP_INLINE Bit64u bx_bswap64(Bit64u val64)$/;"	h	modifiedFile:a/bochs.h
-639,6 +640,13	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -639,6 +640,13 @@ int bx_init_main(int argc, char *argv[])$/;"	h	modifiedFile:a/main.cc
-664,4 +665,6	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -664,4 +665,6 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/bochs.h
-672,35 +672,36	src/misc/bochs-2.2.6-big-endian.patch	/^@@ -672,35 +672,36 @@$/;"	h	modifiedFile:bochs-2.2.6.orig/gdbstub.cc
-698,4 +698,6	src/misc/bochs-2.2.6-jitter.patch	/^@@ -698,4 +698,6 @@ int bx_init_hardware ();$/;"	h	modifiedFile:bochs-2.2.6/bochs.h.orig
-705,6 +706,13	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -705,6 +706,13 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/main.cc
-761,7 +761,7	src/misc/bochs-2.2.6-gdbstub-ENN.patch	/^@@ -761,7 +761,7 @@$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc
-782,7 +782,7	src/misc/bochs-2.2.6-gdbstub-ENN.patch	/^@@ -782,7 +782,7 @@$/;"	h	modifiedFile:bochs-2.2.6/gdbstub.cc
-841,6 +841,13	src/misc/bochs-2.2.6-triple-fault.patch	/^@@ -841,6 +841,13 @@ void BX_CPU_C::exception(unsigned vector$/;"	h	modifiedFile:bochs-2.2.6.orig/cpu/exception.cc
-860,6 +867,13	src/misc/bochs-2.2.6-triple-fault.patch	/^@@ -860,6 +867,13 @@ void BX_CPU_C::exception(unsigned vector$/;"	h	modifiedFile:bochs-2.2.6.orig/cpu/exception.cc
-914,6 +914,10	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^@@ -914,6 +914,10 @@ void BX_CPU_C::exception(unsigned vector, Bit16u error_code)$/;"	h	modifiedFile:a/cpu/exception.cc
-92,6 +92,7	src/misc/bochs-2.2.6-namespace.patch	/^@@ -92,6 +92,7 @@$/;"	h	modifiedFile:bochs-2.2.6/bx_debug/symbols.cc
-93,7 +93,7	src/misc/bochs-2.2.6-solaris-link.patch	/^@@ -93,7 +93,7 @@$/;"	h	modifiedFile:bochs-2.2.6.orig/Makefile.in
-94,6 +94,7	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -94,6 +94,7 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/main.cc
-991,6 +991,10	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^@@ -991,6 +991,10 @@$/;"	h	modifiedFile:bochs-2.6.11.dist/cpu/exception.cc
.bss	src/lib/user/user.lds	/^  .bss : { *(.bss) *(.testEndmem) }$/;"	S
.bss	src/threads/kernel.lds.S	/^  .bss : { *(.bss) }$/;"	S
.comment	src/lib/user/user.lds	/^  .comment       0 : { *(.comment) }$/;"	S
.data	src/lib/user/user.lds	/^  .data : { *(.data) }$/;"	S
.data	src/threads/kernel.lds.S	/^  .data : { *(.data) $/;"	S
.debug	src/lib/user/user.lds	/^  .debug          0 : { *(.debug) }$/;"	S
.debug_abbrev	src/lib/user/user.lds	/^  .debug_abbrev   0 : { *(.debug_abbrev) }$/;"	S
.debug_aranges	src/lib/user/user.lds	/^  .debug_aranges  0 : { *(.debug_aranges) }$/;"	S
.debug_frame	src/lib/user/user.lds	/^  .debug_frame    0 : { *(.debug_frame) }$/;"	S
.debug_funcnames	src/lib/user/user.lds	/^  .debug_funcnames 0 : { *(.debug_funcnames) }$/;"	S
.debug_info	src/lib/user/user.lds	/^  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }$/;"	S
.debug_line	src/lib/user/user.lds	/^  .debug_line     0 : { *(.debug_line) }$/;"	S
.debug_loc	src/lib/user/user.lds	/^  .debug_loc      0 : { *(.debug_loc) }$/;"	S
.debug_macinfo	src/lib/user/user.lds	/^  .debug_macinfo  0 : { *(.debug_macinfo) }$/;"	S
.debug_pubnames	src/lib/user/user.lds	/^  .debug_pubnames 0 : { *(.debug_pubnames) }$/;"	S
.debug_sfnames	src/lib/user/user.lds	/^  .debug_sfnames  0 : { *(.debug_sfnames) }$/;"	S
.debug_srcinfo	src/lib/user/user.lds	/^  .debug_srcinfo  0 : { *(.debug_srcinfo) }$/;"	S
.debug_str	src/lib/user/user.lds	/^  .debug_str      0 : { *(.debug_str) }$/;"	S
.debug_typenames	src/lib/user/user.lds	/^  .debug_typenames 0 : { *(.debug_typenames) }$/;"	S
.debug_varnames	src/lib/user/user.lds	/^  .debug_varnames  0 : { *(.debug_varnames) }$/;"	S
.debug_weaknames	src/lib/user/user.lds	/^  .debug_weaknames 0 : { *(.debug_weaknames) }$/;"	S
.eh_frame	src/threads/kernel.lds.S	/^  .eh_frame : { *(.eh_frame) }$/;"	S
.line	src/lib/user/user.lds	/^  .line           0 : { *(.line) }$/;"	S
.plt	src/threads/kernel.lds.S	/^  .plt : { *(.plt*) }$/;"	S
.rodata	src/lib/user/user.lds	/^  .rodata : { *(.rodata) }$/;"	S
.rodata	src/threads/kernel.lds.S	/^  .rodata : { *(.rodata) *(.rodata.*) $/;"	S
.stab	src/lib/user/user.lds	/^  .stab          0 : { *(.stab) }$/;"	S
.stab.excl	src/lib/user/user.lds	/^  .stab.excl     0 : { *(.stab.excl) }$/;"	S
.stab.exclstr	src/lib/user/user.lds	/^  .stab.exclstr  0 : { *(.stab.exclstr) }$/;"	S
.stab.index	src/lib/user/user.lds	/^  .stab.index    0 : { *(.stab.index) }$/;"	S
.stab.indexstr	src/lib/user/user.lds	/^  .stab.indexstr 0 : { *(.stab.indexstr) }$/;"	S
.stabstr	src/lib/user/user.lds	/^  .stabstr       0 : { *(.stabstr) }$/;"	S
.text	src/lib/user/user.lds	/^  .text : { *(.text) } = 0x90$/;"	S
.text	src/threads/kernel.lds.S	/^  .text : { *(.start) *(.text) } = 0x90$/;"	S
A	src/examples/matmult.c	/^int A[DIM][DIM];$/;"	v	typeref:typename:int[][]
ACTUAL	src/tests/vm/child-mm-wrt.c	/^#define ACTUAL /;"	d	file:
ACTUAL	src/tests/vm/mmap-close.c	/^#define ACTUAL /;"	d	file:
ACTUAL	src/tests/vm/mmap-unmap.c	/^#define ACTUAL /;"	d	file:
ACTUAL	src/tests/vm/mmap-write.c	/^#define ACTUAL /;"	d	file:
ALIGN	src/threads/build/threads/kernel.lds.s	/^       . = ALIGN(0x1000);$/;"	d
ARENA_MAGIC	src/threads/malloc.c	/^#define ARENA_MAGIC /;"	d	file:
ASSERT	src/lib/debug.h	/^#define ASSERT(/;"	d
Algorithm::Diff	src/tests/Algorithm/Diff.pm	/^package Algorithm::Diff;$/;"	p
Algorithm::Diff::_impl	src/tests/Algorithm/Diff.pm	/^package Algorithm::Diff::_impl;$/;"	p
B	src/examples/matmult.c	/^int B[DIM][DIM];$/;"	v	typeref:typename:int[][]
BEST_ELEMS_PER_BUCKET	src/lib/kernel/hash.c	/^#define BEST_ELEMS_PER_BUCKET /;"	d	file:
BITMAP_ERROR	src/lib/kernel/bitmap.h	/^#define BITMAP_ERROR /;"	d
BITMASK	src/threads/vaddr.h	/^#define BITMASK(/;"	d
BLOCK_CNT	src/devices/block.h	/^    BLOCK_CNT                    \/* Number of Pintos block types. *\/$/;"	e	enum:block_type
BLOCK_FILESYS	src/devices/block.h	/^    BLOCK_FILESYS,               \/* File system. *\/$/;"	e	enum:block_type
BLOCK_FOREIGN	src/devices/block.h	/^    BLOCK_FOREIGN,               \/* Owned by non-Pintos operating system. *\/$/;"	e	enum:block_type
BLOCK_KERNEL	src/devices/block.h	/^    BLOCK_KERNEL,                \/* Pintos OS kernel. *\/$/;"	e	enum:block_type
BLOCK_RAW	src/devices/block.h	/^    BLOCK_RAW = BLOCK_ROLE_CNT,  \/* "Raw" device with unidentified contents. *\/$/;"	e	enum:block_type
BLOCK_ROLE_CNT	src/devices/block.h	/^    BLOCK_ROLE_CNT,$/;"	e	enum:block_type
BLOCK_SCRATCH	src/devices/block.h	/^    BLOCK_SCRATCH,               \/* Scratch. *\/$/;"	e	enum:block_type
BLOCK_SECTOR_SIZE	src/devices/block.h	/^#define BLOCK_SECTOR_SIZE /;"	d
BLOCK_SIZE	src/tests/filesys/base/lg-random.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	src/tests/filesys/base/lg-seq-block.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	src/tests/filesys/base/sm-random.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	src/tests/filesys/base/sm-seq-block.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SWAP	src/devices/block.h	/^    BLOCK_SWAP,                  \/* Swap. *\/$/;"	e	enum:block_type
BUF_SIZE	src/tests/filesys/base/syn-read.h	/^#define BUF_SIZE /;"	d
BUF_SIZE	src/tests/filesys/base/syn-write.h	/^#define BUF_SIZE /;"	d
BUF_SIZE	src/tests/filesys/extended/syn-rw.h	/^#define BUF_SIZE /;"	d
BUILD_SUBDIRS	src/Makefile	/^BUILD_SUBDIRS = threads userprog vm filesys$/;"	m
Base	src/tests/Algorithm/Diff.pm	/^sub Base$/;"	s
C	src/examples/matmult.c	/^int C[DIM][DIM];$/;"	v	typeref:typename:int[][]
CC	src/utils/Makefile	/^CC = gcc$/;"	m
CFLAGS	src/utils/Makefile	/^CFLAGS = -Wall -W$/;"	m
CHANNEL_CNT	src/devices/ide.c	/^#define CHANNEL_CNT /;"	d	file:
CHAR	src/lib/stdio.c	/^        CHAR = 1,               \/* hh *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
CHAR_BIT	src/lib/limits.h	/^#define CHAR_BIT /;"	d
CHAR_MAX	src/lib/limits.h	/^#define CHAR_MAX /;"	d
CHAR_MIN	src/lib/limits.h	/^#define CHAR_MIN /;"	d
CHECK	src/tests/lib.h	/^#define CHECK(/;"	d
CHILD_CNT	src/tests/filesys/base/syn-read.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	src/tests/filesys/base/syn-write.h	/^#define CHILD_CNT /;"	d
CHILD_CNT	src/tests/filesys/extended/syn-rw.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	src/tests/userprog/rox-child.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	src/tests/userprog/rox-multichild.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	src/tests/vm/page-parallel.c	/^#define CHILD_CNT /;"	d	file:
CHUNK_CNT	src/tests/filesys/extended/syn-rw.h	/^#define CHUNK_CNT /;"	d
CHUNK_CNT	src/tests/vm/page-merge-seq.c	/^#define CHUNK_CNT /;"	d	file:
CHUNK_CNT	src/tests/vm/parallel-merge.c	/^#define CHUNK_CNT /;"	d	file:
CHUNK_SIZE	src/tests/filesys/base/syn-write.h	/^#define CHUNK_SIZE /;"	d
CHUNK_SIZE	src/tests/filesys/extended/syn-rw.h	/^#define CHUNK_SIZE /;"	d
CHUNK_SIZE	src/tests/vm/page-merge-seq.c	/^#define CHUNK_SIZE /;"	d	file:
CHUNK_SIZE	src/tests/vm/parallel-merge.c	/^#define CHUNK_SIZE /;"	d	file:
CLEAN_SUBDIRS	src/Makefile	/^CLEAN_SUBDIRS = $(BUILD_SUBDIRS) examples utils$/;"	m
CLS_CODE_DATA	src/userprog/gdt.c	/^    CLS_CODE_DATA = 1           \/* Code or data segment. *\/$/;"	e	enum:seg_class	file:
CLS_SYSTEM	src/userprog/gdt.c	/^    CLS_SYSTEM = 0,             \/* System segment. *\/$/;"	e	enum:seg_class	file:
CMD_IDENTIFY_DEVICE	src/devices/ide.c	/^#define CMD_IDENTIFY_DEVICE /;"	d	file:
CMD_READ_SECTOR_RETRY	src/devices/ide.c	/^#define CMD_READ_SECTOR_RETRY /;"	d	file:
CMD_WRITE_SECTOR_RETRY	src/devices/ide.c	/^#define CMD_WRITE_SECTOR_RETRY /;"	d	file:
CMOS_REG_IO	src/devices/rtc.c	/^#define CMOS_REG_IO	/;"	d	file:
CMOS_REG_SET	src/devices/rtc.c	/^#define CMOS_REG_SET	/;"	d	file:
COL_CNT	src/devices/vga.c	/^#define COL_CNT /;"	d	file:
CONTROL_REG	src/devices/shutdown.c	/^#define CONTROL_REG /;"	d	file:
CR0_EM	src/threads/start.S	/^#define CR0_EM /;"	d	file:
CR0_PE	src/threads/start.S	/^#define CR0_PE /;"	d	file:
CR0_PG	src/threads/start.S	/^#define CR0_PG /;"	d	file:
CR0_WP	src/threads/start.S	/^#define CR0_WP /;"	d	file:
CRASH	src/tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	e	enum:child_termination_mode	file:
CTL_SRST	src/devices/ide.c	/^#define CTL_SRST /;"	d	file:
Copy	src/tests/Algorithm/Diff.pm	/^sub Copy$/;"	s
DATA_REG	src/devices/kbd.c	/^#define DATA_REG /;"	d	file:
DATA_SIZE	src/tests/vm/page-merge-seq.c	/^#define DATA_SIZE /;"	d	file:
DATA_SIZE	src/tests/vm/parallel-merge.c	/^#define DATA_SIZE /;"	d	file:
DEPENDS	src/threads/build/Makefile	/^DEPENDS = $(patsubst %.o,%.d,$(OBJECTS))$/;"	m
DEVICES_BLOCK_H	src/devices/block.h	/^#define DEVICES_BLOCK_H$/;"	d
DEVICES_IDE_H	src/devices/ide.h	/^#define DEVICES_IDE_H$/;"	d
DEVICES_INPUT_H	src/devices/input.h	/^#define DEVICES_INPUT_H$/;"	d
DEVICES_INTQ_H	src/devices/intq.h	/^#define DEVICES_INTQ_H$/;"	d
DEVICES_KBD_H	src/devices/kbd.h	/^#define DEVICES_KBD_H$/;"	d
DEVICES_PARTITION_H	src/devices/partition.h	/^#define DEVICES_PARTITION_H$/;"	d
DEVICES_PIT_H	src/devices/pit.h	/^#define DEVICES_PIT_H$/;"	d
DEVICES_SERIAL_H	src/devices/serial.h	/^#define DEVICES_SERIAL_H$/;"	d
DEVICES_SHUTDOWN_H	src/devices/shutdown.h	/^#define DEVICES_SHUTDOWN_H$/;"	d
DEVICES_SPEAKER_H	src/devices/speaker.h	/^#define DEVICES_SPEAKER_H$/;"	d
DEVICES_TIMER_H	src/devices/timer.h	/^#define DEVICES_TIMER_H$/;"	d
DEVICES_VGA_H	src/devices/vga.h	/^#define DEVICES_VGA_H$/;"	d
DEV_DEV	src/devices/ide.c	/^#define DEV_DEV /;"	d	file:
DEV_LBA	src/devices/ide.c	/^#define DEV_LBA /;"	d	file:
DEV_MBS	src/devices/ide.c	/^#define DEV_MBS /;"	d	file:
DIM	src/examples/matmult.c	/^#define DIM /;"	d	file:
DIRECTORY	src/tests/filesys/extended/grow-dir-lg.c	/^#define DIRECTORY /;"	d	file:
DIV_ROUND_UP	src/lib/round.h	/^#define DIV_ROUND_UP(/;"	d
Die	src/tests/Algorithm/Diff.pm	/^sub Die$/;"	s
Diff	src/tests/Algorithm/Diff.pm	/^sub Diff {$/;"	s
ELEM_BITS	src/lib/kernel/bitmap.c	/^#define ELEM_BITS /;"	d	file:
EXIT_FAILURE	src/lib/user/syscall.h	/^#define EXIT_FAILURE /;"	d
EXIT_SUCCESS	src/lib/user/syscall.h	/^#define EXIT_SUCCESS /;"	d
EXPECTED_DEPTH_TO_PASS	src/tests/userprog/no-vm/multi-oom.c	/^static const int EXPECTED_DEPTH_TO_PASS = 30;$/;"	v	typeref:typename:const int	file:
EXPECTED_REPETITIONS	src/tests/userprog/no-vm/multi-oom.c	/^static const int EXPECTED_REPETITIONS = 10;$/;"	v	typeref:typename:const int	file:
Elf32_Addr	src/userprog/process.c	/^typedef uint32_t Elf32_Word, Elf32_Addr, Elf32_Off;$/;"	t	typeref:typename:uint32_t	file:
Elf32_Ehdr	src/userprog/process.c	/^struct Elf32_Ehdr$/;"	s	file:
Elf32_Half	src/userprog/process.c	/^typedef uint16_t Elf32_Half;$/;"	t	typeref:typename:uint16_t	file:
Elf32_Off	src/userprog/process.c	/^typedef uint32_t Elf32_Word, Elf32_Addr, Elf32_Off;$/;"	t	typeref:typename:uint32_t	file:
Elf32_Phdr	src/userprog/process.c	/^struct Elf32_Phdr$/;"	s	file:
Elf32_Word	src/userprog/process.c	/^typedef uint32_t Elf32_Word, Elf32_Addr, Elf32_Off;$/;"	t	typeref:typename:uint32_t	file:
FCR_REG	src/devices/serial.c	/^#define FCR_REG /;"	d	file:
FILESYS_DIRECTORY_H	src/filesys/directory.h	/^#define FILESYS_DIRECTORY_H$/;"	d
FILESYS_FILESYS_H	src/filesys/filesys.h	/^#define FILESYS_FILESYS_H$/;"	d
FILESYS_FILE_H	src/filesys/file.h	/^#define FILESYS_FILE_H$/;"	d
FILESYS_FREE_MAP_H	src/filesys/free-map.h	/^#define FILESYS_FREE_MAP_H$/;"	d
FILESYS_FSUTIL_H	src/filesys/fsutil.h	/^#define FILESYS_FSUTIL_H$/;"	d
FILESYS_INODE_H	src/filesys/inode.h	/^#define FILESYS_INODE_H$/;"	d
FILESYS_OFF_T_H	src/filesys/off_t.h	/^#define FILESYS_OFF_T_H$/;"	d
FILE_CNT	src/tests/filesys/extended/grow-dir-lg.c	/^#define FILE_CNT /;"	d	file:
FILE_CNT	src/tests/filesys/extended/grow-root-lg.c	/^#define FILE_CNT /;"	d	file:
FILE_CNT	src/tests/filesys/extended/grow-root-sm.c	/^#define FILE_CNT /;"	d	file:
FILE_SIZE	src/tests/filesys/extended/grow-two-files.c	/^#define FILE_SIZE /;"	d	file:
FLAG_IF	src/threads/flags.h	/^#define FLAG_IF /;"	d
FLAG_MBS	src/threads/flags.h	/^#define FLAG_MBS /;"	d
FNV_32_BASIS	src/lib/kernel/hash.c	/^#define FNV_32_BASIS /;"	d	file:
FNV_32_PRIME	src/lib/kernel/hash.c	/^#define FNV_32_PRIME /;"	d	file:
FREE_MAP_SECTOR	src/filesys/filesys.h	/^#define FREE_MAP_SECTOR /;"	d
GRAN_BYTE	src/userprog/gdt.c	/^    GRAN_BYTE = 0,              \/* Limit has 1-byte granularity. *\/$/;"	e	enum:seg_granularity	file:
GRAN_PAGE	src/userprog/gdt.c	/^    GRAN_PAGE = 1               \/* Limit has 4 kB granularity. *\/$/;"	e	enum:seg_granularity	file:
GRAY_ON_BLACK	src/devices/vga.c	/^#define GRAY_ON_BLACK /;"	d	file:
GROUP	src/lib/stdio.c	/^        GROUP = 1 << 5          \/* '\\'' *\/$/;"	e	enum:printf_conversion::__anon90bc09760103	file:
Get	src/tests/Algorithm/Diff.pm	/^sub Get$/;"	s
IER_RECV	src/devices/serial.c	/^#define IER_RECV /;"	d	file:
IER_REG	src/devices/serial.c	/^#define IER_REG /;"	d	file:
IER_XMIT	src/devices/serial.c	/^#define IER_XMIT /;"	d	file:
IIR_REG	src/devices/serial.c	/^#define IIR_REG /;"	d	file:
INODE_MAGIC	src/filesys/inode.c	/^#define INODE_MAGIC /;"	d	file:
INT	src/lib/stdio.c	/^        INT = 3,                \/* (none) *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
INT16_MAX	src/lib/stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	src/lib/stdint.h	/^#define INT16_MIN /;"	d
INT32_MAX	src/lib/stdint.h	/^#define INT32_MAX /;"	d
INT32_MIN	src/lib/stdint.h	/^#define INT32_MIN /;"	d
INT64_MAX	src/lib/stdint.h	/^#define INT64_MAX /;"	d
INT64_MIN	src/lib/stdint.h	/^#define INT64_MIN /;"	d
INT8_MAX	src/lib/stdint.h	/^#define INT8_MAX /;"	d
INT8_MIN	src/lib/stdint.h	/^#define INT8_MIN /;"	d
INTMAX	src/lib/stdio.c	/^        INTMAX = 4,             \/* j *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
INTMAX_MAX	src/lib/stdint.h	/^#define INTMAX_MAX /;"	d
INTMAX_MIN	src/lib/stdint.h	/^#define INTMAX_MIN /;"	d
INTPTR_MAX	src/lib/stdint.h	/^#define INTPTR_MAX /;"	d
INTPTR_MIN	src/lib/stdint.h	/^#define INTPTR_MIN /;"	d
INTQ_BUFSIZE	src/devices/intq.h	/^#define INTQ_BUFSIZE /;"	d
INTR_CNT	src/threads/interrupt.c	/^#define INTR_CNT /;"	d	file:
INTR_OFF	src/threads/interrupt.h	/^    INTR_OFF,             \/* Interrupts disabled. *\/$/;"	e	enum:intr_level
INTR_ON	src/threads/interrupt.h	/^    INTR_ON               \/* Interrupts enabled. *\/$/;"	e	enum:intr_level
INT_MAX	src/lib/limits.h	/^#define INT_MAX /;"	d
INT_MIN	src/lib/limits.h	/^#define INT_MIN /;"	d
IO_BASE	src/devices/serial.c	/^#define IO_BASE /;"	d	file:
ITER_CNT	src/tests/threads/priority-fifo.c	/^#define ITER_CNT /;"	d	file:
Items	src/tests/Algorithm/Diff.pm	/^sub Items {$/;"	s
LCR_DLAB	src/devices/serial.c	/^#define LCR_DLAB /;"	d	file:
LCR_N81	src/devices/serial.c	/^#define LCR_N81 /;"	d	file:
LCR_REG	src/devices/serial.c	/^#define LCR_REG /;"	d	file:
LCS	src/tests/Algorithm/Diff.pm	/^sub LCS$/;"	s
LCS_length	src/tests/Algorithm/Diff.pm	/^sub LCS_length$/;"	s
LCSidx	src/tests/Algorithm/Diff.pm	/^sub LCSidx$/;"	s
LIST_INITIALIZER	src/lib/kernel/list.h	/^#define LIST_INITIALIZER(/;"	d
LLONG_MAX	src/lib/limits.h	/^#define LLONG_MAX /;"	d
LLONG_MIN	src/lib/limits.h	/^#define LLONG_MIN /;"	d
LOADER_ARGS	src/threads/loader.h	/^#define LOADER_ARGS /;"	d
LOADER_ARGS_LEN	src/threads/loader.h	/^#define LOADER_ARGS_LEN /;"	d
LOADER_ARG_CNT	src/threads/loader.h	/^#define LOADER_ARG_CNT /;"	d
LOADER_ARG_CNT_LEN	src/threads/loader.h	/^#define LOADER_ARG_CNT_LEN /;"	d
LOADER_BASE	src/threads/loader.h	/^#define LOADER_BASE /;"	d
LOADER_END	src/threads/loader.h	/^#define LOADER_END /;"	d
LOADER_KERN_BASE	src/threads/loader.h	/^#define LOADER_KERN_BASE /;"	d
LOADER_PARTS	src/threads/loader.h	/^#define LOADER_PARTS /;"	d
LOADER_PARTS_LEN	src/threads/loader.h	/^#define LOADER_PARTS_LEN /;"	d
LOADER_PHYS_BASE	src/threads/loader.h	/^#define LOADER_PHYS_BASE /;"	d
LOADER_SIG	src/threads/loader.h	/^#define LOADER_SIG /;"	d
LOADER_SIG_LEN	src/threads/loader.h	/^#define LOADER_SIG_LEN /;"	d
LOADLIBES	src/utils/Makefile	/^LOADLIBES = -lm$/;"	m
LONG	src/lib/stdio.c	/^        LONG = 5,               \/* l *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
LONGLONG	src/lib/stdio.c	/^        LONGLONG = 6,           \/* ll *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
LONG_MAX	src/lib/limits.h	/^#define LONG_MAX /;"	d
LONG_MIN	src/lib/limits.h	/^#define LONG_MIN /;"	d
LSR_DR	src/devices/serial.c	/^#define LSR_DR /;"	d	file:
LSR_REG	src/devices/serial.c	/^#define LSR_REG /;"	d	file:
LSR_THRE	src/devices/serial.c	/^#define LSR_THRE /;"	d	file:
LS_REG	src/devices/serial.c	/^#define LS_REG /;"	d	file:
MAP_FAILED	src/lib/user/syscall.h	/^#define MAP_FAILED /;"	d
MAX_CNT	src/tests/internal/stdlib.c	/^#define MAX_CNT /;"	d	file:
MAX_ELEMS_PER_BUCKET	src/lib/kernel/hash.c	/^#define MAX_ELEMS_PER_BUCKET /;"	d	file:
MAX_LEVEL	src/examples/pwd.c	/^#define MAX_LEVEL /;"	d	file:
MAX_SIZE	src/tests/internal/list.c	/^#define MAX_SIZE /;"	d	file:
MAX_THREAD_CNT	src/tests/threads/mlfqs-fair.c	/^#define MAX_THREAD_CNT /;"	d	file:
MCR_OUT2	src/devices/serial.c	/^#define MCR_OUT2 /;"	d	file:
MCR_REG	src/devices/serial.c	/^#define MCR_REG /;"	d	file:
MINUS	src/lib/stdio.c	/^        MINUS = 1 << 0,         \/* '-' *\/$/;"	e	enum:printf_conversion::__anon90bc09760103	file:
MIN_ELEMS_PER_BUCKET	src/lib/kernel/hash.c	/^#define MIN_ELEMS_PER_BUCKET /;"	d	file:
MS_REG	src/devices/serial.c	/^#define MS_REG /;"	d	file:
Makefile	src/threads/build/Makefile	/^Makefile: $(SRCDIR)\/Makefile.build$/;"	t
Max	src/tests/Algorithm/Diff.pm	/^sub Max {$/;"	s
Min	src/tests/Algorithm/Diff.pm	/^sub Min {$/;"	s
NAME_MAX	src/filesys/directory.h	/^#define NAME_MAX /;"	d
NESTING_DEPTH	src/tests/threads/priority-donate-chain.c	/^#define NESTING_DEPTH /;"	d	file:
NOT_REACHED	src/lib/debug.h	/^#define NOT_REACHED(/;"	d
NO_INLINE	src/lib/debug.h	/^#define NO_INLINE /;"	d
NO_RETURN	src/lib/debug.h	/^#define NO_RETURN /;"	d
NO_RETURN	src/userprog/process.c	/^static thread_func start_process NO_RETURN;$/;"	v	typeref:typename:thread_func start_process	file:
NULL	src/lib/stddef.h	/^#define NULL /;"	d
Next	src/tests/Algorithm/Diff.pm	/^sub Next {$/;"	s
OBJECTS	src/threads/build/Makefile	/^OBJECTS = $(patsubst %.c,%.o,$(patsubst %.S,%.o,$(SOURCES)))$/;"	m
PACKED	src/lib/packed.h	/^#define PACKED /;"	d
PACKED	src/lib/ustar.c	/^PACKED;$/;"	v	typeref:struct:ustar_header
PAL_ASSERT	src/threads/palloc.h	/^    PAL_ASSERT = 001,           \/* Panic on failure. *\/$/;"	e	enum:palloc_flags
PAL_USER	src/threads/palloc.h	/^    PAL_USER = 004              \/* User page. *\/$/;"	e	enum:palloc_flags
PAL_ZERO	src/threads/palloc.h	/^    PAL_ZERO = 002,             \/* Zero page contents. *\/$/;"	e	enum:palloc_flags
PANIC	src/lib/debug.h	/^#define PANIC(/;"	d
PDBITS	src/threads/pte.h	/^#define PDBITS /;"	d
PDMASK	src/threads/pte.h	/^#define PDMASK /;"	d
PDSHIFT	src/threads/pte.h	/^#define PDSHIFT /;"	d
PE32Ax	src/userprog/process.c	/^#define PE32Ax /;"	d	file:
PE32Hx	src/userprog/process.c	/^#define PE32Hx /;"	d	file:
PE32Ox	src/userprog/process.c	/^#define PE32Ox /;"	d	file:
PE32Wx	src/userprog/process.c	/^#define PE32Wx /;"	d	file:
PF_P	src/userprog/exception.h	/^#define PF_P /;"	d
PF_R	src/userprog/process.c	/^#define PF_R /;"	d	file:
PF_U	src/userprog/exception.h	/^#define PF_U /;"	d
PF_W	src/userprog/exception.h	/^#define PF_W /;"	d
PF_W	src/userprog/process.c	/^#define PF_W /;"	d	file:
PF_X	src/userprog/process.c	/^#define PF_X /;"	d	file:
PGBITS	src/threads/vaddr.h	/^#define PGBITS /;"	d
PGMASK	src/threads/vaddr.h	/^#define PGMASK /;"	d
PGSHIFT	src/threads/vaddr.h	/^#define PGSHIFT /;"	d
PGSIZE	src/threads/vaddr.h	/^#define PGSIZE /;"	d
PHYS_BASE	src/threads/vaddr.h	/^#define	PHYS_BASE /;"	d
PIC0_CTRL	src/threads/interrupt.c	/^#define PIC0_CTRL	/;"	d	file:
PIC0_DATA	src/threads/interrupt.c	/^#define PIC0_DATA	/;"	d	file:
PIC1_CTRL	src/threads/interrupt.c	/^#define PIC1_CTRL	/;"	d	file:
PIC1_DATA	src/threads/interrupt.c	/^#define PIC1_DATA	/;"	d	file:
PID_ERROR	src/lib/user/syscall.h	/^#define PID_ERROR /;"	d
PIT_HZ	src/devices/pit.c	/^#define PIT_HZ /;"	d	file:
PIT_PORT_CONTROL	src/devices/pit.c	/^#define PIT_PORT_CONTROL /;"	d	file:
PIT_PORT_COUNTER	src/devices/pit.c	/^#define PIT_PORT_COUNTER(/;"	d	file:
PLUS	src/lib/stdio.c	/^        PLUS = 1 << 1,          \/* '+' *\/$/;"	e	enum:printf_conversion::__anon90bc09760103	file:
POLL	src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	e	enum:__anon83e3689f0103	file:
POUND	src/lib/stdio.c	/^        POUND = 1 << 3,         \/* '#' *\/$/;"	e	enum:printf_conversion::__anon90bc09760103	file:
PRDSNu	src/devices/block.h	/^#define PRDSNu /;"	d
PRINTF_FORMAT	src/lib/debug.h	/^#define PRINTF_FORMAT(/;"	d
PRIX16	src/lib/inttypes.h	/^#define PRIX16 /;"	d
PRIX32	src/lib/inttypes.h	/^#define PRIX32 /;"	d
PRIX64	src/lib/inttypes.h	/^#define PRIX64 /;"	d
PRIX8	src/lib/inttypes.h	/^#define PRIX8 /;"	d
PRIXMAX	src/lib/inttypes.h	/^#define PRIXMAX /;"	d
PRIXPTR	src/lib/inttypes.h	/^#define PRIXPTR /;"	d
PRI_DEFAULT	src/threads/thread.h	/^#define PRI_DEFAULT /;"	d
PRI_MAX	src/threads/thread.h	/^#define PRI_MAX /;"	d
PRI_MIN	src/threads/thread.h	/^#define PRI_MIN /;"	d
PRId16	src/lib/inttypes.h	/^#define PRId16 /;"	d
PRId32	src/lib/inttypes.h	/^#define PRId32 /;"	d
PRId64	src/lib/inttypes.h	/^#define PRId64 /;"	d
PRId8	src/lib/inttypes.h	/^#define PRId8 /;"	d
PRIdMAX	src/lib/inttypes.h	/^#define PRIdMAX /;"	d
PRIdPTR	src/lib/inttypes.h	/^#define PRIdPTR /;"	d
PRIi16	src/lib/inttypes.h	/^#define PRIi16 /;"	d
PRIi32	src/lib/inttypes.h	/^#define PRIi32 /;"	d
PRIi64	src/lib/inttypes.h	/^#define PRIi64 /;"	d
PRIi8	src/lib/inttypes.h	/^#define PRIi8 /;"	d
PRIiMAX	src/lib/inttypes.h	/^#define PRIiMAX /;"	d
PRIiPTR	src/lib/inttypes.h	/^#define PRIiPTR /;"	d
PRIo16	src/lib/inttypes.h	/^#define PRIo16 /;"	d
PRIo32	src/lib/inttypes.h	/^#define PRIo32 /;"	d
PRIo64	src/lib/inttypes.h	/^#define PRIo64 /;"	d
PRIo8	src/lib/inttypes.h	/^#define PRIo8 /;"	d
PRIoMAX	src/lib/inttypes.h	/^#define PRIoMAX /;"	d
PRIoPTR	src/lib/inttypes.h	/^#define PRIoPTR /;"	d
PRIu16	src/lib/inttypes.h	/^#define PRIu16 /;"	d
PRIu32	src/lib/inttypes.h	/^#define PRIu32 /;"	d
PRIu64	src/lib/inttypes.h	/^#define PRIu64 /;"	d
PRIu8	src/lib/inttypes.h	/^#define PRIu8 /;"	d
PRIuMAX	src/lib/inttypes.h	/^#define PRIuMAX /;"	d
PRIuPTR	src/lib/inttypes.h	/^#define PRIuPTR /;"	d
PRIx16	src/lib/inttypes.h	/^#define PRIx16 /;"	d
PRIx32	src/lib/inttypes.h	/^#define PRIx32 /;"	d
PRIx64	src/lib/inttypes.h	/^#define PRIx64 /;"	d
PRIx8	src/lib/inttypes.h	/^#define PRIx8 /;"	d
PRIxMAX	src/lib/inttypes.h	/^#define PRIxMAX /;"	d
PRIxPTR	src/lib/inttypes.h	/^#define PRIxPTR /;"	d
PROGS	src/examples/Makefile	/^PROGS = cat cmp cp echo halt hex-dump ls mcat mcp mkdir pwd rm shell \\$/;"	m
PROTd	src/filesys/off_t.h	/^#define PROTd /;"	d
PTBITS	src/threads/pte.h	/^#define PTBITS /;"	d
PTE_A	src/threads/pte.h	/^#define PTE_A /;"	d
PTE_ADDR	src/threads/pte.h	/^#define PTE_ADDR /;"	d
PTE_AVL	src/threads/pte.h	/^#define PTE_AVL /;"	d
PTE_D	src/threads/pte.h	/^#define PTE_D /;"	d
PTE_FLAGS	src/threads/pte.h	/^#define PTE_FLAGS /;"	d
PTE_P	src/threads/pte.h	/^#define PTE_P /;"	d
PTE_U	src/threads/pte.h	/^#define PTE_U /;"	d
PTE_W	src/threads/pte.h	/^#define PTE_W /;"	d
PTMASK	src/threads/pte.h	/^#define PTMASK /;"	d
PTRDIFFT	src/lib/stdio.c	/^        PTRDIFFT = 7,           \/* t *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
PTRDIFF_MAX	src/lib/stdint.h	/^#define PTRDIFF_MAX /;"	d
PTRDIFF_MIN	src/lib/stdint.h	/^#define PTRDIFF_MIN /;"	d
PTSHIFT	src/threads/pte.h	/^#define	PTSHIFT /;"	d
PTSPAN	src/threads/pte.h	/^#define PTSPAN /;"	d
PT_DYNAMIC	src/userprog/process.c	/^#define PT_DYNAMIC /;"	d	file:
PT_INTERP	src/userprog/process.c	/^#define PT_INTERP /;"	d	file:
PT_LOAD	src/userprog/process.c	/^#define PT_LOAD /;"	d	file:
PT_NOTE	src/userprog/process.c	/^#define PT_NOTE /;"	d	file:
PT_NULL	src/userprog/process.c	/^#define PT_NULL /;"	d	file:
PT_PHDR	src/userprog/process.c	/^#define PT_PHDR /;"	d	file:
PT_SHLIB	src/userprog/process.c	/^#define PT_SHLIB /;"	d	file:
PT_STACK	src/userprog/process.c	/^#define PT_STACK /;"	d	file:
Prev	src/tests/Algorithm/Diff.pm	/^sub Prev {$/;"	s
QUEUE	src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	e	enum:__anon83e3689f0103	file:
RBR_REG	src/devices/serial.c	/^#define RBR_REG /;"	d	file:
READDIR_MAX_LEN	src/lib/user/syscall.h	/^#define READDIR_MAX_LEN /;"	d
REAL	src/threads/intr-stubs.S	/^#define REAL /;"	d	file:
RECURSE	src/tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	e	enum:child_termination_mode	file:
ROOT_DIR_SECTOR	src/filesys/filesys.h	/^#define ROOT_DIR_SECTOR /;"	d
ROUND_DOWN	src/lib/round.h	/^#define ROUND_DOWN(/;"	d
ROUND_UP	src/lib/round.h	/^#define ROUND_UP(/;"	d
ROW_CNT	src/devices/vga.c	/^#define ROW_CNT /;"	d	file:
RTCSA_UIP	src/devices/rtc.c	/^#define RTCSA_UIP	/;"	d	file:
RTCSB_24HR	src/devices/rtc.c	/^#define RTCSB_24HR	/;"	d	file:
RTCSB_DM	src/devices/rtc.c	/^#define RTCSB_DM	/;"	d	file:
RTCSB_SET	src/devices/rtc.c	/^#define	RTCSB_SET	/;"	d	file:
RTC_H	src/devices/rtc.h	/^#define RTC_H$/;"	d
RTC_REG_A	src/devices/rtc.c	/^#define RTC_REG_A	/;"	d	file:
RTC_REG_B	src/devices/rtc.c	/^#define RTC_REG_B	/;"	d	file:
RTC_REG_C	src/devices/rtc.c	/^#define RTC_REG_C	/;"	d	file:
RTC_REG_D	src/devices/rtc.c	/^#define RTC_REG_D	/;"	d	file:
RTC_REG_HOUR	src/devices/rtc.c	/^#define RTC_REG_HOUR	/;"	d	file:
RTC_REG_MDAY	src/devices/rtc.c	/^#define RTC_REG_MDAY	/;"	d	file:
RTC_REG_MIN	src/devices/rtc.c	/^#define RTC_REG_MIN	/;"	d	file:
RTC_REG_MON	src/devices/rtc.c	/^#define RTC_REG_MON	/;"	d	file:
RTC_REG_SEC	src/devices/rtc.c	/^#define RTC_REG_SEC	/;"	d	file:
RTC_REG_YEAR	src/devices/rtc.c	/^#define RTC_REG_YEAR	/;"	d	file:
Range	src/tests/Algorithm/Diff.pm	/^sub Range {$/;"	s
Reset	src/tests/Algorithm/Diff.pm	/^sub Reset$/;"	s
SCHAR_MAX	src/lib/limits.h	/^#define SCHAR_MAX /;"	d
SCHAR_MIN	src/lib/limits.h	/^#define SCHAR_MIN /;"	d
SEL_CNT	src/userprog/gdt.h	/^#define SEL_CNT /;"	d
SEL_KCSEG	src/threads/loader.h	/^#define SEL_KCSEG /;"	d
SEL_KDSEG	src/threads/loader.h	/^#define SEL_KDSEG /;"	d
SEL_NULL	src/threads/loader.h	/^#define SEL_NULL /;"	d
SEL_TSS	src/userprog/gdt.h	/^#define SEL_TSS /;"	d
SEL_UCSEG	src/userprog/gdt.h	/^#define SEL_UCSEG /;"	d
SEL_UDSEG	src/userprog/gdt.h	/^#define SEL_UDSEG /;"	d
SHORT	src/lib/stdio.c	/^        SHORT = 2,              \/* h *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
SHRT_MAX	src/lib/limits.h	/^#define SHRT_MAX /;"	d
SHRT_MIN	src/lib/limits.h	/^#define SHRT_MIN /;"	d
SHUTDOWN_NONE	src/devices/shutdown.h	/^    SHUTDOWN_NONE,              \/* Loop forever. *\/$/;"	e	enum:shutdown_type
SHUTDOWN_POWER_OFF	src/devices/shutdown.h	/^    SHUTDOWN_POWER_OFF,         \/* Power off the machine (if possible). *\/$/;"	e	enum:shutdown_type
SHUTDOWN_REBOOT	src/devices/shutdown.h	/^    SHUTDOWN_REBOOT,            \/* Reboot the machine (if possible). *\/$/;"	e	enum:shutdown_type
SIGVTALRM_number	src/utils/pintos	/^sub SIGVTALRM_number {$/;"	s
SIZE	src/tests/vm/child-linear.c	/^#define SIZE /;"	d	file:
SIZE	src/tests/vm/mmap-shuffle.c	/^#define SIZE /;"	d	file:
SIZE	src/tests/vm/page-linear.c	/^#define SIZE /;"	d	file:
SIZE	src/tests/vm/page-shuffle.c	/^#define SIZE /;"	d	file:
SIZET	src/lib/stdio.c	/^        SIZET = 8               \/* z *\/$/;"	e	enum:printf_conversion::__anon90bc09760203	file:
SIZE_MAX	src/lib/stdint.h	/^#define SIZE_MAX /;"	d
SORT_SIZE	src/examples/bubsort.c	/^#define SORT_SIZE /;"	d	file:
SOURCES	src/threads/build/Makefile	/^SOURCES = $(foreach dir,$(KERNEL_SUBDIRS),$($(dir)_SRC))$/;"	m
SPACE	src/lib/stdio.c	/^        SPACE = 1 << 2,         \/* ' ' *\/$/;"	e	enum:printf_conversion::__anon90bc09760103	file:
SPEAKER_GATE_ENABLE	src/devices/speaker.c	/^#define SPEAKER_GATE_ENABLE	/;"	d	file:
SPEAKER_PORT_GATE	src/devices/speaker.c	/^#define SPEAKER_PORT_GATE	/;"	d	file:
SRCDIR	src/examples/Makefile	/^SRCDIR = ..$/;"	m
SRCDIR	src/threads/build/Makefile	/^SRCDIR = ..\/..$/;"	m
STA_BSY	src/devices/ide.c	/^#define STA_BSY /;"	d	file:
STA_DRDY	src/devices/ide.c	/^#define STA_DRDY /;"	d	file:
STA_DRQ	src/devices/ide.c	/^#define STA_DRQ /;"	d	file:
STDIN_FILENO	src/lib/stdio.h	/^#define STDIN_FILENO /;"	d
STDOUT_FILENO	src/lib/stdio.h	/^#define STDOUT_FILENO /;"	d
STUB	src/threads/intr-stubs.S	/^#define STUB(/;"	d	file:
SWITCH_CUR	src/threads/switch.h	/^#define SWITCH_CUR /;"	d
SWITCH_NEXT	src/threads/switch.h	/^#define SWITCH_NEXT /;"	d
SYS_CHDIR	src/lib/syscall-nr.h	/^    SYS_CHDIR,                  \/* Change the current directory. *\/$/;"	e	enum:__anon65d9d4200103
SYS_CLOSE	src/lib/syscall-nr.h	/^    SYS_CLOSE,                  \/* Close a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_CREATE	src/lib/syscall-nr.h	/^    SYS_CREATE,                 \/* Create a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_EXEC	src/lib/syscall-nr.h	/^    SYS_EXEC,                   \/* Start another process. *\/$/;"	e	enum:__anon65d9d4200103
SYS_EXIT	src/lib/syscall-nr.h	/^    SYS_EXIT,                   \/* Terminate this process. *\/$/;"	e	enum:__anon65d9d4200103
SYS_FILESIZE	src/lib/syscall-nr.h	/^    SYS_FILESIZE,               \/* Obtain a file's size. *\/$/;"	e	enum:__anon65d9d4200103
SYS_HALT	src/lib/syscall-nr.h	/^    SYS_HALT,                   \/* Halt the operating system. *\/$/;"	e	enum:__anon65d9d4200103
SYS_INUMBER	src/lib/syscall-nr.h	/^    SYS_INUMBER                 \/* Returns the inode number for a fd. *\/$/;"	e	enum:__anon65d9d4200103
SYS_ISDIR	src/lib/syscall-nr.h	/^    SYS_ISDIR,                  \/* Tests if a fd represents a directory. *\/$/;"	e	enum:__anon65d9d4200103
SYS_MKDIR	src/lib/syscall-nr.h	/^    SYS_MKDIR,                  \/* Create a directory. *\/$/;"	e	enum:__anon65d9d4200103
SYS_MMAP	src/lib/syscall-nr.h	/^    SYS_MMAP,                   \/* Map a file into memory. *\/$/;"	e	enum:__anon65d9d4200103
SYS_MUNMAP	src/lib/syscall-nr.h	/^    SYS_MUNMAP,                 \/* Remove a memory mapping. *\/$/;"	e	enum:__anon65d9d4200103
SYS_OPEN	src/lib/syscall-nr.h	/^    SYS_OPEN,                   \/* Open a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_READ	src/lib/syscall-nr.h	/^    SYS_READ,                   \/* Read from a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_READDIR	src/lib/syscall-nr.h	/^    SYS_READDIR,                \/* Reads a directory entry. *\/$/;"	e	enum:__anon65d9d4200103
SYS_REMOVE	src/lib/syscall-nr.h	/^    SYS_REMOVE,                 \/* Delete a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_SEEK	src/lib/syscall-nr.h	/^    SYS_SEEK,                   \/* Change position in a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_TELL	src/lib/syscall-nr.h	/^    SYS_TELL,                   \/* Report current position in a file. *\/$/;"	e	enum:__anon65d9d4200103
SYS_WAIT	src/lib/syscall-nr.h	/^    SYS_WAIT,                   \/* Wait for a child process to die. *\/$/;"	e	enum:__anon65d9d4200103
SYS_WRITE	src/lib/syscall-nr.h	/^    SYS_WRITE,                  \/* Write to a file. *\/$/;"	e	enum:__anon65d9d4200103
Same	src/tests/Algorithm/Diff.pm	/^sub Same {$/;"	s
TAGS	src/Makefile	/^TAGS::$/;"	t
TAGS_SOURCES	src/Makefile	/^TAGS_SOURCES = find $(TAGS_SUBDIRS) -name \\*.[chS] -print$/;"	m
TAGS_SUBDIRS	src/Makefile	/^TAGS_SUBDIRS = $(BUILD_SUBDIRS) devices lib$/;"	m
TESTS_ARC4_H	src/tests/arc4.h	/^#define TESTS_ARC4_H$/;"	d
TESTS_CKSUM_H	src/tests/cksum.h	/^#define TESTS_CKSUM_H$/;"	d
TESTS_FILESYS_BASE_SYN_READ_H	src/tests/filesys/base/syn-read.h	/^#define TESTS_FILESYS_BASE_SYN_READ_H$/;"	d
TESTS_FILESYS_BASE_SYN_WRITE_H	src/tests/filesys/base/syn-write.h	/^#define TESTS_FILESYS_BASE_SYN_WRITE_H$/;"	d
TESTS_FILESYS_EXTENDED_MK_TREE_H	src/tests/filesys/extended/mk-tree.h	/^#define TESTS_FILESYS_EXTENDED_MK_TREE_H$/;"	d
TESTS_FILESYS_EXTENDED_SYN_RW_H	src/tests/filesys/extended/syn-rw.h	/^#define TESTS_FILESYS_EXTENDED_SYN_RW_H$/;"	d
TESTS_FILESYS_SEQ_TEST_H	src/tests/filesys/seq-test.h	/^#define TESTS_FILESYS_SEQ_TEST_H$/;"	d
TESTS_LIB_H	src/tests/lib.h	/^#define TESTS_LIB_H$/;"	d
TESTS_MAIN_H	src/tests/main.h	/^#define TESTS_MAIN_H$/;"	d
TESTS_THREADS_TESTS_H	src/tests/threads/tests.h	/^#define TESTS_THREADS_TESTS_H$/;"	d
TESTS_USERPROG_BOUNDARY_H	src/tests/userprog/boundary.h	/^#define TESTS_USERPROG_BOUNDARY_H$/;"	d
TESTS_VM_PARALLEL_MERGE	src/tests/vm/parallel-merge.h	/^#define TESTS_VM_PARALLEL_MERGE /;"	d
TESTS_VM_QSORT_H	src/tests/vm/qsort.h	/^#define TESTS_VM_QSORT_H /;"	d
TEST_SIZE	src/tests/filesys/base/lg-create.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/lg-full.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/lg-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/lg-seq-block.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/lg-seq-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/sm-create.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/sm-full.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/sm-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/sm-seq-block.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/base/sm-seq-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/extended/grow-create.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/extended/grow-seq-lg.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	src/tests/filesys/extended/grow-seq-sm.c	/^#define TEST_SIZE /;"	d	file:
THREADS_FLAGS_H	src/threads/flags.h	/^#define THREADS_FLAGS_H$/;"	d
THREADS_INIT_H	src/threads/init.h	/^#define THREADS_INIT_H$/;"	d
THREADS_INTERRUPT_H	src/threads/interrupt.h	/^#define THREADS_INTERRUPT_H$/;"	d
THREADS_INTR_STUBS_H	src/threads/intr-stubs.h	/^#define THREADS_INTR_STUBS_H$/;"	d
THREADS_IO_H	src/threads/io.h	/^#define THREADS_IO_H$/;"	d
THREADS_LOADER_H	src/threads/loader.h	/^#define THREADS_LOADER_H$/;"	d
THREADS_MALLOC_H	src/threads/malloc.h	/^#define THREADS_MALLOC_H$/;"	d
THREADS_PALLOC_H	src/threads/palloc.h	/^#define THREADS_PALLOC_H$/;"	d
THREADS_PTE_H	src/threads/pte.h	/^#define THREADS_PTE_H$/;"	d
THREADS_SWITCH_H	src/threads/switch.h	/^#define THREADS_SWITCH_H$/;"	d
THREADS_SYNCH_H	src/threads/synch.h	/^#define THREADS_SYNCH_H$/;"	d
THREADS_THREAD_H	src/threads/thread.h	/^#define THREADS_THREAD_H$/;"	d
THREADS_VADDR_H	src/threads/vaddr.h	/^#define THREADS_VADDR_H$/;"	d
THREAD_BLOCKED	src/threads/thread.h	/^    THREAD_BLOCKED,     \/* Waiting for an event to trigger. *\/$/;"	e	enum:thread_status
THREAD_CNT	src/tests/threads/mlfqs-load-60.c	/^#define THREAD_CNT /;"	d	file:
THREAD_CNT	src/tests/threads/mlfqs-load-avg.c	/^#define THREAD_CNT /;"	d	file:
THREAD_CNT	src/tests/threads/priority-fifo.c	/^#define THREAD_CNT /;"	d	file:
THREAD_DYING	src/threads/thread.h	/^    THREAD_DYING        \/* About to be destroyed. *\/$/;"	e	enum:thread_status
THREAD_MAGIC	src/threads/thread.c	/^#define THREAD_MAGIC /;"	d	file:
THREAD_READY	src/threads/thread.h	/^    THREAD_READY,       \/* Not running but ready to run. *\/$/;"	e	enum:thread_status
THREAD_RUNNING	src/threads/thread.h	/^    THREAD_RUNNING,     \/* Running thread. *\/$/;"	e	enum:thread_status
THR_REG	src/devices/serial.c	/^#define THR_REG /;"	d	file:
TID_ERROR	src/threads/thread.h	/^#define TID_ERROR /;"	d
TIMER_FREQ	src/devices/timer.h	/^#define TIMER_FREQ /;"	d
TIME_SLICE	src/threads/thread.c	/^#define TIME_SLICE /;"	d	file:
UCHAR_MAX	src/lib/limits.h	/^#define UCHAR_MAX /;"	d
UINT16_MAX	src/lib/stdint.h	/^#define UINT16_MAX /;"	d
UINT32_MAX	src/lib/stdint.h	/^#define UINT32_MAX /;"	d
UINT64_MAX	src/lib/stdint.h	/^#define UINT64_MAX /;"	d
UINT8_MAX	src/lib/stdint.h	/^#define UINT8_MAX /;"	d
UINTMAX_MAX	src/lib/stdint.h	/^#define UINTMAX_MAX /;"	d
UINTPTR_MAX	src/lib/stdint.h	/^#define UINTPTR_MAX /;"	d
UINT_MAX	src/lib/limits.h	/^#define UINT_MAX /;"	d
ULLONG_MAX	src/lib/limits.h	/^#define ULLONG_MAX /;"	d
ULONG_MAX	src/lib/limits.h	/^#define ULONG_MAX /;"	d
UNINIT	src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	e	enum:__anon83e3689f0103	file:
UNUSED	src/lib/debug.h	/^#define UNUSED /;"	d
USERPROG_EXCEPTION_H	src/userprog/exception.h	/^#define USERPROG_EXCEPTION_H$/;"	d
USERPROG_GDT_H	src/userprog/gdt.h	/^#define USERPROG_GDT_H$/;"	d
USERPROG_PAGEDIR_H	src/userprog/pagedir.h	/^#define USERPROG_PAGEDIR_H$/;"	d
USERPROG_PROCESS_H	src/userprog/process.h	/^#define USERPROG_PROCESS_H$/;"	d
USERPROG_SYSCALL_H	src/userprog/syscall.h	/^#define USERPROG_SYSCALL_H$/;"	d
USERPROG_TSS_H	src/userprog/tss.h	/^#define USERPROG_TSS_H$/;"	d
USHRT_MAX	src/lib/limits.h	/^#define USHRT_MAX /;"	d
USTAR_DIRECTORY	src/lib/ustar.h	/^    USTAR_DIRECTORY = '5',      \/* Directory. *\/$/;"	e	enum:ustar_type
USTAR_EOF	src/lib/ustar.h	/^    USTAR_EOF = -1              \/* End of archive (not an official value). *\/$/;"	e	enum:ustar_type
USTAR_HEADER_SIZE	src/lib/ustar.h	/^#define USTAR_HEADER_SIZE /;"	d
USTAR_REGULAR	src/lib/ustar.h	/^    USTAR_REGULAR = '0',        \/* Ordinary file. *\/$/;"	e	enum:ustar_type
Usage	src/utils/pintos	/^Usage: pintos [OPTION...] -- [ARGUMENT...]$/;"	l
ZERO	src/lib/stdio.c	/^        ZERO = 1 << 4,          \/* '0' *\/$/;"	e	enum:printf_conversion::__anon90bc09760103	file:
_Base	src/tests/Algorithm/Diff.pm	/^sub _Base() { 5 } # $me->[_Base]: Added to range's min and max$/;"	s
_ChkPos	src/tests/Algorithm/Diff.pm	/^sub _ChkPos$/;"	s
_ChkSeq	src/tests/Algorithm/Diff.pm	/^sub _ChkSeq$/;"	s
_End	src/tests/Algorithm/Diff.pm	/^sub _End()  { 3 } # $me->[_End]: Diff between forward and reverse pos$/;"	s
_GNU_SOURCE	src/utils/squish-pty.c	/^#define _GNU_SOURCE /;"	d	file:
_GNU_SOURCE	src/utils/squish-unix.c	/^#define _GNU_SOURCE /;"	d	file:
_Idx	src/tests/Algorithm/Diff.pm	/^sub _Idx()  { 0 } # $me->[_Idx]: Ref to array of hunk indices$/;"	s
_Min	src/tests/Algorithm/Diff.pm	/^sub _Min() { -2 } # Added to _Off to get min instead of max+1$/;"	s
_Off	src/tests/Algorithm/Diff.pm	/^sub _Off()  { 7 } # $me->[_Off]: Offset into _Idx for current position$/;"	s
_Pos	src/tests/Algorithm/Diff.pm	/^sub _Pos()  { 6 } # $me->[_Pos]: Which hunk is currently selected$/;"	s
_Same	src/tests/Algorithm/Diff.pm	/^sub _Same() { 4 } # $me->[_Same]: 1 if pos 1 contains unchanged items$/;"	s
__LIB_CTYPE_H	src/lib/ctype.h	/^#define __LIB_CTYPE_H$/;"	d
__LIB_DEBUG_H	src/lib/debug.h	/^#define __LIB_DEBUG_H$/;"	d
__LIB_INTTYPES_H	src/lib/inttypes.h	/^#define __LIB_INTTYPES_H$/;"	d
__LIB_KERNEL_BITMAP_H	src/lib/kernel/bitmap.h	/^#define __LIB_KERNEL_BITMAP_H$/;"	d
__LIB_KERNEL_CONSOLE_H	src/lib/kernel/console.h	/^#define __LIB_KERNEL_CONSOLE_H$/;"	d
__LIB_KERNEL_HASH_H	src/lib/kernel/hash.h	/^#define __LIB_KERNEL_HASH_H$/;"	d
__LIB_KERNEL_LIST_H	src/lib/kernel/list.h	/^#define __LIB_KERNEL_LIST_H$/;"	d
__LIB_KERNEL_STDIO_H	src/lib/kernel/stdio.h	/^#define __LIB_KERNEL_STDIO_H$/;"	d
__LIB_LIMITS_H	src/lib/limits.h	/^#define __LIB_LIMITS_H$/;"	d
__LIB_PACKED_H	src/lib/packed.h	/^#define __LIB_PACKED_H$/;"	d
__LIB_RANDOM_H	src/lib/random.h	/^#define __LIB_RANDOM_H$/;"	d
__LIB_ROUND_H	src/lib/round.h	/^#define __LIB_ROUND_H$/;"	d
__LIB_STDARG_H	src/lib/stdarg.h	/^#define __LIB_STDARG_H$/;"	d
__LIB_STDBOOL_H	src/lib/stdbool.h	/^#define __LIB_STDBOOL_H$/;"	d
__LIB_STDDEF_H	src/lib/stddef.h	/^#define __LIB_STDDEF_H$/;"	d
__LIB_STDINT_H	src/lib/stdint.h	/^#define __LIB_STDINT_H$/;"	d
__LIB_STDIO_H	src/lib/stdio.h	/^#define __LIB_STDIO_H$/;"	d
__LIB_STDLIB_H	src/lib/stdlib.h	/^#define __LIB_STDLIB_H$/;"	d
__LIB_STRING_H	src/lib/string.h	/^#define __LIB_STRING_H$/;"	d
__LIB_SYSCALL_NR_H	src/lib/syscall-nr.h	/^#define __LIB_SYSCALL_NR_H$/;"	d
__LIB_USER_STDIO_H	src/lib/user/stdio.h	/^#define __LIB_USER_STDIO_H$/;"	d
__LIB_USER_SYSCALL_H	src/lib/user/syscall.h	/^#define __LIB_USER_SYSCALL_H$/;"	d
__LIB_USTAR_H	src/lib/ustar.h	/^#define __LIB_USTAR_H$/;"	d
__anon65d9d4200103	src/lib/syscall-nr.h	/^  {$/;"	g
__anon83e3689f0103	src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	g	file:
__anon90bc09760103	src/lib/stdio.c	/^      {$/;"	g	struct:printf_conversion	file:
__anon90bc09760203	src/lib/stdio.c	/^      {$/;"	g	struct:printf_conversion	file:
__bool_true_false_are_defined	src/lib/stdbool.h	/^#define __bool_true_false_are_defined	/;"	d
__divdi3	src/lib/arithmetic.c	/^__divdi3 (long long n, long long d) $/;"	f	typeref:typename:long long
__executable_start	src/lib/user/user.lds	/^  __executable_start = 0x08048000 + SIZEOF_HEADERS;$/;"	s
__moddi3	src/lib/arithmetic.c	/^__moddi3 (long long n, long long d) $/;"	f	typeref:typename:long long
__printf	src/lib/stdio.c	/^__printf (const char *format,$/;"	f	typeref:typename:void
__udivdi3	src/lib/arithmetic.c	/^__udivdi3 (unsigned long long n, unsigned long long d) $/;"	f	typeref:typename:unsigned long long
__umoddi3	src/lib/arithmetic.c	/^__umoddi3 (unsigned long long n, unsigned long long d) $/;"	f	typeref:typename:unsigned long long
__vprintf	src/lib/stdio.c	/^__vprintf (const char *format, va_list args,$/;"	f	typeref:typename:void
_end	src/threads/build/threads/kernel.lds.s	/^  _end = .;$/;"	d
_end	src/threads/kernel.lds.S	/^  _end = .;$/;"	s
_end_bss	src/threads/build/threads/kernel.lds.s	/^  _end_bss = .;$/;"	d
_end_bss	src/threads/kernel.lds.S	/^  _end_bss = .;$/;"	s
_end_kernel_text	src/threads/build/threads/kernel.lds.s	/^       _end_kernel_text = .; }$/;"	d
_end_kernel_text	src/threads/kernel.lds.S	/^	      _end_kernel_text = .; }$/;"	s	section:.rodata
_longestCommonSubsequence	src/tests/Algorithm/Diff.pm	/^sub _longestCommonSubsequence$/;"	s
_replaceNextLargerWith	src/tests/Algorithm/Diff.pm	/^sub _replaceNextLargerWith$/;"	s
_signature	src/threads/build/threads/kernel.lds.s	/^     _signature = .; LONG(0xaa55aa55) }$/;"	d
_signature	src/threads/kernel.lds.S	/^	    _signature = .; LONG(0xaa55aa55) }$/;"	s	section:.data
_start	src/lib/user/entry.c	/^_start (int argc, char *argv[]) $/;"	f	typeref:typename:void
_start	src/threads/build/threads/kernel.lds.s	/^  . = _start + SIZEOF_HEADERS;$/;"	d
_start	src/threads/build/threads/kernel.lds.s	/^  _start = 0xc0000000 + 0x20000;$/;"	d
_start	src/threads/kernel.lds.S	/^  _start = LOADER_PHYS_BASE + LOADER_KERN_BASE;$/;"	s
_start_bss	src/threads/build/threads/kernel.lds.s	/^  _start_bss = .;$/;"	d
_start_bss	src/threads/kernel.lds.S	/^  _start_bss = .;$/;"	s
_withPositionsOfInInterval	src/tests/Algorithm/Diff.pm	/^sub _withPositionsOfInInterval$/;"	s
a	src/tests/threads/priority-donate-nest.c	/^    struct lock *a;$/;"	m	struct:locks	typeref:struct:lock *	file:
a/bochs.h	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^--- a\/bochs.h$/;"	m
a/cpu/exception.cc	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^--- a\/cpu\/exception.cc$/;"	m
a/gdbstub.cc	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^--- a\/gdbstub.cc$/;"	m
a/iodev/pit82c54.cc	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^--- a\/iodev\/pit82c54.cc$/;"	m
a/main.cc	src/misc/bochs-2.6.2-jitter-plus-segv.patch	/^--- a\/main.cc$/;"	m
a_thread_func	src/tests/threads/priority-donate-multiple.c	/^a_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
a_thread_func	src/tests/threads/priority-donate-multiple.c	/^static thread_func a_thread_func;$/;"	v	typeref:typename:thread_func	file:
a_thread_func	src/tests/threads/priority-donate-multiple2.c	/^a_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
a_thread_func	src/tests/threads/priority-donate-multiple2.c	/^static thread_func a_thread_func;$/;"	v	typeref:typename:thread_func	file:
acquire1_thread_func	src/tests/threads/priority-donate-one.c	/^acquire1_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
acquire1_thread_func	src/tests/threads/priority-donate-one.c	/^static thread_func acquire1_thread_func;$/;"	v	typeref:typename:thread_func	file:
acquire2_thread_func	src/tests/threads/priority-donate-one.c	/^acquire2_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
acquire2_thread_func	src/tests/threads/priority-donate-one.c	/^static thread_func acquire2_thread_func;$/;"	v	typeref:typename:thread_func	file:
acquire_console	src/lib/kernel/console.c	/^acquire_console (void) $/;"	f	typeref:typename:void	file:
acquire_thread_func	src/tests/threads/priority-donate-lower.c	/^acquire_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
acquire_thread_func	src/tests/threads/priority-donate-lower.c	/^static thread_func acquire_thread_func;$/;"	v	typeref:typename:thread_func	file:
action	src/threads/init.c	/^  struct action $/;"	s	function:run_actions	file:
active	src/utils/squish-pty.c	/^      bool active;$/;"	m	struct:relay::pipe	typeref:typename:bool	file:
active	src/utils/squish-unix.c	/^      bool active;$/;"	m	struct:relay::pipe	typeref:typename:bool	file:
active_pd	src/userprog/pagedir.c	/^active_pd (void) $/;"	f	typeref:typename:uint32_t *	file:
add_char	src/lib/user/console.c	/^add_char (char c, void *aux_) $/;"	f	typeref:typename:void	file:
add_file	src/utils/pintos	/^sub add_file {$/;"	s
alarm_priority_thread	src/tests/threads/alarm-priority.c	/^alarm_priority_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
alarm_priority_thread	src/tests/threads/alarm-priority.c	/^static thread_func alarm_priority_thread;$/;"	v	typeref:typename:thread_func	file:
all	src/Makefile	/^all::$/;"	t
all	src/threads/build/Makefile	/^all: kernel.bin loader.bin$/;"	t
all	src/utils/Makefile	/^all: setitimer-helper squish-pty squish-unix$/;"	t
all_blocks	src/devices/block.c	/^static struct list all_blocks = LIST_INITIALIZER (all_blocks);$/;"	v	typeref:struct:list	file:
all_list	src/threads/thread.c	/^static struct list all_list;$/;"	v	typeref:struct:list	file:
allelem	src/threads/thread.h	/^    struct list_elem allelem;           \/* List element for all threads list. *\/$/;"	m	struct:thread	typeref:struct:list_elem
alloc_frame	src/threads/thread.c	/^alloc_frame (struct thread *t, size_t size) $/;"	f	typeref:typename:void *	file:
allocate_tid	src/threads/thread.c	/^allocate_tid (void) $/;"	f	typeref:typename:tid_t	file:
arc4	src/tests/arc4.h	/^struct arc4$/;"	s
arc4_crypt	src/tests/arc4.c	/^arc4_crypt (struct arc4 *arc4, void *buf_, size_t size)$/;"	f	typeref:typename:void
arc4_crypt	src/tests/arc4.pm	/^sub arc4_crypt {$/;"	s
arc4_init	src/tests/arc4.c	/^arc4_init (struct arc4 *arc4, const void *key_, size_t size)$/;"	f	typeref:typename:void
arc4_init	src/tests/arc4.pm	/^sub arc4_init {$/;"	s
archive_directory	src/tests/filesys/extended/tar.c	/^archive_directory (char file_name[], size_t file_name_size, int file_fd,$/;"	f	typeref:typename:bool	file:
archive_file	src/tests/filesys/extended/tar.c	/^archive_file (char file_name[], size_t file_name_size,$/;"	f	typeref:typename:bool	file:
archive_ordinary_file	src/tests/filesys/extended/tar.c	/^archive_ordinary_file (const char *file_name, int file_fd,$/;"	f	typeref:typename:bool	file:
arena	src/threads/malloc.c	/^struct arena $/;"	s	file:
arena_to_block	src/threads/malloc.c	/^arena_to_block (struct arena *a, size_t idx) $/;"	f	typeref:struct:block *	file:
argc	src/threads/init.c	/^      int argc;                         \/* # of args, including action name. *\/$/;"	m	struct:run_actions::action	typeref:typename:int	file:
assemble_disk	src/utils/Pintos.pm	/^sub assemble_disk {$/;"	s
ata_disk	src/devices/ide.c	/^struct ata_disk$/;"	s	file:
atoi	src/lib/stdlib.c	/^atoi (const char *s) $/;"	f	typeref:typename:int
aux	src/devices/block.c	/^    void *aux;                          \/* Extra data owned by driver. *\/$/;"	m	struct:block	typeref:typename:void *	file:
aux	src/lib/kernel/hash.h	/^    void *aux;                  \/* Auxiliary data for `hash' and `less'. *\/$/;"	m	struct:hash	typeref:typename:void *
aux	src/threads/thread.c	/^    void *aux;                  \/* Auxiliary data for function. *\/$/;"	m	struct:kernel_thread_frame	typeref:typename:void *	file:
b	src/tests/threads/priority-donate-nest.c	/^    struct lock *b;$/;"	m	struct:locks	typeref:struct:lock *	file:
b_thread_func	src/tests/threads/priority-donate-multiple.c	/^b_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
b_thread_func	src/tests/threads/priority-donate-multiple.c	/^static thread_func b_thread_func;$/;"	v	typeref:typename:thread_func	file:
b_thread_func	src/tests/threads/priority-donate-multiple2.c	/^b_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
b_thread_func	src/tests/threads/priority-donate-multiple2.c	/^static thread_func b_thread_func;$/;"	v	typeref:typename:thread_func	file:
back_link	src/userprog/tss.c	/^    uint16_t back_link, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
backspace	src/examples/shell.c	/^backspace (char **pos, char line[]) $/;"	f	typeref:typename:bool	file:
barrier	src/threads/synch.h	/^#define barrier(/;"	d
base	src/lib/stdio.c	/^    int base;                   \/* Base. *\/$/;"	m	struct:integer_base	typeref:typename:int	file:
base	src/threads/palloc.c	/^    uint8_t *base;                      \/* Base of pool. *\/$/;"	m	struct:pool	typeref:typename:uint8_t *	file:
base_X	src/lib/stdio.c	/^static const struct integer_base base_X = {16, "0123456789ABCDEF", 'X', 4};$/;"	v	typeref:typename:const struct integer_base	file:
base_d	src/lib/stdio.c	/^static const struct integer_base base_d = {10, "0123456789", 0, 3};$/;"	v	typeref:typename:const struct integer_base	file:
base_o	src/lib/stdio.c	/^static const struct integer_base base_o = {8, "01234567", 0, 3};$/;"	v	typeref:typename:const struct integer_base	file:
base_x	src/lib/stdio.c	/^static const struct integer_base base_x = {16, "0123456789abcdef", 'x', 4};$/;"	v	typeref:typename:const struct integer_base	file:
bcd_to_bin	src/devices/rtc.c	/^bcd_to_bin (uint8_t x)$/;"	f	typeref:typename:int	file:
binary_search	src/lib/stdlib.c	/^binary_search (const void *key, const void *array, size_t cnt, size_t size,$/;"	f	typeref:typename:void *
bit_cnt	src/lib/kernel/bitmap.c	/^    size_t bit_cnt;     \/* Number of bits. *\/$/;"	m	struct:bitmap	typeref:typename:size_t	file:
bit_mask	src/lib/kernel/bitmap.c	/^bit_mask (size_t bit_idx) $/;"	f	typeref:typename:elem_type	file:
bitmap	src/lib/kernel/bitmap.c	/^struct bitmap$/;"	s	file:
bitmap	src/userprog/tss.c	/^    uint16_t trace, bitmap;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
bitmap_all	src/lib/kernel/bitmap.c	/^bitmap_all (const struct bitmap *b, size_t start, size_t cnt) $/;"	f	typeref:typename:bool
bitmap_any	src/lib/kernel/bitmap.c	/^bitmap_any (const struct bitmap *b, size_t start, size_t cnt) $/;"	f	typeref:typename:bool
bitmap_buf_size	src/lib/kernel/bitmap.c	/^bitmap_buf_size (size_t bit_cnt) $/;"	f	typeref:typename:size_t
bitmap_contains	src/lib/kernel/bitmap.c	/^bitmap_contains (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:bool
bitmap_count	src/lib/kernel/bitmap.c	/^bitmap_count (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:size_t
bitmap_create	src/lib/kernel/bitmap.c	/^bitmap_create (size_t bit_cnt) $/;"	f	typeref:struct:bitmap *
bitmap_create_in_buf	src/lib/kernel/bitmap.c	/^bitmap_create_in_buf (size_t bit_cnt, void *block, size_t block_size UNUSED)$/;"	f	typeref:struct:bitmap *
bitmap_destroy	src/lib/kernel/bitmap.c	/^bitmap_destroy (struct bitmap *b) $/;"	f	typeref:typename:void
bitmap_dump	src/lib/kernel/bitmap.c	/^bitmap_dump (const struct bitmap *b) $/;"	f	typeref:typename:void
bitmap_file_size	src/lib/kernel/bitmap.c	/^bitmap_file_size (const struct bitmap *b) $/;"	f	typeref:typename:size_t
bitmap_flip	src/lib/kernel/bitmap.c	/^bitmap_flip (struct bitmap *b, size_t bit_idx) $/;"	f	typeref:typename:void
bitmap_mark	src/lib/kernel/bitmap.c	/^bitmap_mark (struct bitmap *b, size_t bit_idx) $/;"	f	typeref:typename:void
bitmap_none	src/lib/kernel/bitmap.c	/^bitmap_none (const struct bitmap *b, size_t start, size_t cnt) $/;"	f	typeref:typename:bool
bitmap_read	src/lib/kernel/bitmap.c	/^bitmap_read (struct bitmap *b, struct file *file) $/;"	f	typeref:typename:bool
bitmap_reset	src/lib/kernel/bitmap.c	/^bitmap_reset (struct bitmap *b, size_t bit_idx) $/;"	f	typeref:typename:void
bitmap_scan	src/lib/kernel/bitmap.c	/^bitmap_scan (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:size_t
bitmap_scan_and_flip	src/lib/kernel/bitmap.c	/^bitmap_scan_and_flip (struct bitmap *b, size_t start, size_t cnt, bool value)$/;"	f	typeref:typename:size_t
bitmap_set	src/lib/kernel/bitmap.c	/^bitmap_set (struct bitmap *b, size_t idx, bool value) $/;"	f	typeref:typename:void
bitmap_set_all	src/lib/kernel/bitmap.c	/^bitmap_set_all (struct bitmap *b, bool value) $/;"	f	typeref:typename:void
bitmap_set_multiple	src/lib/kernel/bitmap.c	/^bitmap_set_multiple (struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:void
bitmap_size	src/lib/kernel/bitmap.c	/^bitmap_size (const struct bitmap *b)$/;"	f	typeref:typename:size_t
bitmap_test	src/lib/kernel/bitmap.c	/^bitmap_test (const struct bitmap *b, size_t idx) $/;"	f	typeref:typename:bool
bitmap_write	src/lib/kernel/bitmap.c	/^bitmap_write (const struct bitmap *b, struct file *file)$/;"	f	typeref:typename:bool
bits	src/lib/kernel/bitmap.c	/^    elem_type *bits;    \/* Elements that represent bits. *\/$/;"	m	struct:bitmap	typeref:typename:elem_type *	file:
block	src/devices/block.c	/^struct block$/;"	s	file:
block	src/devices/partition.c	/^    struct block *block;                \/* Underlying block device. *\/$/;"	m	struct:partition	typeref:struct:block *	file:
block	src/threads/malloc.c	/^struct block $/;"	s	file:
block_by_role	src/devices/block.c	/^static struct block *block_by_role[BLOCK_ROLE_CNT];$/;"	v	typeref:struct:block * []	file:
block_first	src/devices/block.c	/^block_first (void)$/;"	f	typeref:struct:block *
block_get_by_name	src/devices/block.c	/^block_get_by_name (const char *name)$/;"	f	typeref:struct:block *
block_get_role	src/devices/block.c	/^block_get_role (enum block_type role)$/;"	f	typeref:struct:block *
block_name	src/devices/block.c	/^block_name (struct block *block)$/;"	f	typeref:typename:const char *
block_next	src/devices/block.c	/^block_next (struct block *block)$/;"	f	typeref:struct:block *
block_operations	src/devices/block.h	/^struct block_operations$/;"	s
block_print_stats	src/devices/block.c	/^block_print_stats (void)$/;"	f	typeref:typename:void
block_read	src/devices/block.c	/^block_read (struct block *block, block_sector_t sector, void *buffer)$/;"	f	typeref:typename:void
block_register	src/devices/block.c	/^block_register (const char *name, enum block_type type,$/;"	f	typeref:struct:block *
block_sector_t	src/devices/block.h	/^typedef uint32_t block_sector_t;$/;"	t	typeref:typename:uint32_t
block_set_role	src/devices/block.c	/^block_set_role (enum block_type role, struct block *block)$/;"	f	typeref:typename:void
block_size	src/devices/block.c	/^block_size (struct block *block)$/;"	f	typeref:typename:block_sector_t
block_size	src/threads/malloc.c	/^    size_t block_size;          \/* Size of each element in bytes. *\/$/;"	m	struct:desc	typeref:typename:size_t	file:
block_size	src/threads/malloc.c	/^block_size (void *block) $/;"	f	typeref:typename:size_t	file:
block_thread	src/tests/threads/mlfqs-block.c	/^block_thread (void *lock_) $/;"	f	typeref:typename:void	file:
block_to_arena	src/threads/malloc.c	/^block_to_arena (struct block *b)$/;"	f	typeref:struct:arena *	file:
block_type	src/devices/block.c	/^block_type (struct block *block)$/;"	f	typeref:enum:block_type
block_type	src/devices/block.h	/^enum block_type$/;"	g
block_type_name	src/devices/block.c	/^block_type_name (enum block_type type)$/;"	f	typeref:typename:const char *
block_write	src/devices/block.c	/^block_write (struct block *block, block_sector_t sector, const void *buffer)$/;"	f	typeref:typename:void
blocks_per_arena	src/threads/malloc.c	/^    size_t blocks_per_arena;    \/* Number of blocks in an arena. *\/$/;"	m	struct:desc	typeref:typename:size_t	file:
bochs-2.2.6.orig/Makefile.in	src/misc/bochs-2.2.6-solaris-link.patch	/^--- bochs-2.2.6.orig\/Makefile.in	2006-04-03 16:34:51.170387000 -0700$/;"	m
bochs-2.2.6.orig/cpu/exception.cc	src/misc/bochs-2.2.6-triple-fault.patch	/^--- bochs-2.2.6.orig\/cpu\/exception.cc$/;"	m
bochs-2.2.6.orig/gdbstub.cc	src/misc/bochs-2.2.6-big-endian.patch	/^--- bochs-2.2.6.orig\/gdbstub.cc	2006-01-17 09:15:29.000000000 -0800$/;"	m
bochs-2.2.6.orig/gdbstub.cc	src/misc/bochs-2.2.6-triple-fault.patch	/^--- bochs-2.2.6.orig\/gdbstub.cc$/;"	m
bochs-2.2.6.orig/iodev/pit82c54.cc	src/misc/bochs-2.2.6-jitter.patch	/^--- bochs-2.2.6.orig\/iodev\/pit82c54.cc	2006-01-08 12:39:08.000000000 -0800$/;"	m
bochs-2.2.6.orig/main.cc	src/misc/bochs-2.2.6-jitter.patch	/^--- bochs-2.2.6.orig\/main.cc	2006-01-22 04:31:15.000000000 -0800$/;"	m
bochs-2.2.6/bochs.h.orig	src/misc/bochs-2.2.6-jitter.patch	/^--- bochs-2.2.6\/bochs.h.orig	2006-01-28 08:16:02.000000000 -0800$/;"	m
bochs-2.2.6/bochs.h~	src/misc/bochs-2.2.6-page-fault-segv.patch	/^--- bochs-2.2.6\/bochs.h~ 2006-09-28 15:51:39.000000000 -0700$/;"	m
bochs-2.2.6/bx_debug/symbols.cc	src/misc/bochs-2.2.6-namespace.patch	/^--- bochs-2.2.6\/bx_debug\/symbols.cc	2011-08-19 11:04:11.760139836 -0600$/;"	m
bochs-2.2.6/cpu/exception.cc~	src/misc/bochs-2.2.6-page-fault-segv.patch	/^--- bochs-2.2.6\/cpu\/exception.cc~ 2006-09-28 15:51:39.000000000 -0700$/;"	m
bochs-2.2.6/gdbstub.cc	src/misc/bochs-2.2.6-gdbstub-ENN.patch	/^--- bochs-2.2.6\/gdbstub.cc	2006-01-17 12:15:29.000000000 -0500$/;"	m
bochs-2.2.6/gdbstub.cc~	src/misc/bochs-2.2.6-page-fault-segv.patch	/^--- bochs-2.2.6\/gdbstub.cc~ 2006-09-28 15:51:39.000000000 -0700$/;"	m
bochs-2.2.6/iodev/hdimage.h~	src/misc/bochs-2.2.6-paranoia.patch	/^--- bochs-2.2.6\/iodev\/hdimage.h~ 2005-11-06 03:07:01.000000000 -0800$/;"	m
bochs-2.2.6/iodev/serial.cc	src/misc/bochs-2.2.6-solaris-tty.patch	/^--- bochs-2.2.6\/iodev\/serial.cc	2005-07-11 09:24:47.000000000 -0700$/;"	m
bochs-2.2.6/iodev/serial.h	src/misc/bochs-2.2.6-solaris-tty.patch	/^--- bochs-2.2.6\/iodev\/serial.h	2005-07-10 09:51:09.000000000 -0700$/;"	m
bochs-2.6.11.dist/bochs.h	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^--- bochs-2.6.11.dist\/bochs.h	2019-12-19 23:42:07.299552000 -0800$/;"	m
bochs-2.6.11.dist/configure	src/misc/bochs-2.6.11-link-tinfo.patch	/^--- bochs-2.6.11.dist\/configure	2020-01-04 23:37:34.155348000 -0800$/;"	m
bochs-2.6.11.dist/cpu/exception.cc	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^--- bochs-2.6.11.dist\/cpu\/exception.cc	2019-12-26 08:48:33.074097000 -0800$/;"	m
bochs-2.6.11.dist/gdbstub.cc	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^--- bochs-2.6.11.dist\/gdbstub.cc	2017-03-06 13:30:05.467768000 -0800$/;"	m
bochs-2.6.11.dist/iodev/pit82c54.cc	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^--- bochs-2.6.11.dist\/iodev\/pit82c54.cc	2018-05-14 11:17:04.955283000 -0700$/;"	m
bochs-2.6.11.dist/main.cc	src/misc/bochs-2.6.11-banner-stderr.patch	/^--- bochs-2.6.11.dist\/main.cc	2020-01-02 08:19:02.083668000 -0800$/;"	m
bochs-2.6.11.dist/main.cc	src/misc/bochs-2.6.11-jitter-plus-segv.patch	/^--- bochs-2.6.11.dist\/main.cc	2020-01-02 08:19:02.083668000 -0800$/;"	m
bochs-2.6.2.orig/configure	src/misc/bochs-2.6.2-xrandr-pkgconfig.patch	/^--- bochs-2.6.2.orig\/configure	2014-01-06 16:39:03.000000000 -0800$/;"	m
bochs-2.6.2/iodev/hdimage/hdimage.cc	src/misc/bochs-2.6.2-block-device-check.patch	/^--- bochs-2.6.2\/iodev\/hdimage\/hdimage.cc	2013-03-08 10:25:32.000000001 -0800$/;"	m
bochs-2.6.2/main.cc	src/misc/bochs-2.6.2-banner-stderr.patch	/^--- bochs-2.6.2\/main.cc	2014-01-06 23:29:42.000000001 -0800$/;"	m
bool	src/lib/stdbool.h	/^#define bool	/;"	d
boot	src/utils/pintos	/^boot: disk$/;"	l
bootable	src/devices/partition.c	/^      uint8_t bootable;         \/* 0x00=not bootable, 0x80=bootable. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t	file:
bsearch	src/lib/stdlib.c	/^bsearch (const void *key, const void *array, size_t cnt,$/;"	f	typeref:typename:void *
bss_init	src/threads/init.c	/^bss_init (void) $/;"	f	typeref:typename:void	file:
bubsort_SRC	src/examples/Makefile	/^bubsort_SRC = bubsort.c$/;"	m
bucket	src/lib/kernel/hash.h	/^    struct list *bucket;        \/* Current bucket. *\/$/;"	m	struct:hash_iterator	typeref:struct:list *
bucket_cnt	src/lib/kernel/hash.h	/^    size_t bucket_cnt;          \/* Number of buckets, a power of 2. *\/$/;"	m	struct:hash	typeref:typename:size_t
buckets	src/lib/kernel/hash.h	/^    struct list *buckets;       \/* Array of `bucket_cnt' lists. *\/$/;"	m	struct:hash	typeref:struct:list *
buf	src/devices/intq.h	/^    uint8_t buf[INTQ_BUFSIZE];  \/* Buffer. *\/$/;"	m	struct:intq	typeref:typename:uint8_t[]
buf	src/lib/user/console.c	/^    char buf[64];       \/* Character buffer. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:char[64]	file:
buf	src/tests/filesys/base/child-syn-read.c	/^static char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf	src/tests/filesys/base/child-syn-wrt.c	/^char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf	src/tests/filesys/base/syn-read.c	/^static char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf	src/tests/filesys/extended/grow-file-size.c	/^static char buf[2134];$/;"	v	typeref:typename:char[2134]	file:
buf	src/tests/filesys/extended/grow-sparse.c	/^static char buf[76543];$/;"	v	typeref:typename:char[76543]	file:
buf	src/tests/filesys/extended/grow-tell.c	/^static char buf[2134];$/;"	v	typeref:typename:char[2134]	file:
buf	src/tests/filesys/extended/syn-rw.c	/^char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf	src/tests/vm/child-linear.c	/^static char buf[SIZE];$/;"	v	typeref:typename:char[]	file:
buf	src/tests/vm/child-sort.c	/^unsigned char buf[128 * 1024];$/;"	v	typeref:typename:unsigned char[]
buf	src/tests/vm/mmap-shuffle.c	/^static char *buf = (char *) 0x10000000;$/;"	v	typeref:typename:char *	file:
buf	src/tests/vm/page-linear.c	/^static char buf[SIZE];$/;"	v	typeref:typename:char[]	file:
buf	src/tests/vm/page-shuffle.c	/^static char buf[SIZE];$/;"	v	typeref:typename:char[]	file:
buf	src/utils/squish-pty.c	/^      char buf[BUFSIZ];$/;"	m	struct:relay::pipe	typeref:typename:char[]	file:
buf	src/utils/squish-unix.c	/^      char buf[BUFSIZ];$/;"	m	struct:relay::pipe	typeref:typename:char[]	file:
buf1	src/tests/filesys/base/syn-remove.c	/^char buf1[1234];$/;"	v	typeref:typename:char[1234]
buf1	src/tests/filesys/base/syn-write.c	/^char buf1[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf1	src/tests/filesys/extended/child-syn-rw.c	/^static char buf1[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf1	src/tests/vm/page-merge-seq.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf1	src/tests/vm/parallel-merge.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf2	src/tests/filesys/base/syn-remove.c	/^char buf2[1234];$/;"	v	typeref:typename:char[1234]
buf2	src/tests/filesys/base/syn-write.c	/^char buf2[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf2	src/tests/filesys/extended/child-syn-rw.c	/^static char buf2[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf2	src/tests/vm/page-merge-seq.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf2	src/tests/vm/parallel-merge.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf_a	src/tests/filesys/extended/grow-two-files.c	/^static char buf_a[FILE_SIZE];$/;"	v	typeref:typename:char[]	file:
buf_b	src/tests/filesys/extended/grow-two-files.c	/^static char buf_b[FILE_SIZE];$/;"	v	typeref:typename:char[]	file:
buffer	src/devices/input.c	/^static struct intq buffer;$/;"	v	typeref:struct:intq	file:
busy_wait	src/devices/timer.c	/^busy_wait (int64_t loops) $/;"	f	typeref:typename:void NO_INLINE	file:
byte_cnt	src/lib/kernel/bitmap.c	/^byte_cnt (size_t bit_cnt)$/;"	f	typeref:typename:size_t	file:
byte_to_sector	src/filesys/inode.c	/^byte_to_sector (const struct inode *inode, off_t pos) $/;"	f	typeref:typename:block_sector_t	file:
bytes_to_sectors	src/filesys/inode.c	/^bytes_to_sectors (off_t size)$/;"	f	typeref:typename:size_t	file:
c_thread_func	src/tests/threads/priority-donate-multiple2.c	/^c_thread_func (void *a_ UNUSED) $/;"	f	typeref:typename:void	file:
c_thread_func	src/tests/threads/priority-donate-multiple2.c	/^static thread_func c_thread_func;$/;"	v	typeref:typename:thread_func	file:
calc_ustar_chksum	src/utils/pintos	/^sub calc_ustar_chksum {$/;"	s
calculate_chksum	src/lib/ustar.c	/^calculate_chksum (const struct ustar_header *h)$/;"	f	typeref:typename:unsigned int	file:
calloc	src/threads/malloc.c	/^calloc (size_t a, size_t b) $/;"	f	typeref:typename:void *
caps_lock	src/devices/kbd.c	/^static bool caps_lock;$/;"	v	typeref:typename:bool	file:
cat_SRC	src/examples/Makefile	/^cat_SRC = cat.c$/;"	m
changing_thread	src/tests/threads/priority-change.c	/^changing_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
changing_thread	src/tests/threads/priority-change.c	/^static thread_func changing_thread;$/;"	v	typeref:typename:thread_func	file:
channel	src/devices/ide.c	/^    struct channel *channel;    \/* Channel that disk is attached to. *\/$/;"	m	struct:ata_disk	typeref:struct:channel *	file:
channel	src/devices/ide.c	/^struct channel$/;"	s	file:
channels	src/devices/ide.c	/^static struct channel channels[CHANNEL_CNT];$/;"	v	typeref:struct:channel[]	file:
char_cnt	src/lib/user/console.c	/^    int char_cnt;       \/* Total characters written so far. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:int	file:
chars	src/devices/kbd.c	/^    const char *chars;          \/* chars[0] has scancode first_scancode,$/;"	m	struct:keymap	typeref:typename:const char *	file:
chdir	src/lib/user/syscall.c	/^chdir (const char *dir)$/;"	f	typeref:typename:bool
check_alarm	src/tests/threads/alarm.pm	/^sub check_alarm {$/;"	s
check_archive	src/tests/tests.pm	/^sub check_archive {$/;"	s
check_device_type	src/devices/ide.c	/^check_device_type (struct ata_disk *d) $/;"	f	typeref:typename:bool	file:
check_expected	src/tests/tests.pm	/^sub check_expected {$/;"	s
check_file	src/tests/lib.c	/^check_file (const char *file_name, const void *buf, size_t size) $/;"	f	typeref:typename:void
check_file_handle	src/tests/lib.c	/^check_file_handle (int fd,$/;"	f	typeref:typename:void
check_file_size	src/tests/filesys/extended/grow-file-size.c	/^check_file_size (int fd, long ofs) $/;"	f	typeref:typename:void	file:
check_for_keyword	src/tests/tests.pm	/^sub check_for_keyword {$/;"	s
check_for_panic	src/tests/tests.pm	/^sub check_for_panic {$/;"	s
check_for_triple_fault	src/tests/tests.pm	/^sub check_for_triple_fault {$/;"	s
check_mlfqs_fair	src/tests/threads/mlfqs.pm	/^sub check_mlfqs_fair {$/;"	s
check_partition	src/threads/loader.S	/^check_partition:$/;"	l
check_process_death	src/tests/vm/process_death.pm	/^sub check_process_death {$/;"	s
check_sector	src/devices/block.c	/^check_sector (struct block *block, block_sector_t sector)$/;"	f	typeref:typename:void	file:
check_tell	src/tests/filesys/extended/grow-tell.c	/^check_tell (int fd, long ofs) $/;"	f	typeref:typename:void	file:
checkf	src/tests/internal/stdio.c	/^checkf (const char *expect, const char *format, ...) $/;"	f	typeref:typename:void	file:
child_termination_mode	src/tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	g	file:
chksum	src/lib/ustar.c	/^    char chksum[8];             \/* Sum of octets in header as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
cksum	src/tests/cksum.c	/^cksum (const void *b_, size_t n)$/;"	f	typeref:typename:unsigned long
cksum	src/tests/cksum.pm	/^sub cksum {$/;"	s
cksum_file	src/tests/cksum.pm	/^sub cksum_file {$/;"	s
clean	src/Makefile	/^clean::$/;"	t
clean	src/threads/build/Makefile	/^clean::$/;"	t
clean	src/utils/Makefile	/^clean: $/;"	t
clear_row	src/devices/vga.c	/^clear_row (size_t y) $/;"	f	typeref:typename:void	file:
close	src/lib/user/syscall.c	/^close (int fd)$/;"	f	typeref:typename:void
cls	src/devices/vga.c	/^cls (void)$/;"	f	typeref:typename:void	file:
cmos_read	src/devices/rtc.c	/^cmos_read (uint8_t index)$/;"	f	typeref:typename:uint8_t	file:
cmp_SRC	src/examples/Makefile	/^cmp_SRC = cmp.c$/;"	m
common_checks	src/tests/tests.pm	/^sub common_checks {$/;"	s
compact_diff	src/tests/Algorithm/Diff.pm	/^sub compact_diff$/;"	s
compare_bytes	src/tests/lib.c	/^compare_bytes (const void *read_data_, const void *expected_data_, size_t size,$/;"	f	typeref:typename:void
compare_files	src/tests/tests.pm	/^sub compare_files {$/;"	s
compare_ints	src/tests/internal/stdlib.c	/^compare_ints (const void *a_, const void *b_) $/;"	f	typeref:typename:int	file:
compare_output	src/tests/tests.pm	/^sub compare_output {$/;"	s
compare_thunk	src/lib/stdlib.c	/^compare_thunk (const void *a, const void *b, void *aux) $/;"	f	typeref:typename:int	file:
completion_wait	src/devices/ide.c	/^    struct semaphore completion_wait;   \/* Up'd by interrupt handler. *\/$/;"	m	struct:channel	typeref:struct:semaphore	file:
cond_broadcast	src/threads/synch.c	/^cond_broadcast (struct condition *cond, struct lock *lock) $/;"	f	typeref:typename:void
cond_init	src/threads/synch.c	/^cond_init (struct condition *cond)$/;"	f	typeref:typename:void
cond_signal	src/threads/synch.c	/^cond_signal (struct condition *cond, struct lock *lock UNUSED) $/;"	f	typeref:typename:void
cond_wait	src/threads/synch.c	/^cond_wait (struct condition *cond, struct lock *lock) $/;"	f	typeref:typename:void
condition	src/tests/threads/priority-condvar.c	/^static struct condition condition;$/;"	v	typeref:struct:condition	file:
condition	src/threads/synch.h	/^struct condition $/;"	s
console_init	src/lib/kernel/console.c	/^console_init (void) $/;"	f	typeref:typename:void
console_lock	src/lib/kernel/console.c	/^static struct lock console_lock;$/;"	v	typeref:struct:lock	file:
console_lock_depth	src/lib/kernel/console.c	/^static int console_lock_depth;$/;"	v	typeref:typename:int	file:
console_locked_by_current_thread	src/lib/kernel/console.c	/^console_locked_by_current_thread (void) $/;"	f	typeref:typename:bool	file:
console_panic	src/lib/kernel/console.c	/^console_panic (void) $/;"	f	typeref:typename:void
console_print_stats	src/lib/kernel/console.c	/^console_print_stats (void) $/;"	f	typeref:typename:void
consume_some_resources	src/tests/userprog/no-vm/multi-oom.c	/^consume_some_resources (void)$/;"	f	typeref:typename:void	file:
consume_some_resources_and_die	src/tests/userprog/no-vm/multi-oom.c	/^consume_some_resources_and_die (int seed)$/;"	f	typeref:typename:int NO_INLINE	file:
copy_file	src/utils/Pintos.pm	/^sub copy_file {$/;"	s
copy_string_across_boundary	src/tests/userprog/boundary.c	/^copy_string_across_boundary (const char *src) $/;"	f	typeref:typename:char *
cp_SRC	src/examples/Makefile	/^cp_SRC = cp.c$/;"	m
cpu	src/utils/pintos	/^cpu: ips=1000000$/;"	l
cr3	src/userprog/tss.c	/^    uint32_t cr3;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
crctab	src/tests/cksum.c	/^static unsigned long crctab[] = {$/;"	v	typeref:typename:unsigned long[]	file:
create	src/lib/user/syscall.c	/^create (const char *file, unsigned initial_size)$/;"	f	typeref:typename:bool
cs	src/threads/interrupt.h	/^    uint16_t cs, :16;           \/* Code segment for eip. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
cs	src/userprog/tss.c	/^    uint16_t cs, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
cscope	src/Makefile	/^cscope:: cscope.files$/;"	t
cscope.files	src/Makefile	/^cscope.files::$/;"	t
cur	src/threads/switch.h	/^    struct thread *cur;         \/* 20: switch_threads()'s CUR argument. *\/$/;"	m	struct:switch_threads_frame	typeref:struct:thread *
cx	src/devices/vga.c	/^static size_t cx, cy;$/;"	v	typeref:typename:size_t	file:
cy	src/devices/vga.c	/^static size_t cx, cy;$/;"	v	typeref:typename:size_t	file:
cyl_sectors	src/utils/Pintos.pm	/^sub cyl_sectors {$/;"	s
data	src/filesys/inode.c	/^    struct inode_disk data;             \/* Inode content. *\/$/;"	m	struct:inode	typeref:struct:inode_disk	file:
dead_child_fd	src/utils/squish-pty.c	/^static int dead_child_fd;$/;"	v	typeref:typename:int	file:
debug_backtrace	src/lib/debug.c	/^debug_backtrace (void) $/;"	f	typeref:typename:void
debug_backtrace_all	src/lib/kernel/debug.c	/^debug_backtrace_all (void)$/;"	f	typeref:typename:void
debug_panic	src/lib/kernel/debug.c	/^debug_panic (const char *file, int line, const char *function,$/;"	f	typeref:typename:void
debug_panic	src/lib/user/debug.c	/^debug_panic (const char *file, int line, const char *function,$/;"	f	typeref:typename:void
deny_write	src/filesys/file.c	/^    bool deny_write;            \/* Has file_deny_write() been called? *\/$/;"	m	struct:file	typeref:typename:bool	file:
deny_write_cnt	src/filesys/inode.c	/^    int deny_write_cnt;                 \/* 0: writes ok, >0: deny writes. *\/$/;"	m	struct:inode	typeref:typename:int	file:
desc	src/threads/malloc.c	/^    struct desc *desc;          \/* Owning descriptor, null for big block. *\/$/;"	m	struct:arena	typeref:struct:desc *	file:
desc	src/threads/malloc.c	/^struct desc$/;"	s	file:
desc_cnt	src/threads/malloc.c	/^static size_t desc_cnt;         \/* Number of descriptors. *\/$/;"	v	typeref:typename:size_t	file:
descramble_ata_string	src/devices/ide.c	/^descramble_ata_string (char *string, int size) $/;"	f	typeref:typename:char *	file:
descs	src/threads/malloc.c	/^static struct desc descs[10];   \/* Descriptors. *\/$/;"	v	typeref:struct:desc[10]	file:
dev_no	src/devices/ide.c	/^    int dev_no;                 \/* Device 0 or 1 for master or slave. *\/$/;"	m	struct:ata_disk	typeref:typename:int	file:
devices	src/devices/ide.c	/^    struct ata_disk devices[2];     \/* The devices on this channel. *\/$/;"	m	struct:channel	typeref:struct:ata_disk[2]	file:
devices_SRC	src/threads/build/Makefile	/^devices_SRC  = devices\/pit.c		# Programmable interrupt timer chip.$/;"	m
devmajor	src/lib/ustar.c	/^    char devmajor[8];           \/* Device major number as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
devminor	src/lib/ustar.c	/^    char devminor[8];           \/* Device minor number as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
diff	src/tests/Algorithm/Diff.pm	/^sub diff$/;"	s
digits	src/lib/stdio.c	/^    const char *digits;         \/* Collection of digits. *\/$/;"	m	struct:integer_base	typeref:typename:const char *	file:
dir	src/filesys/directory.c	/^struct dir $/;"	s	file:
dir_add	src/filesys/directory.c	/^dir_add (struct dir *dir, const char *name, block_sector_t inode_sector)$/;"	f	typeref:typename:bool
dir_close	src/filesys/directory.c	/^dir_close (struct dir *dir) $/;"	f	typeref:typename:void
dir_create	src/filesys/directory.c	/^dir_create (block_sector_t sector, size_t entry_cnt)$/;"	f	typeref:typename:bool
dir_entry	src/filesys/directory.c	/^struct dir_entry $/;"	s	file:
dir_get_inode	src/filesys/directory.c	/^dir_get_inode (struct dir *dir) $/;"	f	typeref:struct:inode *
dir_lookup	src/filesys/directory.c	/^dir_lookup (const struct dir *dir, const char *name,$/;"	f	typeref:typename:bool
dir_open	src/filesys/directory.c	/^dir_open (struct inode *inode) $/;"	f	typeref:struct:dir *
dir_open_root	src/filesys/directory.c	/^dir_open_root (void)$/;"	f	typeref:struct:dir *
dir_readdir	src/filesys/directory.c	/^dir_readdir (struct dir *dir, char name[NAME_MAX + 1])$/;"	f	typeref:typename:bool
dir_remove	src/filesys/directory.c	/^dir_remove (struct dir *dir, const char *name) $/;"	f	typeref:typename:bool
dir_reopen	src/filesys/directory.c	/^dir_reopen (struct dir *dir) $/;"	f	typeref:struct:dir *
disk_geometry	src/utils/pintos	/^sub disk_geometry {$/;"	s
distclean	src/Makefile	/^distclean:: clean$/;"	t
div_round_up	src/utils/Pintos.pm	/^sub div_round_up {$/;"	s
divl	src/lib/arithmetic.c	/^divl (uint64_t n, uint32_t d)$/;"	f	typeref:typename:uint32_t	file:
do_compare	src/lib/stdlib.c	/^do_compare (unsigned char *array, size_t a_idx, size_t b_idx, size_t size,$/;"	f	typeref:typename:int	file:
do_format	src/filesys/filesys.c	/^do_format (void)$/;"	f	typeref:typename:void	file:
do_mkdir	src/tests/filesys/extended/mk-tree.c	/^do_mkdir (const char *format, ...) $/;"	f	typeref:typename:void	file:
do_remove	src/tests/filesys/extended/dir-rm-tree.c	/^do_remove (const char *format, ...) $/;"	f	typeref:typename:void	file:
do_set_part	src/utils/Pintos.pm	/^sub do_set_part {$/;"	s
do_swap	src/lib/stdlib.c	/^do_swap (unsigned char *array, size_t a_idx, size_t b_idx, size_t size)$/;"	f	typeref:typename:void	file:
do_touch	src/tests/filesys/extended/mk-tree.c	/^do_touch (const char *format, ...)$/;"	f	typeref:typename:void	file:
do_write	src/tests/filesys/extended/tar.c	/^do_write (int fd, const char *buffer, int size, bool *write_error) $/;"	f	typeref:typename:bool	file:
donor_thread_func	src/tests/threads/priority-donate-chain.c	/^donor_thread_func (void *locks_) $/;"	f	typeref:typename:void	file:
donor_thread_func	src/tests/threads/priority-donate-chain.c	/^static thread_func donor_thread_func;$/;"	v	typeref:typename:thread_func	file:
down_read	src/threads/synch.c	/^void down_read(struct rw_semaphore* rwsema)$/;"	f	typeref:typename:void
down_write	src/threads/synch.c	/^void down_write(struct rw_semaphore* rwsema)$/;"	f	typeref:typename:void
ds	src/threads/interrupt.h	/^    uint16_t ds, :16;           \/* Saved DS segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
ds	src/userprog/tss.c	/^    uint16_t ds, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
dst	src/tests/userprog/boundary.c	/^static char dst[8192] __attribute__ ((section (".testEndmem,\\"aw\\",@nobits#")));$/;"	v	typeref:typename:char[8192]	file:
duration	src/tests/threads/alarm-wait.c	/^    int duration;               \/* Number of ticks to sleep. *\/$/;"	m	struct:sleep_thread	typeref:typename:int	file:
e_ehsize	src/userprog/process.c	/^    Elf32_Half    e_ehsize;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_entry	src/userprog/process.c	/^    Elf32_Addr    e_entry;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Addr	file:
e_flags	src/userprog/process.c	/^    Elf32_Word    e_flags;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Word	file:
e_ident	src/userprog/process.c	/^    unsigned char e_ident[16];$/;"	m	struct:Elf32_Ehdr	typeref:typename:unsigned char[16]	file:
e_machine	src/userprog/process.c	/^    Elf32_Half    e_machine;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_phentsize	src/userprog/process.c	/^    Elf32_Half    e_phentsize;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_phnum	src/userprog/process.c	/^    Elf32_Half    e_phnum;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_phoff	src/userprog/process.c	/^    Elf32_Off     e_phoff;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Off	file:
e_shentsize	src/userprog/process.c	/^    Elf32_Half    e_shentsize;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_shnum	src/userprog/process.c	/^    Elf32_Half    e_shnum;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_shoff	src/userprog/process.c	/^    Elf32_Off     e_shoff;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Off	file:
e_shstrndx	src/userprog/process.c	/^    Elf32_Half    e_shstrndx;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_type	src/userprog/process.c	/^    Elf32_Half    e_type;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_version	src/userprog/process.c	/^    Elf32_Word    e_version;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Word	file:
eax	src/threads/interrupt.h	/^    uint32_t eax;               \/* Saved EAX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
eax	src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
ebp	src/threads/interrupt.h	/^    uint32_t ebp;               \/* Saved EBP. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
ebp	src/threads/switch.h	/^    uint32_t ebp;               \/*  8: Saved %ebp. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
ebp	src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
ebx	src/threads/interrupt.h	/^    uint32_t ebx;               \/* Saved EBX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
ebx	src/threads/switch.h	/^    uint32_t ebx;               \/* 12: Saved %ebx. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
ebx	src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
echo_SRC	src/examples/Makefile	/^echo_SRC = echo.c$/;"	m
ecx	src/threads/interrupt.h	/^    uint32_t ecx;               \/* Saved ECX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
ecx	src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
edi	src/threads/interrupt.h	/^    uint32_t edi;               \/* Saved EDI. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
edi	src/threads/switch.h	/^    uint32_t edi;               \/*  0: Saved %edi. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
edi	src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
edx	src/threads/interrupt.h	/^    uint32_t edx;               \/* Saved EDX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
edx	src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
eflags	src/threads/interrupt.h	/^    uint32_t eflags;            \/* Saved CPU flags. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
eflags	src/userprog/tss.c	/^    uint32_t eflags;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
eip	src/threads/interrupt.h	/^    void (*eip) (void);         \/* Next instruction to execute. *\/$/;"	m	struct:intr_frame	typeref:typename:void (*)(void)
eip	src/threads/switch.h	/^    void (*eip) (void);         \/* 16: Return address. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:void (*)(void)
eip	src/threads/switch.h	/^    void (*eip) (void);$/;"	m	struct:switch_entry_frame	typeref:typename:void (*)(void)
eip	src/threads/thread.c	/^    void *eip;                  \/* Return address. *\/$/;"	m	struct:kernel_thread_frame	typeref:typename:void *	file:
eip	src/userprog/tss.c	/^    void (*eip) (void);$/;"	m	struct:tss	typeref:typename:void (*)(void)	file:
elem	src/filesys/inode.c	/^    struct list_elem elem;              \/* Element in inode list. *\/$/;"	m	struct:inode	typeref:struct:list_elem	file:
elem	src/lib/kernel/hash.h	/^    struct hash_elem *elem;     \/* Current hash element in current bucket. *\/$/;"	m	struct:hash_iterator	typeref:struct:hash_elem *
elem	src/tests/internal/list.c	/^    struct list_elem elem;      \/* List element. *\/$/;"	m	struct:value	typeref:struct:list_elem	file:
elem	src/threads/synch.c	/^    struct list_elem elem;              \/* List element. *\/$/;"	m	struct:semaphore_elem	typeref:struct:list_elem	file:
elem	src/threads/thread.h	/^    struct list_elem elem;              \/* List element. *\/$/;"	m	struct:thread	typeref:struct:list_elem
elem_cnt	src/lib/kernel/bitmap.c	/^elem_cnt (size_t bit_cnt)$/;"	f	typeref:typename:size_t	file:
elem_cnt	src/lib/kernel/hash.h	/^    size_t elem_cnt;            \/* Number of elements in table. *\/$/;"	m	struct:hash	typeref:typename:size_t
elem_idx	src/lib/kernel/bitmap.c	/^elem_idx (size_t bit_idx) $/;"	f	typeref:typename:size_t	file:
elem_type	src/lib/kernel/bitmap.c	/^typedef unsigned long elem_type;$/;"	t	typeref:typename:unsigned long	file:
end_chs	src/devices/partition.c	/^      uint8_t end_chs[3];       \/* Encoded ending cylinder, head, sector. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t[3]	file:
error_code	src/threads/interrupt.h	/^    uint32_t error_code;        \/* Error code. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
es	src/threads/interrupt.h	/^    uint16_t es, :16;           \/* Saved ES segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
es	src/userprog/tss.c	/^    uint16_t es, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
esi	src/threads/interrupt.h	/^    uint32_t esi;               \/* Saved ESI. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
esi	src/threads/switch.h	/^    uint32_t esi;               \/*  4: Saved %esi. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
esi	src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
esp	src/threads/interrupt.h	/^    void *esp;                  \/* Saved stack pointer. *\/$/;"	m	struct:intr_frame	typeref:typename:void *
esp	src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
esp0	src/userprog/tss.c	/^    void *esp0;                         \/* Ring 0 stack virtual address. *\/$/;"	m	struct:tss	typeref:typename:void *	file:
esp1	src/userprog/tss.c	/^    void *esp1;$/;"	m	struct:tss	typeref:typename:void *	file:
esp2	src/userprog/tss.c	/^    void *esp2;$/;"	m	struct:tss	typeref:typename:void *	file:
esp_dummy	src/threads/interrupt.h	/^    uint32_t esp_dummy;         \/* Not used. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
exception_init	src/userprog/exception.c	/^exception_init (void) $/;"	f	typeref:typename:void
exception_print_stats	src/userprog/exception.c	/^exception_print_stats (void) $/;"	f	typeref:typename:void
exec	src/lib/user/syscall.c	/^exec (const char *file)$/;"	f	typeref:typename:pid_t
exec_children	src/tests/lib.c	/^exec_children (const char *child_name, pid_t pids[], size_t child_cnt) $/;"	f	typeref:typename:void
exec_setitimer	src/utils/pintos	/^sub exec_setitimer {$/;"	s
exit	src/lib/user/syscall.c	/^exit (int status)$/;"	f	typeref:typename:void
expecting_interrupt	src/devices/ide.c	/^    bool expecting_interrupt;   \/* True if an interrupt is expected, false if$/;"	m	struct:channel	typeref:typename:bool	file:
extend_file	src/utils/pintos	/^sub extend_file {$/;"	s
fail	src/tests/lib.c	/^fail (const char *format, ...) $/;"	f	typeref:typename:void
fail	src/tests/tests.pm	/^sub fail {$/;"	s
fail	src/tests/threads/tests.c	/^fail (const char *format, ...) $/;"	f	typeref:typename:void
fail_io	src/utils/squish-pty.c	/^fail_io (const char *msg, ...)$/;"	f	typeref:typename:void	file:
fail_io	src/utils/squish-unix.c	/^fail_io (const char *msg, ...)$/;"	f	typeref:typename:void	file:
failure_cnt	src/tests/internal/stdio.c	/^static int failure_cnt;$/;"	v	typeref:typename:int	file:
false	src/lib/stdbool.h	/^#define false	/;"	d
fb	src/devices/vga.c	/^static uint8_t (*fb)[COL_CNT][2];$/;"	v	typeref:typename:uint8_t (*)[]	file:
file	src/filesys/file.c	/^struct file $/;"	s	file:
file_allow_write	src/filesys/file.c	/^file_allow_write (struct file *file) $/;"	f	typeref:typename:void
file_close	src/filesys/file.c	/^file_close (struct file *file) $/;"	f	typeref:typename:void
file_deny_write	src/filesys/file.c	/^file_deny_write (struct file *file) $/;"	f	typeref:typename:void
file_get_inode	src/filesys/file.c	/^file_get_inode (struct file *file) $/;"	f	typeref:struct:inode *
file_length	src/filesys/file.c	/^file_length (struct file *file) $/;"	f	typeref:typename:off_t
file_name	src/tests/filesys/base/syn-read.h	/^static const char file_name[] = "data";$/;"	v	typeref:typename:const char[]
file_name	src/tests/filesys/base/syn-write.h	/^static const char file_name[] = "stuff";$/;"	v	typeref:typename:const char[]
file_name	src/tests/filesys/extended/syn-rw.h	/^static const char file_name[] = "logfile";$/;"	v	typeref:typename:const char[]
file_open	src/filesys/file.c	/^file_open (struct inode *inode) $/;"	f	typeref:struct:file *
file_read	src/filesys/file.c	/^file_read (struct file *file, void *buffer, off_t size) $/;"	f	typeref:typename:off_t
file_read_at	src/filesys/file.c	/^file_read_at (struct file *file, void *buffer, off_t size, off_t file_ofs) $/;"	f	typeref:typename:off_t
file_reopen	src/filesys/file.c	/^file_reopen (struct file *file) $/;"	f	typeref:struct:file *
file_seek	src/filesys/file.c	/^file_seek (struct file *file, off_t new_pos)$/;"	f	typeref:typename:void
file_size	src/tests/tests.pm	/^sub file_size {$/;"	s
file_tell	src/filesys/file.c	/^file_tell (struct file *file) $/;"	f	typeref:typename:off_t
file_write	src/filesys/file.c	/^file_write (struct file *file, const void *buffer, off_t size) $/;"	f	typeref:typename:off_t
file_write_at	src/filesys/file.c	/^file_write_at (struct file *file, const void *buffer, off_t size,$/;"	f	typeref:typename:off_t
filesize	src/lib/user/syscall.c	/^filesize (int fd) $/;"	f	typeref:typename:int
filesys_SRC	src/threads/build/Makefile	/^filesys_SRC  = filesys\/filesys.c	# Filesystem core.$/;"	m
filesys_bdev_name	src/threads/init.c	/^static const char *filesys_bdev_name;$/;"	v	typeref:typename:const char *	file:
filesys_create	src/filesys/filesys.c	/^filesys_create (const char *name, off_t initial_size) $/;"	f	typeref:typename:bool
filesys_done	src/filesys/filesys.c	/^filesys_done (void) $/;"	f	typeref:typename:void
filesys_init	src/filesys/filesys.c	/^filesys_init (bool format) $/;"	f	typeref:typename:void
filesys_open	src/filesys/filesys.c	/^filesys_open (const char *name)$/;"	f	typeref:struct:file *
filesys_remove	src/filesys/filesys.c	/^filesys_remove (const char *name) $/;"	f	typeref:typename:bool
find_bucket	src/lib/kernel/hash.c	/^find_bucket (struct hash *h, struct hash_elem *e) $/;"	f	typeref:struct:list *	file:
find_cursor	src/devices/vga.c	/^find_cursor (size_t *x, size_t *y) $/;"	f	typeref:typename:void	file:
find_disks	src/utils/pintos	/^sub find_disks {$/;"	s
find_elem	src/lib/kernel/hash.c	/^find_elem (struct hash *h, struct list *bucket, struct hash_elem *e) $/;"	f	typeref:struct:hash_elem *	file:
find_end_of_run	src/lib/kernel/list.c	/^find_end_of_run (struct list_elem *a, struct list_elem *b,$/;"	f	typeref:struct:list_elem *	file:
find_file	src/utils/Pintos.pm	/^sub find_file {$/;"	s
find_in_path	src/utils/pintos	/^sub find_in_path {$/;"	s
finish	src/tests/tests.pm	/^sub finish {$/;"	s
finish_scratch_disk	src/utils/pintos	/^sub finish_scratch_disk {$/;"	s
first	src/tests/threads/priority-donate-chain.c	/^    struct lock *first;$/;"	m	struct:lock_pair	typeref:struct:lock *	file:
first_scancode	src/devices/kbd.c	/^    uint8_t first_scancode;     \/* First scancode. *\/$/;"	m	struct:keymap	typeref:typename:uint8_t	file:
flags	src/lib/stdio.c	/^    flags;$/;"	m	struct:printf_conversion	typeref:enum:printf_conversion::__anon90bc09760103	file:
flatten_hierarchy	src/tests/tests.pm	/^sub flatten_hierarchy {$/;"	s
flush	src/lib/user/console.c	/^flush (struct vhprintf_aux *aux)$/;"	f	typeref:typename:void	file:
format_filesys	src/threads/init.c	/^static bool format_filesys;$/;"	v	typeref:typename:bool	file:
format_integer	src/lib/stdio.c	/^format_integer (uintmax_t value, bool is_signed, bool negative, $/;"	f	typeref:typename:void	file:
format_string	src/lib/stdio.c	/^format_string (const char *string, int length,$/;"	f	typeref:typename:void	file:
found_partition	src/devices/partition.c	/^found_partition (struct block *block, uint8_t part_type,$/;"	f	typeref:typename:void	file:
frame_pointer	src/threads/interrupt.h	/^    void *frame_pointer;        \/* Saved EBP (frame pointer). *\/$/;"	m	struct:intr_frame	typeref:typename:void *
free	src/threads/malloc.c	/^free (void *p) $/;"	f	typeref:typename:void
free_cnt	src/threads/malloc.c	/^    size_t free_cnt;            \/* Free blocks; pages in big block. *\/$/;"	m	struct:arena	typeref:typename:size_t	file:
free_elem	src/threads/malloc.c	/^    struct list_elem free_elem; \/* Free list element. *\/$/;"	m	struct:block	typeref:struct:list_elem	file:
free_list	src/threads/malloc.c	/^    struct list free_list;      \/* List of free blocks. *\/$/;"	m	struct:desc	typeref:struct:list	file:
free_map	src/filesys/free-map.c	/^static struct bitmap *free_map;      \/* Free map, one bit per sector. *\/$/;"	v	typeref:struct:bitmap *	file:
free_map_allocate	src/filesys/free-map.c	/^free_map_allocate (size_t cnt, block_sector_t *sectorp)$/;"	f	typeref:typename:bool
free_map_close	src/filesys/free-map.c	/^free_map_close (void) $/;"	f	typeref:typename:void
free_map_create	src/filesys/free-map.c	/^free_map_create (void) $/;"	f	typeref:typename:void
free_map_file	src/filesys/free-map.c	/^static struct file *free_map_file;   \/* Free map file. *\/$/;"	v	typeref:struct:file *	file:
free_map_init	src/filesys/free-map.c	/^free_map_init (void) $/;"	f	typeref:typename:void
free_map_open	src/filesys/free-map.c	/^free_map_open (void) $/;"	f	typeref:typename:void
free_map_release	src/filesys/free-map.c	/^free_map_release (block_sector_t sector, size_t cnt)$/;"	f	typeref:typename:void
fs	src/threads/interrupt.h	/^    uint16_t fs, :16;           \/* Saved FS segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
fs	src/userprog/tss.c	/^    uint16_t fs, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
fs_device	src/filesys/filesys.c	/^struct block *fs_device;$/;"	v	typeref:struct:block *
fsutil_append	src/filesys/fsutil.c	/^fsutil_append (char **argv)$/;"	f	typeref:typename:void
fsutil_cat	src/filesys/fsutil.c	/^fsutil_cat (char **argv)$/;"	f	typeref:typename:void
fsutil_extract	src/filesys/fsutil.c	/^fsutil_extract (char **argv UNUSED) $/;"	f	typeref:typename:void
fsutil_ls	src/filesys/fsutil.c	/^fsutil_ls (char **argv UNUSED) $/;"	f	typeref:typename:void
fsutil_rm	src/filesys/fsutil.c	/^fsutil_rm (char **argv) $/;"	f	typeref:typename:void
function	src/tests/threads/tests.c	/^    test_func *function;$/;"	m	struct:test	typeref:typename:test_func *	file:
function	src/threads/init.c	/^      void (*function) (char **argv);   \/* Function to execute action. *\/$/;"	m	struct:run_actions::action	typeref:typename:void (*)(char ** argv)	file:
function	src/threads/thread.c	/^    thread_func *function;      \/* Function to call. *\/$/;"	m	struct:kernel_thread_frame	typeref:typename:thread_func *	file:
functionptr	src/tests/userprog/bad-jump.c	/^typedef int (* volatile functionptr)(void);$/;"	t	typeref:typename:int (* volatile)(void)	file:
gdt	src/threads/start.S	/^gdt:$/;"	l
gdt	src/userprog/gdt.c	/^static uint64_t gdt[SEL_CNT];$/;"	v	typeref:typename:uint64_t[]	file:
gdt_init	src/userprog/gdt.c	/^gdt_init (void)$/;"	f	typeref:typename:void
gdtdesc	src/threads/start.S	/^gdtdesc:$/;"	l
getObjPkg	src/tests/Algorithm/Diff.pm	/^sub getObjPkg$/;"	s
get_bad_boundary	src/tests/userprog/boundary.c	/^get_bad_boundary (void)$/;"	f	typeref:typename:void *
get_boundary_area	src/tests/userprog/boundary.c	/^get_boundary_area (void) $/;"	f	typeref:typename:void *
get_core_output	src/tests/tests.pm	/^sub get_core_output {$/;"	s
get_inumber	src/examples/pwd.c	/^get_inumber (const char *file_name, int *inum) $/;"	f	typeref:typename:bool	file:
get_load_average	src/utils/pintos	/^sub get_load_average {$/;"	s
get_min_wakeup_tick	src/threads/thread.c	/^int64_t get_min_wakeup_tick()$/;"	f	typeref:typename:int64_t
get_scratch_file	src/utils/pintos	/^sub get_scratch_file {$/;"	s
getcwd	src/examples/pwd.c	/^getcwd (char *cwd, size_t cwd_size) $/;"	f	typeref:typename:bool	file:
gid	src/lib/ustar.c	/^    char gid[8];                \/* Group ID as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
gname	src/lib/ustar.c	/^    char gname[32];             \/* Group name, always null-terminated. *\/$/;"	m	struct:ustar_header	typeref:typename:char[32]	file:
group	src/lib/stdio.c	/^    int group;                  \/* Number of digits to group with ' flag. *\/$/;"	m	struct:integer_base	typeref:typename:int	file:
gs	src/threads/interrupt.h	/^    uint16_t gs, :16;           \/* Saved GS segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
gs	src/userprog/tss.c	/^    uint16_t gs, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
h_thread_func	src/tests/threads/priority-donate-sema.c	/^h_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
h_thread_func	src/tests/threads/priority-donate-sema.c	/^static thread_func h_thread_func;$/;"	v	typeref:typename:thread_func	file:
halt	src/lib/user/syscall.c	/^halt (void) $/;"	f	typeref:typename:void
halt_SRC	src/examples/Makefile	/^halt_SRC = halt.c$/;"	m
handle	src/lib/user/console.c	/^    int handle;         \/* Output file handle. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:int	file:
handle_error	src/utils/squish-pty.c	/^handle_error (ssize_t retval, int *fd, bool fd_is_pty, const char *call)$/;"	f	typeref:typename:void	file:
handle_error	src/utils/squish-unix.c	/^handle_error (ssize_t retval, int *fd, bool fd_is_sock, const char *call)$/;"	f	typeref:typename:bool	file:
hash	src/lib/kernel/hash.h	/^    hash_hash_func *hash;       \/* Hash function. *\/$/;"	m	struct:hash	typeref:typename:hash_hash_func *
hash	src/lib/kernel/hash.h	/^    struct hash *hash;          \/* The hash table. *\/$/;"	m	struct:hash_iterator	typeref:struct:hash *
hash	src/lib/kernel/hash.h	/^struct hash $/;"	s
hash_action_func	src/lib/kernel/hash.h	/^typedef void hash_action_func (struct hash_elem *e, void *aux);$/;"	t	typeref:typename:void ()(struct hash_elem * e,void * aux)
hash_apply	src/lib/kernel/hash.c	/^hash_apply (struct hash *h, hash_action_func *action) $/;"	f	typeref:typename:void
hash_bytes	src/lib/kernel/hash.c	/^hash_bytes (const void *buf_, size_t size)$/;"	f	typeref:typename:unsigned
hash_clear	src/lib/kernel/hash.c	/^hash_clear (struct hash *h, hash_action_func *destructor) $/;"	f	typeref:typename:void
hash_cur	src/lib/kernel/hash.c	/^hash_cur (struct hash_iterator *i) $/;"	f	typeref:struct:hash_elem *
hash_delete	src/lib/kernel/hash.c	/^hash_delete (struct hash *h, struct hash_elem *e)$/;"	f	typeref:struct:hash_elem *
hash_destroy	src/lib/kernel/hash.c	/^hash_destroy (struct hash *h, hash_action_func *destructor) $/;"	f	typeref:typename:void
hash_elem	src/lib/kernel/hash.h	/^struct hash_elem $/;"	s
hash_empty	src/lib/kernel/hash.c	/^hash_empty (struct hash *h) $/;"	f	typeref:typename:bool
hash_entry	src/lib/kernel/hash.h	/^#define hash_entry(/;"	d
hash_find	src/lib/kernel/hash.c	/^hash_find (struct hash *h, struct hash_elem *e) $/;"	f	typeref:struct:hash_elem *
hash_first	src/lib/kernel/hash.c	/^hash_first (struct hash_iterator *i, struct hash *h) $/;"	f	typeref:typename:void
hash_hash_func	src/lib/kernel/hash.h	/^typedef unsigned hash_hash_func (const struct hash_elem *e, void *aux);$/;"	t	typeref:typename:unsigned ()(const struct hash_elem * e,void * aux)
hash_init	src/lib/kernel/hash.c	/^hash_init (struct hash *h,$/;"	f	typeref:typename:bool
hash_insert	src/lib/kernel/hash.c	/^hash_insert (struct hash *h, struct hash_elem *new)$/;"	f	typeref:struct:hash_elem *
hash_int	src/lib/kernel/hash.c	/^hash_int (int i) $/;"	f	typeref:typename:unsigned
hash_iterator	src/lib/kernel/hash.h	/^struct hash_iterator $/;"	s
hash_less_func	src/lib/kernel/hash.h	/^typedef bool hash_less_func (const struct hash_elem *a,$/;"	t	typeref:typename:bool ()(const struct hash_elem * a,const struct hash_elem * b,void * aux)
hash_next	src/lib/kernel/hash.c	/^hash_next (struct hash_iterator *i)$/;"	f	typeref:struct:hash_elem *
hash_replace	src/lib/kernel/hash.c	/^hash_replace (struct hash *h, struct hash_elem *new) $/;"	f	typeref:struct:hash_elem *
hash_size	src/lib/kernel/hash.c	/^hash_size (struct hash *h) $/;"	f	typeref:typename:size_t
hash_string	src/lib/kernel/hash.c	/^hash_string (const char *s_) $/;"	f	typeref:typename:unsigned
head	src/devices/intq.h	/^    int head;                   \/* New data is written here. *\/$/;"	m	struct:intq	typeref:typename:int
head	src/lib/kernel/list.h	/^    struct list_elem head;      \/* List head. *\/$/;"	m	struct:list	typeref:struct:list_elem
heapify	src/lib/stdlib.c	/^heapify (unsigned char *array, size_t i, size_t cnt, size_t size,$/;"	f	typeref:typename:void	file:
hex-dump_SRC	src/examples/Makefile	/^hex-dump_SRC = hex-dump.c$/;"	m
hex_dump	src/lib/stdio.c	/^hex_dump (uintptr_t ofs, const void *buf_, size_t size, bool ascii)$/;"	f	typeref:typename:void
hex_dump	src/tests/tests.pm	/^sub hex_dump {$/;"	s
high_thread_func	src/tests/threads/priority-donate-nest.c	/^high_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
high_thread_func	src/tests/threads/priority-donate-nest.c	/^static thread_func high_thread_func;$/;"	v	typeref:typename:thread_func	file:
histogram	src/tests/vm/child-sort.c	/^size_t histogram[256];$/;"	v	typeref:typename:size_t[256]
histogram	src/tests/vm/page-merge-seq.c	/^size_t histogram[256];$/;"	v	typeref:typename:size_t[256]
histogram	src/tests/vm/parallel-merge.c	/^size_t histogram[256];$/;"	v	typeref:typename:size_t[256]
holder	src/threads/synch.h	/^    struct thread *holder;      \/* Thread holding lock (for debugging). *\/$/;"	m	struct:lock	typeref:struct:thread *
how	src/devices/shutdown.c	/^static enum shutdown_type how = SHUTDOWN_NONE;$/;"	v	typeref:enum:shutdown_type	file:
hprintf	src/lib/user/console.c	/^hprintf (int handle, const char *format, ...) $/;"	f	typeref:typename:int
i	src/tests/arc4.h	/^    uint8_t i, j;$/;"	m	struct:arc4	typeref:typename:uint8_t
i/configure	src/misc/bochs-2.6.2-link-tinfo.patch	/^--- i\/configure$/;"	m
id	src/tests/threads/alarm-wait.c	/^    int id;                     \/* Sleeper ID. *\/$/;"	m	struct:sleep_thread	typeref:typename:int	file:
id	src/tests/threads/priority-fifo.c	/^    int id;                     \/* Sleeper ID. *\/$/;"	m	struct:simple_thread_data	typeref:typename:int	file:
ide_init	src/devices/ide.c	/^ide_init (void) $/;"	f	typeref:typename:void
ide_operations	src/devices/ide.c	/^static struct block_operations ide_operations =$/;"	v	typeref:struct:block_operations	file:
ide_operations	src/devices/ide.c	/^static struct block_operations ide_operations;$/;"	v	typeref:struct:block_operations	file:
ide_read	src/devices/ide.c	/^ide_read (void *d_, block_sector_t sec_no, void *buffer)$/;"	f	typeref:typename:void	file:
ide_write	src/devices/ide.c	/^ide_write (void *d_, block_sector_t sec_no, const void *buffer)$/;"	f	typeref:typename:void	file:
identify_ata_device	src/devices/ide.c	/^identify_ata_device (struct ata_disk *d) $/;"	f	typeref:typename:void	file:
idle	src/threads/thread.c	/^idle (void *idle_started_ UNUSED) $/;"	f	typeref:typename:void	file:
idle_thread	src/threads/thread.c	/^static struct thread *idle_thread;$/;"	v	typeref:struct:thread *	file:
idle_ticks	src/threads/thread.c	/^static long long idle_ticks;    \/* # of timer ticks spent idle. *\/$/;"	v	typeref:typename:long long	file:
idt	src/threads/interrupt.c	/^static uint64_t idt[INTR_CNT];$/;"	v	typeref:typename:uint64_t[]	file:
in	src/utils/squish-pty.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
in	src/utils/squish-unix.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
in_external_intr	src/threads/interrupt.c	/^static bool in_external_intr;   \/* Are we processing an external interrupt? *\/$/;"	v	typeref:typename:bool	file:
in_use	src/filesys/directory.c	/^    bool in_use;                        \/* In use or free? *\/$/;"	m	struct:dir_entry	typeref:typename:bool	file:
inb	src/threads/io.h	/^inb (uint16_t port)$/;"	f	typeref:typename:uint8_t
init	src/devices/vga.c	/^init (void)$/;"	f	typeref:typename:void	file:
init	src/tests/vm/page-merge-seq.c	/^init (void) $/;"	f	typeref:typename:void	file:
init	src/tests/vm/parallel-merge.c	/^init (void) $/;"	f	typeref:typename:void	file:
init_page_dir	src/threads/init.c	/^uint32_t *init_page_dir;$/;"	v	typeref:typename:uint32_t *
init_poll	src/devices/serial.c	/^init_poll (void) $/;"	f	typeref:typename:void	file:
init_pool	src/threads/palloc.c	/^init_pool (struct pool *p, void *base, size_t page_cnt, const char *name) $/;"	f	typeref:typename:void	file:
init_ram_pages	src/threads/start.S	/^init_ram_pages:$/;"	l
init_thread	src/threads/thread.c	/^init_thread (struct thread *t, const char *name, int priority)$/;"	f	typeref:typename:void	file:
inited	src/lib/random.c	/^static bool inited;     $/;"	v	typeref:typename:bool	file:
initial_thread	src/threads/thread.c	/^static struct thread *initial_thread;$/;"	v	typeref:struct:thread *	file:
inl	src/threads/io.h	/^inl (uint16_t port)$/;"	f	typeref:typename:uint32_t
inode	src/filesys/directory.c	/^    struct inode *inode;                \/* Backing store. *\/$/;"	m	struct:dir	typeref:struct:inode *	file:
inode	src/filesys/file.c	/^    struct inode *inode;        \/* File's inode. *\/$/;"	m	struct:file	typeref:struct:inode *	file:
inode	src/filesys/inode.c	/^struct inode $/;"	s	file:
inode_allow_write	src/filesys/inode.c	/^inode_allow_write (struct inode *inode) $/;"	f	typeref:typename:void
inode_close	src/filesys/inode.c	/^inode_close (struct inode *inode) $/;"	f	typeref:typename:void
inode_create	src/filesys/inode.c	/^inode_create (block_sector_t sector, off_t length)$/;"	f	typeref:typename:bool
inode_deny_write	src/filesys/inode.c	/^inode_deny_write (struct inode *inode) $/;"	f	typeref:typename:void
inode_disk	src/filesys/inode.c	/^struct inode_disk$/;"	s	file:
inode_get_inumber	src/filesys/inode.c	/^inode_get_inumber (const struct inode *inode)$/;"	f	typeref:typename:block_sector_t
inode_init	src/filesys/inode.c	/^inode_init (void) $/;"	f	typeref:typename:void
inode_length	src/filesys/inode.c	/^inode_length (const struct inode *inode)$/;"	f	typeref:typename:off_t
inode_open	src/filesys/inode.c	/^inode_open (block_sector_t sector)$/;"	f	typeref:struct:inode *
inode_read_at	src/filesys/inode.c	/^inode_read_at (struct inode *inode, void *buffer_, off_t size, off_t offset) $/;"	f	typeref:typename:off_t
inode_remove	src/filesys/inode.c	/^inode_remove (struct inode *inode) $/;"	f	typeref:typename:void
inode_reopen	src/filesys/inode.c	/^inode_reopen (struct inode *inode)$/;"	f	typeref:struct:inode *
inode_sector	src/filesys/directory.c	/^    block_sector_t inode_sector;        \/* Sector number of header. *\/$/;"	m	struct:dir_entry	typeref:typename:block_sector_t	file:
inode_write_at	src/filesys/inode.c	/^inode_write_at (struct inode *inode, const void *buffer_, off_t size,$/;"	f	typeref:typename:off_t
inplace_merge	src/lib/kernel/list.c	/^inplace_merge (struct list_elem *a0, struct list_elem *a1b0,$/;"	f	typeref:typename:void	file:
input_full	src/devices/input.c	/^input_full (void) $/;"	f	typeref:typename:bool
input_getc	src/devices/input.c	/^input_getc (void) $/;"	f	typeref:typename:uint8_t
input_init	src/devices/input.c	/^input_init (void) $/;"	f	typeref:typename:void
input_putc	src/devices/input.c	/^input_putc (uint8_t key) $/;"	f	typeref:typename:void
input_sector	src/devices/ide.c	/^input_sector (struct channel *c, void *sector) $/;"	f	typeref:typename:void	file:
insb	src/threads/io.h	/^insb (uint16_t port, void *addr, size_t cnt)$/;"	f	typeref:typename:void
insert_elem	src/lib/kernel/hash.c	/^insert_elem (struct hash *h, struct list *bucket, struct hash_elem *e) $/;"	f	typeref:typename:void	file:
insl	src/threads/io.h	/^insl (uint16_t port, void *addr, size_t cnt)$/;"	f	typeref:typename:void
install_page	src/userprog/process.c	/^install_page (void *upage, void *kpage, bool writable)$/;"	f	typeref:typename:bool	file:
insw	src/threads/io.h	/^insw (uint16_t port, void *addr, size_t cnt)$/;"	f	typeref:typename:void
int16_t	src/lib/stdint.h	/^typedef signed short int int16_t;$/;"	t	typeref:typename:signed short int
int32_t	src/lib/stdint.h	/^typedef signed int int32_t;$/;"	t	typeref:typename:signed int
int64_t	src/lib/stdint.h	/^typedef signed long long int int64_t;$/;"	t	typeref:typename:signed long long int
int8_t	src/lib/stdint.h	/^typedef signed char int8_t;$/;"	t	typeref:typename:signed char
integer_base	src/lib/stdio.c	/^struct integer_base $/;"	s	file:
interloper_thread_func	src/tests/threads/priority-donate-chain.c	/^interloper_thread_func (void *arg_ UNUSED)$/;"	f	typeref:typename:void	file:
interloper_thread_func	src/tests/threads/priority-donate-chain.c	/^static thread_func interloper_thread_func;$/;"	v	typeref:typename:thread_func	file:
interpret_partition_table	src/utils/Pintos.pm	/^sub interpret_partition_table {$/;"	s
interrupt_handler	src/devices/ide.c	/^interrupt_handler (struct intr_frame *f) $/;"	f	typeref:typename:void	file:
intmax_t	src/lib/stdint.h	/^typedef int64_t intmax_t;$/;"	t	typeref:typename:int64_t
intptr_t	src/lib/stdint.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
intq	src/devices/intq.h	/^struct intq$/;"	s
intq_empty	src/devices/intq.c	/^intq_empty (const struct intq *q) $/;"	f	typeref:typename:bool
intq_full	src/devices/intq.c	/^intq_full (const struct intq *q) $/;"	f	typeref:typename:bool
intq_getc	src/devices/intq.c	/^intq_getc (struct intq *q) $/;"	f	typeref:typename:uint8_t
intq_init	src/devices/intq.c	/^intq_init (struct intq *q) $/;"	f	typeref:typename:void
intq_putc	src/devices/intq.c	/^intq_putc (struct intq *q, uint8_t byte) $/;"	f	typeref:typename:void
intr_context	src/threads/interrupt.c	/^intr_context (void) $/;"	f	typeref:typename:bool
intr_disable	src/threads/interrupt.c	/^intr_disable (void) $/;"	f	typeref:enum:intr_level
intr_dump_frame	src/threads/interrupt.c	/^intr_dump_frame (const struct intr_frame *f) $/;"	f	typeref:typename:void
intr_enable	src/threads/interrupt.c	/^intr_enable (void) $/;"	f	typeref:enum:intr_level
intr_entry	src/threads/intr-stubs.S	/^intr_entry:$/;"	l
intr_exit	src/threads/intr-stubs.S	/^intr_exit:$/;"	l
intr_frame	src/threads/interrupt.h	/^struct intr_frame$/;"	s
intr_get_level	src/threads/interrupt.c	/^intr_get_level (void) $/;"	f	typeref:enum:intr_level
intr_handler	src/threads/interrupt.c	/^intr_handler (struct intr_frame *frame) $/;"	f	typeref:typename:void
intr_handler_func	src/threads/interrupt.h	/^typedef void intr_handler_func (struct intr_frame *);$/;"	t	typeref:typename:void ()(struct intr_frame *)
intr_handlers	src/threads/interrupt.c	/^static intr_handler_func *intr_handlers[INTR_CNT];$/;"	v	typeref:typename:intr_handler_func * []	file:
intr_init	src/threads/interrupt.c	/^intr_init (void)$/;"	f	typeref:typename:void
intr_level	src/threads/interrupt.h	/^enum intr_level $/;"	g
intr_name	src/threads/interrupt.c	/^intr_name (uint8_t vec) $/;"	f	typeref:typename:const char *
intr_names	src/threads/interrupt.c	/^static const char *intr_names[INTR_CNT];$/;"	v	typeref:typename:const char * []	file:
intr_register_ext	src/threads/interrupt.c	/^intr_register_ext (uint8_t vec_no, intr_handler_func *handler,$/;"	f	typeref:typename:void
intr_register_int	src/threads/interrupt.c	/^intr_register_int (uint8_t vec_no, int dpl, enum intr_level level,$/;"	f	typeref:typename:void
intr_set_level	src/threads/interrupt.c	/^intr_set_level (enum intr_level level) $/;"	f	typeref:enum:intr_level
intr_stub_func	src/threads/intr-stubs.h	/^typedef void intr_stub_func (void);$/;"	t	typeref:typename:void ()(void)
intr_stubs	src/threads/intr-stubs.S	/^intr_stubs:$/;"	l
intr_yield_on_return	src/threads/interrupt.c	/^intr_yield_on_return (void) $/;"	f	typeref:typename:void
inumber	src/lib/user/syscall.c	/^inumber (int fd) $/;"	f	typeref:typename:int
invalidate_pagedir	src/userprog/pagedir.c	/^invalidate_pagedir (uint32_t *pd) $/;"	f	typeref:typename:void	file:
invariant_keymap	src/devices/kbd.c	/^static const struct keymap invariant_keymap[] = $/;"	v	typeref:typename:const struct keymap[]	file:
inw	src/threads/io.h	/^inw (uint16_t port)$/;"	f	typeref:typename:uint16_t
irq	src/devices/ide.c	/^    uint8_t irq;                \/* Interrupt in use. *\/$/;"	m	struct:channel	typeref:typename:uint8_t	file:
is_all_zeros	src/lib/ustar.c	/^is_all_zeros (const char *block, size_t cnt)$/;"	f	typeref:typename:bool	file:
is_ata	src/devices/ide.c	/^    bool is_ata;                \/* Is device an ATA disk? *\/$/;"	m	struct:ata_disk	typeref:typename:bool	file:
is_dir	src/tests/tests.pm	/^sub is_dir {$/;"	s
is_head	src/lib/kernel/list.c	/^is_head (struct list_elem *elem)$/;"	f	typeref:typename:bool	file:
is_interior	src/lib/kernel/list.c	/^is_interior (struct list_elem *elem)$/;"	f	typeref:typename:bool	file:
is_kernel_vaddr	src/threads/vaddr.h	/^is_kernel_vaddr (const void *vaddr) $/;"	f	typeref:typename:bool
is_partitioned	src/tests/vm/qsort.c	/^is_partitioned (const unsigned char *array, size_t size,$/;"	f	typeref:typename:bool	file:
is_power_of_2	src/lib/kernel/hash.c	/^is_power_of_2 (size_t x) $/;"	f	typeref:typename:size_t	file:
is_sorted	src/lib/kernel/list.c	/^is_sorted (struct list_elem *a, struct list_elem *b,$/;"	f	typeref:typename:bool	file:
is_sorted	src/tests/vm/qsort.c	/^is_sorted (const unsigned char *buf, size_t size) $/;"	f	typeref:typename:bool	file:
is_tail	src/lib/kernel/list.c	/^is_tail (struct list_elem *elem)$/;"	f	typeref:typename:bool	file:
is_thread	src/threads/thread.c	/^is_thread (struct thread *t)$/;"	f	typeref:typename:bool	file:
is_user_vaddr	src/threads/vaddr.h	/^is_user_vaddr (const void *vaddr) $/;"	f	typeref:typename:bool
isalnum	src/lib/ctype.h	/^static inline int isalnum (int c) { return isalpha (c) || isdigit (c); }$/;"	f	typeref:typename:int
isalpha	src/lib/ctype.h	/^static inline int isalpha (int c) { return islower (c) || isupper (c); }$/;"	f	typeref:typename:int
isascii	src/lib/ctype.h	/^static inline int isascii (int c) { return c >= 0 && c < 128; }$/;"	f	typeref:typename:int
isblank	src/lib/ctype.h	/^static inline int isblank (int c) { return c == ' ' || c == '\\t'; }$/;"	f	typeref:typename:int
iscntrl	src/lib/ctype.h	/^static inline int iscntrl (int c) { return (c >= 0 && c < 32) || c == 127; }$/;"	f	typeref:typename:int
isdigit	src/lib/ctype.h	/^static inline int isdigit (int c) { return c >= '0' && c <= '9'; }$/;"	f	typeref:typename:int
isdir	src/lib/user/syscall.c	/^isdir (int fd) $/;"	f	typeref:typename:bool
isgraph	src/lib/ctype.h	/^static inline int isgraph (int c) { return c > 32 && c < 127; }$/;"	f	typeref:typename:int
islower	src/lib/ctype.h	/^static inline int islower (int c) { return c >= 'a' && c <= 'z'; }$/;"	f	typeref:typename:int
isprint	src/lib/ctype.h	/^static inline int isprint (int c) { return c >= 32 && c < 127; }$/;"	f	typeref:typename:int
ispunct	src/lib/ctype.h	/^static inline int ispunct (int c) {$/;"	f	typeref:typename:int
isspace	src/lib/ctype.h	/^static inline int isspace (int c) {$/;"	f	typeref:typename:int
issue_pio_command	src/devices/ide.c	/^issue_pio_command (struct channel *c, uint8_t command) $/;"	f	typeref:typename:void	file:
isupper	src/lib/ctype.h	/^static inline int isupper (int c) { return c >= 'A' && c <= 'Z'; }$/;"	f	typeref:typename:int
isxdigit	src/lib/ctype.h	/^static inline int isxdigit (int c) {$/;"	f	typeref:typename:int
iterations	src/tests/threads/alarm-simultaneous.c	/^    int iterations;             \/* Number of iterations per thread. *\/$/;"	m	struct:sleep_test	typeref:typename:int	file:
iterations	src/tests/threads/alarm-wait.c	/^    int iterations;             \/* Iterations counted so far. *\/$/;"	m	struct:sleep_thread	typeref:typename:int	file:
iterations	src/tests/threads/alarm-wait.c	/^    int iterations;             \/* Number of iterations per thread. *\/$/;"	m	struct:sleep_test	typeref:typename:int	file:
iterations	src/tests/threads/priority-fifo.c	/^    int iterations;             \/* Iterations so far. *\/$/;"	m	struct:simple_thread_data	typeref:typename:int	file:
j	src/tests/arc4.h	/^    uint8_t i, j;$/;"	m	struct:arc4	typeref:typename:uint8_t
kbd_init	src/devices/kbd.c	/^kbd_init (void) $/;"	f	typeref:typename:void
kbd_print_stats	src/devices/kbd.c	/^kbd_print_stats (void) $/;"	f	typeref:typename:void
kernel.bin	src/threads/build/Makefile	/^kernel.bin: CPPFLAGS += -I$(SRCDIR)\/lib\/kernel$/;"	t
kernel.bin	src/threads/build/Makefile	/^kernel.bin: kernel.o$/;"	t
kernel.o	src/threads/build/Makefile	/^kernel.o: threads\/kernel.lds.s $(OBJECTS) $/;"	t
kernel_pool	src/threads/palloc.c	/^static struct pool kernel_pool, user_pool;$/;"	v	typeref:struct:pool	file:
kernel_thread	src/threads/thread.c	/^kernel_thread (thread_func *function, void *aux) $/;"	f	typeref:typename:void	file:
kernel_thread_frame	src/threads/thread.c	/^struct kernel_thread_frame $/;"	s	file:
kernel_ticks	src/threads/thread.c	/^static long long kernel_ticks;  \/* # of timer ticks in kernel threads. *\/$/;"	v	typeref:typename:long long	file:
key_cnt	src/devices/kbd.c	/^static int64_t key_cnt;$/;"	v	typeref:typename:int64_t	file:
keyboard	src/utils/pintos	/^keyboard: user_shortcut=ctrl-alt-del$/;"	l
keyboard_interrupt	src/devices/kbd.c	/^keyboard_interrupt (struct intr_frame *args UNUSED) $/;"	f	typeref:typename:void	file:
keyboard_interrupt	src/devices/kbd.c	/^static intr_handler_func keyboard_interrupt;$/;"	v	typeref:typename:intr_handler_func	file:
keymap	src/devices/kbd.c	/^struct keymap$/;"	s	file:
kill	src/userprog/exception.c	/^kill (struct intr_frame *f) $/;"	f	typeref:typename:void	file:
l_thread_func	src/tests/threads/priority-donate-sema.c	/^l_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
l_thread_func	src/tests/threads/priority-donate-sema.c	/^static thread_func l_thread_func;$/;"	v	typeref:typename:thread_func	file:
last_mask	src/lib/kernel/bitmap.c	/^last_mask (const struct bitmap *b) $/;"	f	typeref:typename:elem_type	file:
lba_to_chs	src/utils/Pintos.pm	/^sub lba_to_chs {$/;"	s
ldt	src/userprog/tss.c	/^    uint16_t ldt, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
left_alt	src/devices/kbd.c	/^static bool left_alt, right_alt;        \/* Left and right Alt keys. *\/$/;"	v	typeref:typename:bool	file:
left_ctrl	src/devices/kbd.c	/^static bool left_ctrl, right_ctrl;      \/* Left and right Ctl keys. *\/$/;"	v	typeref:typename:bool	file:
left_shift	src/devices/kbd.c	/^static bool left_shift, right_shift;    \/* Left and right Shift keys. *\/$/;"	v	typeref:typename:bool	file:
length	src/filesys/inode.c	/^    off_t length;                       \/* File size in bytes. *\/$/;"	m	struct:inode_disk	typeref:typename:off_t	file:
length	src/lib/stdio.c	/^    int length;         \/* Length of output string. *\/$/;"	m	struct:vsnprintf_aux	typeref:typename:int	file:
less	src/lib/kernel/hash.h	/^    hash_less_func *less;       \/* Comparison function. *\/$/;"	m	struct:hash	typeref:typename:hash_less_func *
lib/kernel_SRC	src/threads/build/Makefile	/^lib\/kernel_SRC  = lib\/kernel\/debug.c	# Debug helpers.$/;"	m
lib_SRC	src/threads/build/Makefile	/^lib_SRC  = lib\/debug.c			# Debug helpers.$/;"	m
lineup_SRC	src/examples/Makefile	/^lineup_SRC = lineup.c$/;"	m
linkname	src/lib/ustar.c	/^    char linkname[100];         \/* Name of link target.$/;"	m	struct:ustar_header	typeref:typename:char[100]	file:
list	src/lib/kernel/list.h	/^struct list $/;"	s
list_back	src/lib/kernel/list.c	/^list_back (struct list *list)$/;"	f	typeref:struct:list_elem *
list_begin	src/lib/kernel/list.c	/^list_begin (struct list *list)$/;"	f	typeref:struct:list_elem *
list_dir	src/examples/ls.c	/^list_dir (const char *dir, bool verbose) $/;"	f	typeref:typename:bool	file:
list_elem	src/devices/block.c	/^    struct list_elem list_elem;         \/* Element in all_blocks. *\/$/;"	m	struct:block	typeref:struct:list_elem	file:
list_elem	src/lib/kernel/hash.h	/^    struct list_elem list_elem;$/;"	m	struct:hash_elem	typeref:struct:list_elem
list_elem	src/lib/kernel/list.h	/^struct list_elem $/;"	s
list_elem_to_block	src/devices/block.c	/^list_elem_to_block (struct list_elem *list_elem)$/;"	f	typeref:struct:block *	file:
list_elem_to_hash_elem	src/lib/kernel/hash.c	/^#define list_elem_to_hash_elem(/;"	d	file:
list_empty	src/lib/kernel/list.c	/^list_empty (struct list *list)$/;"	f	typeref:typename:bool
list_end	src/lib/kernel/list.c	/^list_end (struct list *list)$/;"	f	typeref:struct:list_elem *
list_entry	src/lib/kernel/list.h	/^#define list_entry(/;"	d
list_front	src/lib/kernel/list.c	/^list_front (struct list *list)$/;"	f	typeref:struct:list_elem *
list_head	src/lib/kernel/list.c	/^list_head (struct list *list) $/;"	f	typeref:struct:list_elem *
list_init	src/lib/kernel/list.c	/^list_init (struct list *list)$/;"	f	typeref:typename:void
list_insert	src/lib/kernel/list.c	/^list_insert (struct list_elem *before, struct list_elem *elem)$/;"	f	typeref:typename:void
list_insert_ordered	src/lib/kernel/list.c	/^list_insert_ordered (struct list *list, struct list_elem *elem,$/;"	f	typeref:typename:void
list_less_func	src/lib/kernel/list.h	/^typedef bool list_less_func (const struct list_elem *a,$/;"	t	typeref:typename:bool ()(const struct list_elem * a,const struct list_elem * b,void * aux)
list_max	src/lib/kernel/list.c	/^list_max (struct list *list, list_less_func *less, void *aux)$/;"	f	typeref:struct:list_elem *
list_min	src/lib/kernel/list.c	/^list_min (struct list *list, list_less_func *less, void *aux)$/;"	f	typeref:struct:list_elem *
list_next	src/lib/kernel/list.c	/^list_next (struct list_elem *elem)$/;"	f	typeref:struct:list_elem *
list_pop_back	src/lib/kernel/list.c	/^list_pop_back (struct list *list)$/;"	f	typeref:struct:list_elem *
list_pop_front	src/lib/kernel/list.c	/^list_pop_front (struct list *list)$/;"	f	typeref:struct:list_elem *
list_prev	src/lib/kernel/list.c	/^list_prev (struct list_elem *elem)$/;"	f	typeref:struct:list_elem *
list_push_back	src/lib/kernel/list.c	/^list_push_back (struct list *list, struct list_elem *elem)$/;"	f	typeref:typename:void
list_push_front	src/lib/kernel/list.c	/^list_push_front (struct list *list, struct list_elem *elem)$/;"	f	typeref:typename:void
list_rbegin	src/lib/kernel/list.c	/^list_rbegin (struct list *list) $/;"	f	typeref:struct:list_elem *
list_remove	src/lib/kernel/list.c	/^list_remove (struct list_elem *elem)$/;"	f	typeref:struct:list_elem *
list_rend	src/lib/kernel/list.c	/^list_rend (struct list *list) $/;"	f	typeref:struct:list_elem *
list_reverse	src/lib/kernel/list.c	/^list_reverse (struct list *list)$/;"	f	typeref:typename:void
list_size	src/lib/kernel/list.c	/^list_size (struct list *list)$/;"	f	typeref:typename:size_t
list_sort	src/lib/kernel/list.c	/^list_sort (struct list *list, list_less_func *less, void *aux)$/;"	f	typeref:typename:void
list_splice	src/lib/kernel/list.c	/^list_splice (struct list_elem *before,$/;"	f	typeref:typename:void
list_tail	src/lib/kernel/list.c	/^list_tail (struct list *list) $/;"	f	typeref:struct:list_elem *
list_unique	src/lib/kernel/list.c	/^list_unique (struct list *list, struct list *duplicates,$/;"	f	typeref:typename:void
load	src/userprog/process.c	/^load (const char *file_name, void (**eip) (void), void **esp) $/;"	f	typeref:typename:bool
load_kernel	src/threads/loader.S	/^load_kernel:$/;"	l
load_segment	src/userprog/process.c	/^load_segment (struct file *file, off_t ofs, uint8_t *upage,$/;"	f	typeref:typename:bool	file:
load_thread	src/tests/threads/mlfqs-fair.c	/^load_thread (void *ti_) $/;"	f	typeref:typename:void	file:
load_thread	src/tests/threads/mlfqs-load-60.c	/^load_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
load_thread	src/tests/threads/mlfqs-load-avg.c	/^load_thread (void *seq_no_) $/;"	f	typeref:typename:void	file:
loader	src/devices/partition.c	/^      uint8_t loader[446];      \/* Loader, in top-level partition table. *\/$/;"	m	struct:read_partition_table::partition_table	typeref:typename:uint8_t[446]	file:
loader.bin	src/threads/build/Makefile	/^loader.bin: threads\/loader.o$/;"	t
locate_block_device	src/threads/init.c	/^locate_block_device (enum block_type role, const char *name)$/;"	f	typeref:typename:void	file:
locate_block_devices	src/threads/init.c	/^locate_block_devices (void)$/;"	f	typeref:typename:void	file:
lock	src/devices/ide.c	/^    struct lock lock;           \/* Must acquire to access the controller. *\/$/;"	m	struct:channel	typeref:struct:lock	file:
lock	src/devices/intq.h	/^    struct lock lock;           \/* Only one thread may wait at once. *\/$/;"	m	struct:intq	typeref:struct:lock
lock	src/tests/threads/priority-condvar.c	/^static struct lock lock;$/;"	v	typeref:struct:lock	file:
lock	src/tests/threads/priority-donate-sema.c	/^    struct lock lock;$/;"	m	struct:lock_and_sema	typeref:struct:lock	file:
lock	src/tests/threads/priority-fifo.c	/^    struct lock *lock;          \/* Lock on output. *\/$/;"	m	struct:simple_thread_data	typeref:struct:lock *	file:
lock	src/threads/malloc.c	/^    struct lock lock;           \/* Lock. *\/$/;"	m	struct:desc	typeref:struct:lock	file:
lock	src/threads/palloc.c	/^    struct lock lock;                   \/* Mutual exclusion. *\/$/;"	m	struct:pool	typeref:struct:lock	file:
lock	src/threads/synch.h	/^struct lock $/;"	s
lock_acquire	src/threads/synch.c	/^lock_acquire (struct lock *lock)$/;"	f	typeref:typename:void
lock_and_sema	src/tests/threads/priority-donate-sema.c	/^struct lock_and_sema $/;"	s	file:
lock_held_by_current_thread	src/threads/synch.c	/^lock_held_by_current_thread (const struct lock *lock) $/;"	f	typeref:typename:bool
lock_init	src/threads/synch.c	/^lock_init (struct lock *lock)$/;"	f	typeref:typename:void
lock_pair	src/tests/threads/priority-donate-chain.c	/^struct lock_pair$/;"	s	file:
lock_release	src/threads/synch.c	/^lock_release (struct lock *lock) $/;"	f	typeref:typename:void
lock_try_acquire	src/threads/synch.c	/^lock_try_acquire (struct lock *lock)$/;"	f	typeref:typename:bool
locks	src/tests/threads/priority-donate-nest.c	/^struct locks $/;"	s	file:
log	src/utils/pintos	/^log: bochsout.txt$/;"	l
lookup	src/filesys/directory.c	/^lookup (const struct dir *dir, const char *name,$/;"	f	typeref:typename:bool	file:
lookup_page	src/userprog/pagedir.c	/^lookup_page (uint32_t *pd, const void *vaddr, bool create)$/;"	f	typeref:typename:uint32_t *	file:
loops_per_tick	src/devices/timer.c	/^static unsigned loops_per_tick;$/;"	v	typeref:typename:unsigned	file:
ls_SRC	src/examples/Makefile	/^ls_SRC = ls.c$/;"	m
m_thread_func	src/tests/threads/priority-donate-sema.c	/^m_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
m_thread_func	src/tests/threads/priority-donate-sema.c	/^static thread_func m_thread_func;$/;"	v	typeref:typename:thread_func	file:
magic	src/filesys/inode.c	/^    unsigned magic;                     \/* Magic number. *\/$/;"	m	struct:inode_disk	typeref:typename:unsigned	file:
magic	src/lib/ustar.c	/^    char magic[6];              \/* "ustar\\0" *\/$/;"	m	struct:ustar_header	typeref:typename:char[6]	file:
magic	src/threads/malloc.c	/^    unsigned magic;             \/* Always set to ARENA_MAGIC. *\/$/;"	m	struct:arena	typeref:typename:unsigned	file:
magic	src/threads/thread.h	/^    unsigned magic;                     \/* Detects stack overflow. *\/$/;"	m	struct:thread	typeref:typename:unsigned
main	src/examples/bubsort.c	/^main (void)$/;"	f	typeref:typename:int
main	src/examples/cat.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/cmp.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/cp.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/echo.c	/^main (int argc, char **argv)$/;"	f	typeref:typename:int
main	src/examples/halt.c	/^main (void)$/;"	f	typeref:typename:int
main	src/examples/hex-dump.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/lineup.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/examples/ls.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/matmult.c	/^main (void)$/;"	f	typeref:typename:int
main	src/examples/mcat.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/mcp.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/mkdir.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/pwd.c	/^main (void) $/;"	f	typeref:typename:int
main	src/examples/recursor.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/examples/rm.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/examples/shell.c	/^main (void)$/;"	f	typeref:typename:int
main	src/tests/cksum.c	/^main (void) $/;"	f	typeref:typename:int
main	src/tests/filesys/base/child-syn-read.c	/^main (int argc, const char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/filesys/base/child-syn-wrt.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/tests/filesys/extended/child-syn-rw.c	/^main (int argc, const char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/filesys/extended/tar.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/main.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/userprog/args.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/userprog/child-close.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/userprog/child-rox.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/userprog/child-simple.c	/^main (void) $/;"	f	typeref:typename:int
main	src/tests/userprog/multi-recurse.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/userprog/no-vm/multi-oom.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/tests/vm/child-linear.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/tests/vm/child-qsort-mm.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/vm/child-qsort.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/tests/vm/child-sort.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	src/threads/init.c	/^main (void)$/;"	f	typeref:typename:int
main	src/utils/setitimer-helper.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	src/utils/squish-pty.c	/^main (int argc __attribute__ ((unused)), char *argv[])$/;"	f	typeref:typename:int
main	src/utils/squish-unix.c	/^main (int argc __attribute__ ((unused)), char *argv[])$/;"	f	typeref:typename:int
make_code_desc	src/userprog/gdt.c	/^make_code_desc (int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_data_desc	src/userprog/gdt.c	/^make_data_desc (int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_gate	src/threads/interrupt.c	/^make_gate (void (*function) (void), int dpl, int type)$/;"	f	typeref:typename:uint64_t	file:
make_gdtr_operand	src/userprog/gdt.c	/^make_gdtr_operand (uint16_t limit, void *base)$/;"	f	typeref:typename:uint64_t	file:
make_idtr_operand	src/threads/interrupt.c	/^make_idtr_operand (uint16_t limit, void *base)$/;"	f	typeref:typename:uint64_t	file:
make_intr_gate	src/threads/interrupt.c	/^make_intr_gate (void (*function) (void), int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_kernel_command_line	src/utils/Pintos.pm	/^sub make_kernel_command_line {$/;"	s
make_nonblocking	src/utils/squish-pty.c	/^make_nonblocking (int fd, bool nonblocking) $/;"	f	typeref:typename:void	file:
make_nonblocking	src/utils/squish-unix.c	/^make_nonblocking (int fd, bool nonblocking) $/;"	f	typeref:typename:void	file:
make_noncanon	src/utils/squish-pty.c	/^make_noncanon (int fd, int vmin, int vtime)$/;"	f	typeref:typename:void	file:
make_noncanon	src/utils/squish-unix.c	/^make_noncanon (int fd, int vmin, int vtime)$/;"	f	typeref:typename:void	file:
make_partition_table	src/utils/Pintos.pm	/^sub make_partition_table {$/;"	s
make_seg_desc	src/userprog/gdt.c	/^make_seg_desc (uint32_t base,$/;"	f	typeref:typename:uint64_t	file:
make_tar_archive	src/tests/filesys/extended/tar.c	/^make_tar_archive (const char *archive_name, char *files[], size_t file_cnt) $/;"	f	typeref:typename:bool	file:
make_trap_gate	src/threads/interrupt.c	/^make_trap_gate (void (*function) (void), int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_tree	src/tests/filesys/extended/mk-tree.c	/^make_tree (int at, int bt, int ct, int dt) $/;"	f	typeref:typename:void
make_tss_desc	src/userprog/gdt.c	/^make_tss_desc (void *laddr)$/;"	f	typeref:typename:uint64_t	file:
malloc	src/threads/malloc.c	/^malloc (size_t size) $/;"	f	typeref:typename:void *
malloc_init	src/threads/malloc.c	/^malloc_init (void) $/;"	f	typeref:typename:void
map_key	src/devices/kbd.c	/^map_key (const struct keymap k[], unsigned scancode, uint8_t *c) $/;"	f	typeref:typename:bool	file:
mapid_t	src/lib/user/syscall.h	/^typedef int mapid_t;$/;"	t	typeref:typename:int
matmult_SRC	src/examples/Makefile	/^matmult_SRC = matmult.c$/;"	m
max	src/utils/Pintos.pm	/^sub max {$/;"	s
max_length	src/lib/stdio.c	/^    int max_length;     \/* Max length of output string. *\/$/;"	m	struct:vsnprintf_aux	typeref:typename:int	file:
mcat_SRC	src/examples/Makefile	/^mcat_SRC = mcat.c$/;"	m
mcp_SRC	src/examples/Makefile	/^mcp_SRC = mcp.c$/;"	m
medium_thread_func	src/tests/threads/priority-donate-nest.c	/^medium_thread_func (void *locks_) $/;"	f	typeref:typename:void	file:
medium_thread_func	src/tests/threads/priority-donate-nest.c	/^static thread_func medium_thread_func;$/;"	v	typeref:typename:thread_func	file:
megs	src/utils/pintos	/^megs: $mem$/;"	l
memchr	src/lib/string.c	/^memchr (const void *block_, int ch_, size_t size) $/;"	f	typeref:typename:void *
memcmp	src/lib/string.c	/^memcmp (const void *a_, const void *b_, size_t size) $/;"	f	typeref:typename:int
memcpy	src/lib/string.c	/^memcpy (void *dst_, const void *src_, size_t size) $/;"	f	typeref:typename:void *
memmove	src/lib/string.c	/^memmove (void *dst_, const void *src_, size_t size) $/;"	f	typeref:typename:void *
memset	src/lib/string.c	/^memset (void *dst_, int value, size_t size) $/;"	f	typeref:typename:void *
merge	src/tests/vm/page-merge-seq.c	/^merge (void) $/;"	f	typeref:typename:void	file:
merge	src/tests/vm/parallel-merge.c	/^merge (void) $/;"	f	typeref:typename:void	file:
min_wakeup_tick	src/threads/thread.c	/^static int64_t min_wakeup_tick = INT64_MAX;$/;"	v	typeref:typename:int64_t	file:
mk_ustar_field	src/utils/pintos	/^sub mk_ustar_field {$/;"	s
mkdir	src/lib/user/syscall.c	/^mkdir (const char *dir)$/;"	f	typeref:typename:bool
mkdir_SRC	src/examples/Makefile	/^mkdir_SRC = mkdir.c$/;"	m
mlfqs_compare	src/tests/threads/mlfqs.pm	/^sub mlfqs_compare {$/;"	s
mlfqs_expected_load	src/tests/threads/mlfqs.pm	/^sub mlfqs_expected_load {$/;"	s
mlfqs_expected_ticks	src/tests/threads/mlfqs.pm	/^sub mlfqs_expected_ticks {$/;"	s
mlfqs_row	src/tests/threads/mlfqs.pm	/^sub mlfqs_row {$/;"	s
mmap	src/lib/user/syscall.c	/^mmap (int fd, void *addr)$/;"	f	typeref:typename:mapid_t
mode	src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	v	typeref:enum:__anon83e3689f0103	file:
mode	src/lib/ustar.c	/^    char mode[8];               \/* Permissions as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
move_cursor	src/devices/vga.c	/^move_cursor (void) $/;"	f	typeref:typename:void	file:
msg	src/tests/lib.c	/^msg (const char *format, ...) $/;"	f	typeref:typename:void
msg	src/tests/threads/tests.c	/^msg (const char *format, ...) $/;"	f	typeref:typename:void
mtime	src/lib/ustar.c	/^    char mtime[12];             \/* Modification time in seconds$/;"	m	struct:ustar_header	typeref:typename:char[12]	file:
munmap	src/lib/user/syscall.c	/^munmap (mapid_t mapid)$/;"	f	typeref:typename:void
name	src/devices/block.c	/^    char name[16];                      \/* Block device name. *\/$/;"	m	struct:block	typeref:typename:char[16]	file:
name	src/devices/ide.c	/^    char name[8];               \/* Name, e.g. "hda". *\/$/;"	m	struct:ata_disk	typeref:typename:char[8]	file:
name	src/devices/ide.c	/^    char name[8];               \/* Name, e.g. "ide0". *\/$/;"	m	struct:channel	typeref:typename:char[8]	file:
name	src/filesys/directory.c	/^    char name[NAME_MAX + 1];            \/* Null terminated file name. *\/$/;"	m	struct:dir_entry	typeref:typename:char[]	file:
name	src/lib/ustar.c	/^    char name[100];             \/* File name.  Null-terminated if room. *\/$/;"	m	struct:ustar_header	typeref:typename:char[100]	file:
name	src/tests/threads/tests.c	/^    const char *name;$/;"	m	struct:test	typeref:typename:const char *	file:
name	src/threads/init.c	/^      char *name;                       \/* Action name. *\/$/;"	m	struct:run_actions::action	typeref:typename:char *	file:
name	src/threads/thread.h	/^    char name[16];                      \/* Name (for debugging purposes). *\/$/;"	m	struct:thread	typeref:typename:char[16]
new	src/tests/Algorithm/Diff.pm	/^sub new$/;"	s
newline	src/devices/vga.c	/^newline (void)$/;"	f	typeref:typename:void	file:
next	src/devices/intq.c	/^next (int pos) $/;"	f	typeref:typename:int	file:
next	src/lib/kernel/list.h	/^    struct list_elem *next;     \/* Next list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem *
next	src/threads/switch.h	/^    struct thread *next;        \/* 24: switch_threads()'s NEXT argument. *\/$/;"	m	struct:switch_threads_frame	typeref:struct:thread *
next_char	src/threads/loader.S	/^next_char:$/;"	l
next_drive	src/threads/loader.S	/^next_drive:$/;"	l
next_partition	src/threads/loader.S	/^next_partition:$/;"	l
next_sector	src/threads/loader.S	/^next_sector:$/;"	l
next_thread_to_run	src/threads/thread.c	/^next_thread_to_run (void) $/;"	f	typeref:struct:thread *	file:
nice	src/tests/threads/mlfqs-fair.c	/^    int nice;$/;"	m	struct:thread_info	typeref:typename:int	file:
nlz	src/lib/arithmetic.c	/^nlz (uint32_t x) $/;"	f	typeref:typename:int	file:
no_boot_partition	src/threads/loader.S	/^no_boot_partition:$/;"	l
no_such_drive	src/threads/loader.S	/^no_such_drive:$/;"	l
normalize_fs	src/tests/tests.pm	/^sub normalize_fs {$/;"	s
not_empty	src/devices/intq.h	/^    struct thread *not_empty;   \/* Thread waiting for not-empty condition. *\/$/;"	m	struct:intq	typeref:struct:thread *
not_full	src/devices/intq.h	/^    struct thread *not_full;    \/* Thread waiting for not-full condition. *\/$/;"	m	struct:intq	typeref:struct:thread *
off_t	src/filesys/off_t.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	src/devices/partition.c	/^      uint32_t offset;          \/* Start sector offset from partition table. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint32_t	file:
offsetof	src/lib/stddef.h	/^#define offsetof(/;"	d
ofs	src/utils/squish-pty.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
ofs	src/utils/squish-unix.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
op	src/tests/threads/priority-fifo.c	/^    int **op;                   \/* Output buffer position. *\/$/;"	m	struct:simple_thread_data	typeref:typename:int **	file:
open	src/lib/user/syscall.c	/^open (const char *file)$/;"	f	typeref:typename:int
open_cnt	src/filesys/inode.c	/^    int open_cnt;                       \/* Number of openers. *\/$/;"	m	struct:inode	typeref:typename:int	file:
open_file	src/tests/tests.pm	/^sub open_file {$/;"	s
open_inodes	src/filesys/inode.c	/^static struct list open_inodes;$/;"	v	typeref:struct:list	file:
ops	src/devices/block.c	/^    const struct block_operations *ops;  \/* Driver operations. *\/$/;"	m	struct:block	typeref:typename:const struct block_operations *	file:
orig/bochs-2.1.1/gui/Makefile.in	src/misc/bochs-2.2.6-ms-extensions.patch	/^--- orig\/bochs-2.1.1\/gui\/Makefile.in	2003-11-28 07:07:28.000000000 -0800$/;"	m
os.dsk	src/threads/build/Makefile	/^os.dsk: kernel.bin$/;"	t
out	src/utils/squish-pty.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
out	src/utils/squish-unix.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
outb	src/threads/io.h	/^outb (uint16_t port, uint8_t data)$/;"	f	typeref:typename:void
outl	src/threads/io.h	/^outl (uint16_t port, uint32_t data)$/;"	f	typeref:typename:void
output_dup	src/lib/stdio.c	/^output_dup (char ch, size_t cnt, void (*output) (char, void *), void *aux) $/;"	f	typeref:typename:void	file:
output_lock	src/tests/threads/alarm-wait.c	/^    struct lock output_lock;    \/* Lock protecting output buffer. *\/$/;"	m	struct:sleep_test	typeref:struct:lock	file:
output_pos	src/tests/threads/alarm-simultaneous.c	/^    int *output_pos;            \/* Current position in output buffer. *\/$/;"	m	struct:sleep_test	typeref:typename:int *	file:
output_pos	src/tests/threads/alarm-wait.c	/^    int *output_pos;            \/* Current position in output buffer. *\/$/;"	m	struct:sleep_test	typeref:typename:int *	file:
output_sector	src/devices/ide.c	/^output_sector (struct channel *c, const void *sector) $/;"	f	typeref:typename:void	file:
outsb	src/threads/io.h	/^outsb (uint16_t port, const void *addr, size_t cnt)$/;"	f	typeref:typename:void
outsl	src/threads/io.h	/^outsl (uint16_t port, const void *addr, size_t cnt)$/;"	f	typeref:typename:void
outsw	src/threads/io.h	/^outsw (uint16_t port, const void *addr, size_t cnt)$/;"	f	typeref:typename:void
outw	src/threads/io.h	/^outw (uint16_t port, uint16_t data)$/;"	f	typeref:typename:void
p	src/lib/stdio.c	/^    char *p;            \/* Current output position. *\/$/;"	m	struct:vsnprintf_aux	typeref:typename:char *	file:
p	src/lib/user/console.c	/^    char *p;            \/* Current position in buffer. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:char *	file:
p_align	src/userprog/process.c	/^    Elf32_Word p_align;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_filesz	src/userprog/process.c	/^    Elf32_Word p_filesz;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_flags	src/userprog/process.c	/^    Elf32_Word p_flags;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_memsz	src/userprog/process.c	/^    Elf32_Word p_memsz;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_offset	src/userprog/process.c	/^    Elf32_Off  p_offset;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Off	file:
p_paddr	src/userprog/process.c	/^    Elf32_Addr p_paddr;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Addr	file:
p_type	src/userprog/process.c	/^    Elf32_Word p_type;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_vaddr	src/userprog/process.c	/^    Elf32_Addr p_vaddr;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Addr	file:
pack_chs	src/utils/Pintos.pm	/^sub pack_chs {$/;"	s
padding	src/lib/ustar.c	/^    char padding[12];           \/* Pad to 512 bytes. *\/$/;"	m	struct:ustar_header	typeref:typename:char[12]	file:
page_fault	src/userprog/exception.c	/^page_fault (struct intr_frame *f) $/;"	f	typeref:typename:void	file:
page_fault_cnt	src/userprog/exception.c	/^static long long page_fault_cnt;$/;"	v	typeref:typename:long long	file:
page_from_pool	src/threads/palloc.c	/^page_from_pool (const struct pool *pool, void *page) $/;"	f	typeref:typename:bool	file:
pagedir	src/threads/thread.h	/^    uint32_t *pagedir;                  \/* Page directory. *\/$/;"	m	struct:thread	typeref:typename:uint32_t *
pagedir_activate	src/userprog/pagedir.c	/^pagedir_activate (uint32_t *pd) $/;"	f	typeref:typename:void
pagedir_clear_page	src/userprog/pagedir.c	/^pagedir_clear_page (uint32_t *pd, void *upage) $/;"	f	typeref:typename:void
pagedir_create	src/userprog/pagedir.c	/^pagedir_create (void) $/;"	f	typeref:typename:uint32_t *
pagedir_destroy	src/userprog/pagedir.c	/^pagedir_destroy (uint32_t *pd) $/;"	f	typeref:typename:void
pagedir_get_page	src/userprog/pagedir.c	/^pagedir_get_page (uint32_t *pd, const void *uaddr) $/;"	f	typeref:typename:void *
pagedir_is_accessed	src/userprog/pagedir.c	/^pagedir_is_accessed (uint32_t *pd, const void *vpage) $/;"	f	typeref:typename:bool
pagedir_is_dirty	src/userprog/pagedir.c	/^pagedir_is_dirty (uint32_t *pd, const void *vpage) $/;"	f	typeref:typename:bool
pagedir_set_accessed	src/userprog/pagedir.c	/^pagedir_set_accessed (uint32_t *pd, const void *vpage, bool accessed) $/;"	f	typeref:typename:void
pagedir_set_dirty	src/userprog/pagedir.c	/^pagedir_set_dirty (uint32_t *pd, const void *vpage, bool dirty) $/;"	f	typeref:typename:void
pagedir_set_page	src/userprog/pagedir.c	/^pagedir_set_page (uint32_t *pd, void *upage, void *kpage, bool writable)$/;"	f	typeref:typename:bool
paging_init	src/threads/init.c	/^paging_init (void)$/;"	f	typeref:typename:void	file:
palloc_flags	src/threads/palloc.h	/^enum palloc_flags$/;"	g
palloc_free_multiple	src/threads/palloc.c	/^palloc_free_multiple (void *pages, size_t page_cnt) $/;"	f	typeref:typename:void
palloc_free_page	src/threads/palloc.c	/^palloc_free_page (void *page) $/;"	f	typeref:typename:void
palloc_get_multiple	src/threads/palloc.c	/^palloc_get_multiple (enum palloc_flags flags, size_t page_cnt)$/;"	f	typeref:typename:void *
palloc_get_page	src/threads/palloc.c	/^palloc_get_page (enum palloc_flags flags) $/;"	f	typeref:typename:void *
palloc_init	src/threads/palloc.c	/^palloc_init (size_t user_page_limit)$/;"	f	typeref:typename:void
panic	src/utils/pintos	/^panic: action=fatal$/;"	l
parallel_merge	src/tests/vm/parallel-merge.c	/^parallel_merge (const char *child_name, int exit_status)$/;"	f	typeref:typename:void
parse_command_line	src/utils/pintos	/^sub parse_command_line {$/;"	s
parse_conversion	src/lib/stdio.c	/^parse_conversion (const char *format, struct printf_conversion *c,$/;"	f	typeref:typename:const char *	file:
parse_octal_field	src/lib/ustar.c	/^parse_octal_field (const char *s, size_t size, unsigned long int *value)$/;"	f	typeref:typename:bool	file:
parse_options	src/threads/init.c	/^parse_options (char **argv) $/;"	f	typeref:typename:char **	file:
partition	src/devices/partition.c	/^struct partition$/;"	s	file:
partition	src/tests/vm/qsort.c	/^partition (unsigned char *array, size_t size, int pivot) $/;"	f	typeref:typename:size_t	file:
partition_operations	src/devices/partition.c	/^static struct block_operations partition_operations =$/;"	v	typeref:struct:block_operations	file:
partition_operations	src/devices/partition.c	/^static struct block_operations partition_operations;$/;"	v	typeref:struct:block_operations	file:
partition_read	src/devices/partition.c	/^partition_read (void *p_, block_sector_t sector, void *buffer)$/;"	f	typeref:typename:void	file:
partition_scan	src/devices/partition.c	/^partition_scan (struct block *block)$/;"	f	typeref:typename:void
partition_table	src/devices/partition.c	/^  struct partition_table$/;"	s	function:read_partition_table	file:
partition_table_entry	src/devices/partition.c	/^  struct partition_table_entry$/;"	s	function:read_partition_table	file:
partition_type_name	src/devices/partition.c	/^partition_type_name (uint8_t type)$/;"	f	typeref:typename:const char *	file:
partition_write	src/devices/partition.c	/^partition_write (void *p_, block_sector_t sector, const void *buffer)$/;"	f	typeref:typename:void	file:
partitions	src/devices/partition.c	/^      struct partition_table_entry partitions[4];       \/* Table entries. *\/$/;"	m	struct:read_partition_table::partition_table	typeref:struct:partition_table_entry[4]	file:
pass	src/tests/tests.pm	/^sub pass {$/;"	s
pass	src/tests/threads/tests.c	/^pass (void) $/;"	f	typeref:typename:void
pd_no	src/threads/pte.h	/^static inline uintptr_t pd_no (const void *va) {$/;"	f	typeref:typename:uintptr_t
pde_create	src/threads/pte.h	/^static inline uint32_t pde_create (uint32_t *pt) {$/;"	f	typeref:typename:uint32_t
pde_get_pt	src/threads/pte.h	/^static inline uint32_t *pde_get_pt (uint32_t pde) {$/;"	f	typeref:typename:uint32_t *
pg_no	src/threads/vaddr.h	/^static inline uintptr_t pg_no (const void *va) {$/;"	f	typeref:typename:uintptr_t
pg_ofs	src/threads/vaddr.h	/^static inline unsigned pg_ofs (const void *va) {$/;"	f	typeref:typename:unsigned
pg_round_down	src/threads/vaddr.h	/^static inline void *pg_round_down (const void *va) {$/;"	f	typeref:typename:void *
pg_round_up	src/threads/vaddr.h	/^static inline void *pg_round_up (const void *va) {$/;"	f	typeref:typename:void *
pic_end_of_interrupt	src/threads/interrupt.c	/^pic_end_of_interrupt (int irq) $/;"	f	typeref:typename:void	file:
pic_init	src/threads/interrupt.c	/^pic_init (void)$/;"	f	typeref:typename:void	file:
pick_pivot	src/tests/vm/qsort.c	/^pick_pivot (unsigned char *buf, size_t size) $/;"	f	typeref:typename:unsigned char	file:
pid_t	src/lib/user/syscall.h	/^typedef int pid_t;$/;"	t	typeref:typename:int
pipe	src/utils/squish-pty.c	/^  struct pipe $/;"	s	function:relay	file:
pipe	src/utils/squish-unix.c	/^  struct pipe $/;"	s	function:relay	file:
pit_configure_channel	src/devices/pit.c	/^pit_configure_channel (int channel, int mode, int frequency)$/;"	f	typeref:typename:void
player_unsup	src/utils/pintos	/^sub player_unsup {$/;"	s
pool	src/threads/palloc.c	/^struct pool$/;"	s	file:
popa_ret	src/threads/loader.S	/^popa_ret:$/;"	l
pos	src/filesys/directory.c	/^    off_t pos;                          \/* Current position. *\/$/;"	m	struct:dir	typeref:typename:off_t	file:
pos	src/filesys/file.c	/^    off_t pos;                  \/* Current position. *\/$/;"	m	struct:file	typeref:typename:off_t	file:
precision	src/lib/stdio.c	/^    int precision;$/;"	m	struct:printf_conversion	typeref:typename:int	file:
prefix	src/lib/ustar.c	/^    char prefix[155];           \/* Prefix to file name.$/;"	m	struct:ustar_header	typeref:typename:char[155]	file:
prepare	src/tests/Algorithm/Diff.pm	/^sub prepare$/;"	s
prepare_scratch_disk	src/utils/pintos	/^sub prepare_scratch_disk {$/;"	s
prepend	src/examples/pwd.c	/^prepend (const char *prefix,$/;"	f	typeref:typename:bool	file:
prev	src/lib/kernel/list.h	/^    struct list_elem *prev;     \/* Previous list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem *
print_bochs_disk_line	src/utils/pintos	/^sub print_bochs_disk_line {$/;"	s
print_fs	src/tests/tests.pm	/^sub print_fs {$/;"	s
print_human_readable_size	src/lib/stdio.c	/^print_human_readable_size (uint64_t size) $/;"	f	typeref:typename:void
print_stacktrace	src/lib/kernel/debug.c	/^print_stacktrace(struct thread *t, void *aux UNUSED)$/;"	f	typeref:typename:void	file:
print_stats	src/devices/shutdown.c	/^print_stats (void)$/;"	f	typeref:typename:void	file:
printf	src/lib/stdio.c	/^printf (const char *format, ...) $/;"	f	typeref:typename:int
printf_conversion	src/lib/stdio.c	/^struct printf_conversion $/;"	s	file:
priority	src/threads/thread.h	/^    int priority;                       \/* Priority. *\/$/;"	m	struct:thread	typeref:typename:int
priority_condvar_thread	src/tests/threads/priority-condvar.c	/^priority_condvar_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
priority_condvar_thread	src/tests/threads/priority-condvar.c	/^static thread_func priority_condvar_thread;$/;"	v	typeref:typename:thread_func	file:
priority_sema_thread	src/tests/threads/priority-sema.c	/^priority_sema_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
priority_sema_thread	src/tests/threads/priority-sema.c	/^static thread_func priority_sema_thread;$/;"	v	typeref:typename:thread_func	file:
process_activate	src/userprog/process.c	/^process_activate (void)$/;"	f	typeref:typename:void
process_execute	src/userprog/process.c	/^process_execute (const char *file_name) $/;"	f	typeref:typename:tid_t
process_exit	src/userprog/process.c	/^process_exit (void)$/;"	f	typeref:typename:void
process_wait	src/userprog/process.c	/^process_wait (tid_t child_tid UNUSED) $/;"	f	typeref:typename:int
pt_no	src/threads/pte.h	/^static inline unsigned pt_no (const void *va) {$/;"	f	typeref:typename:unsigned
pte_create_kernel	src/threads/pte.h	/^static inline uint32_t pte_create_kernel (void *page, bool writable) {$/;"	f	typeref:typename:uint32_t
pte_create_user	src/threads/pte.h	/^static inline uint32_t pte_create_user (void *page, bool writable) {$/;"	f	typeref:typename:uint32_t
pte_get_page	src/threads/pte.h	/^static inline void *pte_get_page (uint32_t pte) {$/;"	f	typeref:typename:void *
ptov	src/threads/vaddr.h	/^ptov (uintptr_t paddr)$/;"	f	typeref:typename:void *
ptrdiff_t	src/lib/stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t	typeref:typename:__PTRDIFF_TYPE__
put_scratch_file	src/utils/pintos	/^sub put_scratch_file {$/;"	s
putbuf	src/lib/kernel/console.c	/^putbuf (const char *buffer, size_t n) $/;"	f	typeref:typename:void
putc	src/threads/loader.S	/^putc:	pusha$/;"	l
putc_poll	src/devices/serial.c	/^putc_poll (uint8_t byte) $/;"	f	typeref:typename:void	file:
putchar	src/lib/kernel/console.c	/^putchar (int c) $/;"	f	typeref:typename:int
putchar	src/lib/user/console.c	/^putchar (int c) $/;"	f	typeref:typename:int
putchar_have_lock	src/lib/kernel/console.c	/^putchar_have_lock (uint8_t c) $/;"	f	typeref:typename:void	file:
puts	src/lib/kernel/console.c	/^puts (const char *s) $/;"	f	typeref:typename:int
puts	src/lib/user/console.c	/^puts (const char *s) $/;"	f	typeref:typename:int
puts	src/threads/loader.S	/^puts:	xchg %si, %ss:(%esp)$/;"	l
pwd_SRC	src/examples/Makefile	/^pwd_SRC = pwd.c$/;"	m
qsort	src/lib/stdlib.c	/^qsort (void *array, size_t cnt, size_t size,$/;"	f	typeref:typename:void
qsort_bytes	src/tests/vm/qsort.c	/^qsort_bytes (unsigned char *buf, size_t size) $/;"	f	typeref:typename:void
quiet	src/tests/lib.c	/^bool quiet = false;$/;"	v	typeref:typename:bool
r_thread_func	src/tests/threads/rwsema1.c	/^r_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
r_thread_func	src/tests/threads/rwsema1.c	/^static thread_func r_thread_func;$/;"	v	typeref:typename:thread_func	file:
r_thread_func	src/tests/threads/rwsema2.c	/^r_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
r_thread_func	src/tests/threads/rwsema2.c	/^static thread_func r_thread_func;$/;"	v	typeref:typename:thread_func	file:
r_thread_func	src/tests/threads/rwsema3.c	/^r_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
r_thread_func	src/tests/threads/rwsema3.c	/^static thread_func r_thread_func;$/;"	v	typeref:typename:thread_func	file:
r_thread_func	src/tests/threads/rwsema4.c	/^r_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
r_thread_func	src/tests/threads/rwsema4.c	/^static thread_func r_thread_func;$/;"	v	typeref:typename:thread_func	file:
r_thread_func	src/tests/threads/rwsema5.c	/^r_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
r_thread_func	src/tests/threads/rwsema5.c	/^static thread_func r_thread_func;$/;"	v	typeref:typename:thread_func	file:
r_thread_func	src/tests/threads/rwsema6.c	/^r_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
r_thread_func	src/tests/threads/rwsema6.c	/^static thread_func r_thread_func;$/;"	v	typeref:typename:thread_func	file:
random_bytes	src/lib/random.c	/^random_bytes (void *buf_, size_t size) $/;"	f	typeref:typename:void
random_bytes	src/tests/random.pm	/^sub random_bytes {$/;"	s
random_init	src/lib/random.c	/^random_init (unsigned seed)$/;"	f	typeref:typename:void
random_init	src/tests/random.pm	/^sub random_init {$/;"	s
random_ulong	src/lib/random.c	/^random_ulong (void) $/;"	f	typeref:typename:unsigned long
random_ulong	src/tests/random.pm	/^sub random_ulong {$/;"	s
rcount	src/threads/synch.h	/^    unsigned rcount; $/;"	m	struct:rw_semaphore	typeref:typename:unsigned
read	src/devices/block.h	/^    void (*read) (void *aux, block_sector_t, void *buffer);$/;"	m	struct:block_operations	typeref:typename:void (*)(void * aux,block_sector_t,void * buffer)
read	src/lib/user/syscall.c	/^read (int fd, void *buffer, unsigned size)$/;"	f	typeref:typename:int
read_cnt	src/devices/block.c	/^    unsigned long long read_cnt;        \/* Number of sectors read. *\/$/;"	m	struct:block	typeref:typename:unsigned long long	file:
read_command_line	src/threads/init.c	/^read_command_line (void) $/;"	f	typeref:typename:char **	file:
read_failed	src/threads/loader.S	/^read_failed:$/;"	l
read_fully	src/utils/Pintos.pm	/^sub read_fully {$/;"	s
read_line	src/examples/shell.c	/^read_line (char line[], size_t size) $/;"	f	typeref:typename:void	file:
read_loader	src/utils/Pintos.pm	/^sub read_loader {$/;"	s
read_mbr	src/threads/loader.S	/^read_mbr:$/;"	l
read_mbr	src/utils/Pintos.pm	/^sub read_mbr {$/;"	s
read_partition_table	src/devices/partition.c	/^read_partition_table (struct block *block, block_sector_t sector,$/;"	f	typeref:typename:void	file:
read_partition_table	src/utils/Pintos.pm	/^sub read_partition_table {$/;"	s
read_sector	src/threads/loader.S	/^read_sector:$/;"	l
read_seqlock_begin	src/threads/synch.c	/^int64_t read_seqlock_begin(struct seqlock* seqlock)$/;"	f	typeref:typename:int64_t
read_seqretry	src/threads/synch.c	/^bool read_seqretry(struct seqlock* seqlock, int64_t sequence)$/;"	f	typeref:typename:bool
read_tar	src/tests/tests.pm	/^sub read_tar {$/;"	s
read_text_file	src/tests/tests.pm	/^sub read_text_file {$/;"	s
read_waiters	src/threads/synch.h	/^    struct list read_waiters;        $/;"	m	struct:rw_semaphore	typeref:struct:list
readdir	src/lib/user/syscall.c	/^readdir (int fd, char name[READDIR_MAX_LEN + 1]) $/;"	f	typeref:typename:bool
ready_list	src/threads/thread.c	/^static struct list ready_list;$/;"	v	typeref:struct:list	file:
real_time_delay	src/devices/timer.c	/^real_time_delay (int64_t num, int32_t denom)$/;"	f	typeref:typename:void	file:
real_time_sleep	src/devices/timer.c	/^real_time_sleep (int64_t num, int32_t denom) $/;"	f	typeref:typename:void	file:
realloc	src/threads/malloc.c	/^realloc (void *old_block, size_t new_size) $/;"	f	typeref:typename:void *
recursor_SRC	src/examples/Makefile	/^recursor_SRC = recursor.c$/;"	m
reg_alt_status	src/devices/ide.c	/^#define reg_alt_status(/;"	d	file:
reg_base	src/devices/ide.c	/^    uint16_t reg_base;          \/* Base I\/O port. *\/$/;"	m	struct:channel	typeref:typename:uint16_t	file:
reg_command	src/devices/ide.c	/^#define reg_command(/;"	d	file:
reg_ctl	src/devices/ide.c	/^#define reg_ctl(/;"	d	file:
reg_data	src/devices/ide.c	/^#define reg_data(/;"	d	file:
reg_device	src/devices/ide.c	/^#define reg_device(/;"	d	file:
reg_error	src/devices/ide.c	/^#define reg_error(/;"	d	file:
reg_lbah	src/devices/ide.c	/^#define reg_lbah(/;"	d	file:
reg_lbal	src/devices/ide.c	/^#define reg_lbal(/;"	d	file:
reg_lbam	src/devices/ide.c	/^#define reg_lbam(/;"	d	file:
reg_nsect	src/devices/ide.c	/^#define reg_nsect(/;"	d	file:
reg_status	src/devices/ide.c	/^#define reg_status(/;"	d	file:
register_handler	src/threads/interrupt.c	/^register_handler (uint8_t vec_no, int dpl, enum intr_level level,$/;"	f	typeref:typename:void	file:
rehash	src/lib/kernel/hash.c	/^rehash (struct hash *h) $/;"	f	typeref:typename:void	file:
relay	src/utils/squish-pty.c	/^relay (int pty, int dead_child_fd) $/;"	f	typeref:typename:void	file:
relay	src/utils/squish-unix.c	/^relay (int sock) $/;"	f	typeref:typename:void	file:
relay_signal	src/utils/pintos	/^sub relay_signal {$/;"	s
release_console	src/lib/kernel/console.c	/^release_console (void) $/;"	f	typeref:typename:void	file:
remove	src/lib/user/syscall.c	/^remove (const char *file)$/;"	f	typeref:typename:bool
remove_elem	src/lib/kernel/hash.c	/^remove_elem (struct hash *h, struct hash_elem *e) $/;"	f	typeref:typename:void	file:
remove_tree	src/tests/filesys/extended/dir-rm-tree.c	/^remove_tree (int at, int bt, int ct, int dt) $/;"	f	typeref:typename:void	file:
removed	src/filesys/inode.c	/^    bool removed;                       \/* True if deleted, false otherwise. *\/$/;"	m	struct:inode	typeref:typename:bool	file:
reset_channel	src/devices/ide.c	/^reset_channel (struct channel *c) $/;"	f	typeref:typename:void	file:
return_block_size	src/tests/filesys/extended/grow-file-size.c	/^return_block_size (void) $/;"	f	typeref:typename:size_t	file:
return_block_size	src/tests/filesys/extended/grow-tell.c	/^return_block_size (void) $/;"	f	typeref:typename:size_t	file:
right_alt	src/devices/kbd.c	/^static bool left_alt, right_alt;        \/* Left and right Alt keys. *\/$/;"	v	typeref:typename:bool	file:
right_ctrl	src/devices/kbd.c	/^static bool left_ctrl, right_ctrl;      \/* Left and right Ctl keys. *\/$/;"	v	typeref:typename:bool	file:
right_shift	src/devices/kbd.c	/^static bool left_shift, right_shift;    \/* Left and right Shift keys. *\/$/;"	v	typeref:typename:bool	file:
rm_SRC	src/examples/Makefile	/^rm_SRC = rm.c$/;"	m
romimage	src/utils/pintos	/^romimage: file=\\$BXSHARE\/BIOS-bochs-latest$/;"	l
round_up	src/utils/Pintos.pm	/^sub round_up {$/;"	s
rtc_get_time	src/devices/rtc.c	/^rtc_get_time (void)$/;"	f	typeref:typename:time_t
run_actions	src/threads/init.c	/^run_actions (char **argv) $/;"	f	typeref:typename:void	file:
run_bochs	src/utils/pintos	/^sub run_bochs {$/;"	s
run_command	src/utils/pintos	/^sub run_command {$/;"	s
run_player	src/utils/pintos	/^sub run_player {$/;"	s
run_qemu	src/utils/pintos	/^sub run_qemu {$/;"	s
run_task	src/threads/init.c	/^run_task (char **argv)$/;"	f	typeref:typename:void	file:
run_test	src/tests/threads/tests.c	/^run_test (const char *name) $/;"	f	typeref:typename:void
run_vm	src/utils/pintos	/^sub run_vm {$/;"	s
running_thread	src/threads/thread.c	/^running_thread (void) $/;"	f	typeref:struct:thread *
rw_semaphore	src/threads/synch.h	/^struct rw_semaphore$/;"	s
rwsema_init	src/threads/synch.c	/^void rwsema_init(struct rw_semaphore* rwsema)$/;"	f	typeref:typename:void
s	src/lib/random.c	/^static uint8_t s[256];          \/* S[]. *\/$/;"	v	typeref:typename:uint8_t[256]	file:
s	src/tests/arc4.h	/^    uint8_t s[256];$/;"	m	struct:arc4	typeref:typename:uint8_t[256]
s_i	src/lib/random.c	/^static uint8_t s_i, s_j;        \/* i, j. *\/$/;"	v	typeref:typename:uint8_t	file:
s_j	src/lib/random.c	/^static uint8_t s_i, s_j;        \/* i, j. *\/$/;"	v	typeref:typename:uint8_t	file:
scancode	src/devices/kbd.c	/^          unsigned scancode;$/;"	m	struct:keyboard_interrupt::shift_key	typeref:typename:unsigned	file:
schedule	src/threads/thread.c	/^schedule (void) $/;"	f	typeref:typename:void	file:
scratch_bdev_name	src/threads/init.c	/^static const char *scratch_bdev_name;$/;"	v	typeref:typename:const char *	file:
sdiff	src/tests/Algorithm/Diff.pm	/^sub sdiff$/;"	s
sdiv64	src/lib/arithmetic.c	/^sdiv64 (int64_t n, int64_t d)$/;"	f	typeref:typename:int64_t	file:
second	src/tests/threads/priority-donate-chain.c	/^    struct lock *second;$/;"	m	struct:lock_pair	typeref:struct:lock *	file:
sector	src/filesys/inode.c	/^    block_sector_t sector;              \/* Sector number of disk location. *\/$/;"	m	struct:inode	typeref:typename:block_sector_t	file:
seek	src/lib/user/syscall.c	/^seek (int fd, unsigned position) $/;"	f	typeref:typename:void
seg_class	src/userprog/gdt.c	/^enum seg_class$/;"	g	file:
seg_granularity	src/userprog/gdt.c	/^enum seg_granularity$/;"	g	file:
select_device	src/devices/ide.c	/^select_device (const struct ata_disk *d)$/;"	f	typeref:typename:void	file:
select_device_wait	src/devices/ide.c	/^select_device_wait (const struct ata_disk *d) $/;"	f	typeref:typename:void	file:
select_sector	src/devices/ide.c	/^select_sector (struct ata_disk *d, block_sector_t sec_no)$/;"	f	typeref:typename:void	file:
sema	src/tests/threads/priority-donate-sema.c	/^    struct semaphore sema;$/;"	m	struct:lock_and_sema	typeref:struct:semaphore	file:
sema	src/tests/threads/priority-sema.c	/^static struct semaphore sema;$/;"	v	typeref:struct:semaphore	file:
sema_down	src/threads/synch.c	/^sema_down (struct semaphore *sema) $/;"	f	typeref:typename:void
sema_init	src/threads/synch.c	/^sema_init (struct semaphore *sema, unsigned value) $/;"	f	typeref:typename:void
sema_self_test	src/threads/synch.c	/^sema_self_test (void) $/;"	f	typeref:typename:void
sema_test_helper	src/threads/synch.c	/^sema_test_helper (void *sema_) $/;"	f	typeref:typename:void	file:
sema_try_down	src/threads/synch.c	/^sema_try_down (struct semaphore *sema) $/;"	f	typeref:typename:bool
sema_up	src/threads/synch.c	/^sema_up (struct semaphore *sema) $/;"	f	typeref:typename:void
semaphore	src/threads/synch.c	/^    struct semaphore semaphore;         \/* This semaphore. *\/$/;"	m	struct:semaphore_elem	typeref:struct:semaphore	file:
semaphore	src/threads/synch.h	/^    struct semaphore semaphore; \/* Binary semaphore controlling access. *\/$/;"	m	struct:lock	typeref:struct:semaphore
semaphore	src/threads/synch.h	/^struct semaphore $/;"	s
semaphore_elem	src/threads/synch.c	/^struct semaphore_elem $/;"	s	file:
seq_test	src/tests/filesys/seq-test.c	/^seq_test (const char *file_name, void *buf, size_t size, size_t initial_size,$/;"	f	typeref:typename:void
seqlock	src/threads/synch.h	/^struct seqlock$/;"	s
seqlock_init	src/threads/synch.c	/^void seqlock_init(struct seqlock* seqlock)$/;"	f	typeref:typename:void
sequence	src/threads/synch.h	/^    int64_t sequence;$/;"	m	struct:seqlock	typeref:typename:int64_t
serial_flush	src/devices/serial.c	/^serial_flush (void) $/;"	f	typeref:typename:void
serial_init_queue	src/devices/serial.c	/^serial_init_queue (void) $/;"	f	typeref:typename:void
serial_interrupt	src/devices/serial.c	/^serial_interrupt (struct intr_frame *f UNUSED) $/;"	f	typeref:typename:void	file:
serial_interrupt	src/devices/serial.c	/^static intr_handler_func serial_interrupt;$/;"	v	typeref:typename:intr_handler_func	file:
serial_notify	src/devices/serial.c	/^serial_notify (void) $/;"	f	typeref:typename:void
serial_putc	src/devices/serial.c	/^serial_putc (uint8_t byte) $/;"	f	typeref:typename:void
set_align	src/utils/Pintos.pm	/^sub set_align {$/;"	s
set_as	src/utils/pintos	/^sub set_as {$/;"	s
set_debug	src/utils/pintos	/^sub set_debug {$/;"	s
set_disk	src/utils/pintos	/^sub set_disk {$/;"	s
set_geometry	src/utils/Pintos.pm	/^sub set_geometry {$/;"	s
set_jitter	src/utils/pintos	/^sub set_jitter {$/;"	s
set_part	src/utils/Pintos.pm	/^sub set_part {$/;"	s
set_realtime	src/utils/pintos	/^sub set_realtime {$/;"	s
set_serial	src/devices/serial.c	/^set_serial (int bps)$/;"	f	typeref:typename:void	file:
set_sim	src/utils/pintos	/^sub set_sim {$/;"	s
set_vga	src/utils/pintos	/^sub set_vga {$/;"	s
setitimer-helper	src/utils/Makefile	/^setitimer-helper: setitimer-helper.o$/;"	t
setup_stack	src/userprog/process.c	/^setup_stack (void **esp) $/;"	f	typeref:typename:bool	file:
shell_SRC	src/examples/Makefile	/^shell_SRC = shell.c$/;"	m
shift_key	src/devices/kbd.c	/^      struct shift_key $/;"	s	function:keyboard_interrupt	file:
shifted_keymap	src/devices/kbd.c	/^static const struct keymap shifted_keymap[] = $/;"	v	typeref:typename:const struct keymap[]	file:
shuffle	src/tests/internal/list.c	/^shuffle (struct value *array, size_t cnt) $/;"	f	typeref:typename:void	file:
shuffle	src/tests/internal/stdlib.c	/^shuffle (int *array, size_t cnt) $/;"	f	typeref:typename:void	file:
shuffle	src/tests/lib.c	/^shuffle (void *buf_, size_t cnt, size_t size) $/;"	f	typeref:typename:void
shuffle	src/tests/lib.pm	/^sub shuffle {$/;"	s
shutdown	src/devices/shutdown.c	/^shutdown (void)$/;"	f	typeref:typename:void
shutdown_configure	src/devices/shutdown.c	/^shutdown_configure (enum shutdown_type type)$/;"	f	typeref:typename:void
shutdown_power_off	src/devices/shutdown.c	/^shutdown_power_off (void)$/;"	f	typeref:typename:void
shutdown_reboot	src/devices/shutdown.c	/^shutdown_reboot (void)$/;"	f	typeref:typename:void
shutdown_type	src/devices/shutdown.h	/^enum shutdown_type$/;"	g
sigchld_handler	src/utils/squish-pty.c	/^sigchld_handler (int signo __attribute__ ((unused))) $/;"	f	typeref:typename:void	file:
sigchld_handler	src/utils/squish-unix.c	/^sigchld_handler (int signo __attribute__ ((unused))) $/;"	f	typeref:typename:void	file:
signal	src/devices/intq.c	/^signal (struct intq *q UNUSED, struct thread **waiter) $/;"	f	typeref:typename:void	file:
signature	src/devices/partition.c	/^      uint16_t signature;       \/* Should be 0xaa55. *\/$/;"	m	struct:read_partition_table::partition_table	typeref:typename:uint16_t	file:
simple_thread_data	src/tests/threads/priority-fifo.c	/^struct simple_thread_data $/;"	s	file:
simple_thread_func	src/tests/threads/priority-fifo.c	/^simple_thread_func (void *data_) $/;"	f	typeref:typename:void	file:
simple_thread_func	src/tests/threads/priority-fifo.c	/^static thread_func simple_thread_func;$/;"	v	typeref:typename:thread_func	file:
simple_thread_func	src/tests/threads/priority-preempt.c	/^simple_thread_func (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
simple_thread_func	src/tests/threads/priority-preempt.c	/^static thread_func simple_thread_func;$/;"	v	typeref:typename:thread_func	file:
size	src/devices/block.c	/^    block_sector_t size;                 \/* Size in sectors. *\/$/;"	m	struct:block	typeref:typename:block_sector_t	file:
size	src/devices/partition.c	/^      uint32_t size;            \/* Number of sectors. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint32_t	file:
size	src/lib/ustar.c	/^    char size[12];              \/* File size in bytes as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[12]	file:
size	src/utils/squish-pty.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
size	src/utils/squish-unix.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
size_t	src/lib/stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t	typeref:typename:__SIZE_TYPE__
sleep_list	src/threads/thread.c	/^static struct list sleep_list;$/;"	v	typeref:struct:list	file:
sleep_test	src/tests/threads/alarm-simultaneous.c	/^struct sleep_test $/;"	s	file:
sleep_test	src/tests/threads/alarm-wait.c	/^struct sleep_test $/;"	s	file:
sleep_thread	src/tests/threads/alarm-wait.c	/^struct sleep_thread $/;"	s	file:
sleeper	src/tests/threads/alarm-simultaneous.c	/^sleeper (void *test_) $/;"	f	typeref:typename:void	file:
sleeper	src/tests/threads/alarm-wait.c	/^sleeper (void *t_) $/;"	f	typeref:typename:void	file:
smod64	src/lib/arithmetic.c	/^smod64 (int64_t n, int64_t d)$/;"	f	typeref:typename:int32_t	file:
snprintf	src/lib/stdio.c	/^snprintf (char *buffer, size_t buf_size, const char *format, ...) $/;"	f	typeref:typename:int
sort	src/lib/stdlib.c	/^sort (void *array, size_t cnt, size_t size,$/;"	f	typeref:typename:void
sort_chunks	src/tests/vm/page-merge-seq.c	/^sort_chunks (void)$/;"	f	typeref:typename:void	file:
sort_chunks	src/tests/vm/parallel-merge.c	/^sort_chunks (const char *subprocess, int exit_status)$/;"	f	typeref:typename:void	file:
spawn_child	src/tests/userprog/no-vm/multi-oom.c	/^spawn_child (int c, enum child_termination_mode mode)$/;"	f	typeref:typename:pid_t	file:
speaker_beep	src/devices/speaker.c	/^speaker_beep (void)$/;"	f	typeref:typename:void
speaker_off	src/devices/speaker.c	/^speaker_off (void)$/;"	f	typeref:typename:void
speaker_on	src/devices/speaker.c	/^speaker_on (int frequency)$/;"	f	typeref:typename:void
sprintf	src/lib/stdio.h	/^#define sprintf /;"	d
squish-pty	src/utils/Makefile	/^squish-pty: squish-pty.o$/;"	t
squish-unix	src/utils/Makefile	/^squish-unix: squish-unix.o$/;"	t
ss	src/threads/interrupt.h	/^    uint16_t ss, :16;           \/* Data segment for esp. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
ss	src/userprog/tss.c	/^    uint16_t ss, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
ss0	src/userprog/tss.c	/^    uint16_t ss0, :16;                  \/* Ring 0 stack segment selector. *\/$/;"	m	struct:tss	typeref:typename:uint16_t	file:
ss1	src/userprog/tss.c	/^    uint16_t ss1, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
ss2	src/userprog/tss.c	/^    uint16_t ss2, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
stack	src/threads/thread.h	/^    uint8_t *stack;                     \/* Saved stack pointer. *\/$/;"	m	struct:thread	typeref:typename:uint8_t *
start	src/devices/partition.c	/^    block_sector_t start;               \/* First sector within device. *\/$/;"	m	struct:partition	typeref:typename:block_sector_t	file:
start	src/filesys/inode.c	/^    block_sector_t start;               \/* First data sector. *\/$/;"	m	struct:inode_disk	typeref:typename:block_sector_t	file:
start	src/tests/threads/alarm-simultaneous.c	/^    int64_t start;              \/* Current time at start of test. *\/$/;"	m	struct:sleep_test	typeref:typename:int64_t	file:
start	src/tests/threads/alarm-wait.c	/^    int64_t start;              \/* Current time at start of test. *\/$/;"	m	struct:sleep_test	typeref:typename:int64_t	file:
start	src/threads/loader.S	/^start:$/;"	l
start	src/threads/start.S	/^start:$/;"	l
start_chs	src/devices/partition.c	/^      uint8_t start_chs[3];     \/* Encoded starting cylinder, head, sector. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t[3]	file:
start_process	src/userprog/process.c	/^start_process (void *file_name_)$/;"	f	typeref:typename:void	file:
start_time	src/tests/threads/mlfqs-fair.c	/^    int64_t start_time;$/;"	m	struct:thread_info	typeref:typename:int64_t	file:
start_time	src/tests/threads/mlfqs-load-60.c	/^static int64_t start_time;$/;"	v	typeref:typename:int64_t	file:
start_time	src/tests/threads/mlfqs-load-avg.c	/^static int64_t start_time;$/;"	v	typeref:typename:int64_t	file:
state_var	src/devices/kbd.c	/^          bool *state_var;$/;"	m	struct:keyboard_interrupt::shift_key	typeref:typename:bool *	file:
status	src/threads/thread.h	/^    enum thread_status status;          \/* Thread state. *\/$/;"	m	struct:thread	typeref:enum:thread_status
strcat	src/lib/string.h	/^#define strcat /;"	d
strchr	src/lib/string.c	/^strchr (const char *string, int c_) $/;"	f	typeref:typename:char *
strcmp	src/lib/string.c	/^strcmp (const char *a_, const char *b_) $/;"	f	typeref:typename:int
strcpy	src/lib/string.h	/^#define strcpy /;"	d
strcspn	src/lib/string.c	/^strcspn (const char *string, const char *stop) $/;"	f	typeref:typename:size_t
strip_antisocial_prefixes	src/lib/ustar.c	/^strip_antisocial_prefixes (const char *file_name)$/;"	f	typeref:typename:const char *	file:
strlcat	src/lib/string.c	/^strlcat (char *dst, const char *src, size_t size) $/;"	f	typeref:typename:size_t
strlcpy	src/lib/string.c	/^strlcpy (char *dst, const char *src, size_t size) $/;"	f	typeref:typename:size_t
strlen	src/lib/string.c	/^strlen (const char *string) $/;"	f	typeref:typename:size_t
strncat	src/lib/string.h	/^#define strncat /;"	d
strncpy	src/lib/string.h	/^#define strncpy /;"	d
strnlen	src/lib/string.c	/^strnlen (const char *string, size_t maxlen) $/;"	f	typeref:typename:size_t
strpbrk	src/lib/string.c	/^strpbrk (const char *string, const char *stop) $/;"	f	typeref:typename:char *
strrchr	src/lib/string.c	/^strrchr (const char *string, int c_) $/;"	f	typeref:typename:char *
strspn	src/lib/string.c	/^strspn (const char *string, const char *skip) $/;"	f	typeref:typename:size_t
strstr	src/lib/string.c	/^strstr (const char *haystack, const char *needle) $/;"	f	typeref:typename:char *
strtok	src/lib/string.h	/^#define strtok /;"	d
strtok_r	src/lib/string.c	/^strtok_r (char *s, const char *delimiters, char **save_ptr) $/;"	f	typeref:typename:char *
swap	src/lib/kernel/list.c	/^swap (struct list_elem **a, struct list_elem **b) $/;"	f	typeref:typename:void	file:
swap	src/tests/lib.c	/^swap (void *a_, void *b_, size_t size) $/;"	f	typeref:typename:void	file:
swap	src/tests/vm/qsort.c	/^swap (unsigned char *a, unsigned char *b) $/;"	f	typeref:typename:void	file:
swap_bdev_name	src/threads/init.c	/^static const char *swap_bdev_name;$/;"	v	typeref:typename:const char *	file:
swap_byte	src/lib/random.c	/^swap_byte (uint8_t *a, uint8_t *b) $/;"	f	typeref:typename:void	file:
swap_byte	src/tests/arc4.c	/^swap_byte (uint8_t *a, uint8_t *b)$/;"	f	typeref:typename:void	file:
switch_entry	src/threads/switch.S	/^switch_entry:$/;"	l
switch_entry_frame	src/threads/switch.h	/^struct switch_entry_frame$/;"	s
switch_threads	src/threads/switch.S	/^switch_threads:$/;"	l
switch_threads_frame	src/threads/switch.h	/^struct switch_threads_frame $/;"	s
syscall0	src/lib/user/syscall.c	/^#define syscall0(/;"	d	file:
syscall1	src/lib/user/syscall.c	/^#define syscall1(/;"	d	file:
syscall2	src/lib/user/syscall.c	/^#define syscall2(/;"	d	file:
syscall3	src/lib/user/syscall.c	/^#define syscall3(/;"	d	file:
syscall_handler	src/userprog/syscall.c	/^syscall_handler (struct intr_frame *f UNUSED) $/;"	f	typeref:typename:void	file:
syscall_init	src/userprog/syscall.c	/^syscall_init (void) $/;"	f	typeref:typename:void
tags	src/Makefile	/^tags::$/;"	t
tail	src/devices/intq.h	/^    int tail;                   \/* Old data is read here. *\/$/;"	m	struct:intq	typeref:typename:int
tail	src/lib/kernel/list.h	/^    struct list_elem tail;      \/* List tail. *\/$/;"	m	struct:list	typeref:struct:list_elem
tell	src/lib/user/syscall.c	/^tell (int fd) $/;"	f	typeref:typename:unsigned
test	src/tests/internal/list.c	/^test (void) $/;"	f	typeref:typename:void
test	src/tests/internal/stdio.c	/^test (void) $/;"	f	typeref:typename:void
test	src/tests/internal/stdlib.c	/^test (void) $/;"	f	typeref:typename:void
test	src/tests/threads/alarm-wait.c	/^    struct sleep_test *test;     \/* Info shared between all threads. *\/$/;"	m	struct:sleep_thread	typeref:struct:sleep_test *	file:
test	src/tests/threads/tests.c	/^struct test $/;"	s	file:
test_alarm_multiple	src/tests/threads/alarm-wait.c	/^test_alarm_multiple (void) $/;"	f	typeref:typename:void
test_alarm_negative	src/tests/threads/alarm-negative.c	/^test_alarm_negative (void) $/;"	f	typeref:typename:void
test_alarm_priority	src/tests/threads/alarm-priority.c	/^test_alarm_priority (void) $/;"	f	typeref:typename:void
test_alarm_simultaneous	src/tests/threads/alarm-simultaneous.c	/^test_alarm_simultaneous (void) $/;"	f	typeref:typename:void
test_alarm_single	src/tests/threads/alarm-wait.c	/^test_alarm_single (void) $/;"	f	typeref:typename:void
test_alarm_zero	src/tests/threads/alarm-zero.c	/^test_alarm_zero (void) $/;"	f	typeref:typename:void
test_func	src/tests/threads/tests.h	/^typedef void test_func (void);$/;"	t	typeref:typename:void ()(void)
test_main	src/tests/filesys/base/syn-read.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/base/syn-remove.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/base/syn-write.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-empty-name.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-mk-tree.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-mkdir.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-open.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-over-file.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-rm-cwd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-rm-parent.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-rm-root.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-rm-tree.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-rmdir.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-under-file.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/dir-vine.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/grow-file-size.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/grow-sparse.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/grow-tell.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/grow-two-files.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/filesys/extended/syn-rw.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/bad-jump.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/bad-jump2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/bad-read.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/bad-read2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/bad-write.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/bad-write2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/child-bad.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/close-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/close-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/close-stdin.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/close-stdout.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/close-twice.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-bound.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-empty.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-exists.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-long.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/create-null.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-arg.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-bound-2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-bound-3.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-bound.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-missing.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-multiple.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exec-once.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/exit.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/halt.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/multi-child-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-empty.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-missing.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-null.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/open-twice.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/read-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/read-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/read-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/read-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/read-stdout.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/read-zero.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/rox-simple.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/sc-bad-arg.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/sc-bad-sp.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/sc-boundary-2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/sc-boundary-3.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/sc-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/wait-bad-pid.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/wait-killed.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/wait-simple.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/wait-twice.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/write-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/write-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/write-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/write-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/write-stdin.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/userprog/write-zero.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/child-inherit.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/child-mm-wrt.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-clean.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-close.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-exit.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-inherit.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-misalign.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-null.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-over-code.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-over-data.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-over-stk.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-overlap.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-read.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-remove.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-shuffle.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-twice.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-unmap.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-write.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/mmap-zero.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/page-linear.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/page-merge-mm.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/page-merge-par.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/page-merge-seq.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/page-merge-stk.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	src/tests/vm/page-parallel.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/page-shuffle.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-bad-addr.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-bad-read.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-big-stk-obj.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-grow-bad.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-grow-pusha.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-grow-stack.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-grow-stk-sc.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-write-code-2.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	src/tests/vm/pt-write-code.c	/^test_main (void)$/;"	f	typeref:typename:void
test_mlfqs_block	src/tests/threads/mlfqs-block.c	/^test_mlfqs_block (void) $/;"	f	typeref:typename:void
test_mlfqs_fair	src/tests/threads/mlfqs-fair.c	/^test_mlfqs_fair (int thread_cnt, int nice_min, int nice_step)$/;"	f	typeref:typename:void	file:
test_mlfqs_fair_2	src/tests/threads/mlfqs-fair.c	/^test_mlfqs_fair_2 (void) $/;"	f	typeref:typename:void
test_mlfqs_fair_20	src/tests/threads/mlfqs-fair.c	/^test_mlfqs_fair_20 (void) $/;"	f	typeref:typename:void
test_mlfqs_load_1	src/tests/threads/mlfqs-load-1.c	/^test_mlfqs_load_1 (void) $/;"	f	typeref:typename:void
test_mlfqs_load_60	src/tests/threads/mlfqs-load-60.c	/^test_mlfqs_load_60 (void) $/;"	f	typeref:typename:void
test_mlfqs_load_avg	src/tests/threads/mlfqs-load-avg.c	/^test_mlfqs_load_avg (void) $/;"	f	typeref:typename:void
test_mlfqs_nice_10	src/tests/threads/mlfqs-fair.c	/^test_mlfqs_nice_10 (void) $/;"	f	typeref:typename:void
test_mlfqs_nice_2	src/tests/threads/mlfqs-fair.c	/^test_mlfqs_nice_2 (void) $/;"	f	typeref:typename:void
test_mlfqs_recent_1	src/tests/threads/mlfqs-recent-1.c	/^test_mlfqs_recent_1 (void) $/;"	f	typeref:typename:void
test_name	src/tests/lib.c	/^const char *test_name;$/;"	v	typeref:typename:const char *
test_name	src/tests/threads/tests.c	/^static const char *test_name;$/;"	v	typeref:typename:const char *	file:
test_priority_change	src/tests/threads/priority-change.c	/^test_priority_change (void) $/;"	f	typeref:typename:void
test_priority_condvar	src/tests/threads/priority-condvar.c	/^test_priority_condvar (void) $/;"	f	typeref:typename:void
test_priority_donate_chain	src/tests/threads/priority-donate-chain.c	/^test_priority_donate_chain (void) $/;"	f	typeref:typename:void
test_priority_donate_lower	src/tests/threads/priority-donate-lower.c	/^test_priority_donate_lower (void) $/;"	f	typeref:typename:void
test_priority_donate_multiple	src/tests/threads/priority-donate-multiple.c	/^test_priority_donate_multiple (void) $/;"	f	typeref:typename:void
test_priority_donate_multiple2	src/tests/threads/priority-donate-multiple2.c	/^test_priority_donate_multiple2 (void) $/;"	f	typeref:typename:void
test_priority_donate_nest	src/tests/threads/priority-donate-nest.c	/^test_priority_donate_nest (void) $/;"	f	typeref:typename:void
test_priority_donate_one	src/tests/threads/priority-donate-one.c	/^test_priority_donate_one (void) $/;"	f	typeref:typename:void
test_priority_donate_sema	src/tests/threads/priority-donate-sema.c	/^test_priority_donate_sema (void) $/;"	f	typeref:typename:void
test_priority_fifo	src/tests/threads/priority-fifo.c	/^test_priority_fifo (void) $/;"	f	typeref:typename:void
test_priority_preempt	src/tests/threads/priority-preempt.c	/^test_priority_preempt (void) $/;"	f	typeref:typename:void
test_priority_sema	src/tests/threads/priority-sema.c	/^test_priority_sema (void) $/;"	f	typeref:typename:void
test_rwsema1	src/tests/threads/rwsema1.c	/^test_rwsema1 (void) $/;"	f	typeref:typename:void
test_rwsema1	src/tests/threads/seqlock6.c	/^test_rwsema1 (void) $/;"	f	typeref:typename:void
test_rwsema2	src/tests/threads/rwsema2.c	/^test_rwsema2 (void) $/;"	f	typeref:typename:void
test_rwsema3	src/tests/threads/rwsema3.c	/^test_rwsema3 (void) $/;"	f	typeref:typename:void
test_rwsema4	src/tests/threads/rwsema4.c	/^test_rwsema4 (void) $/;"	f	typeref:typename:void
test_rwsema5	src/tests/threads/rwsema5.c	/^test_rwsema5 (void) $/;"	f	typeref:typename:void
test_rwsema6	src/tests/threads/rwsema6.c	/^test_rwsema6 (void) $/;"	f	typeref:typename:void
test_seqlock1	src/tests/threads/seqlock1.c	/^test_seqlock1 (void) $/;"	f	typeref:typename:void
test_seqlock2	src/tests/threads/seqlock2.c	/^test_seqlock2 (void) $/;"	f	typeref:typename:void
test_seqlock3	src/tests/threads/seqlock3.c	/^test_seqlock3 (void) $/;"	f	typeref:typename:void
test_seqlock4	src/tests/threads/seqlock4.c	/^test_seqlock4 (void) $/;"	f	typeref:typename:void
test_seqlock5	src/tests/threads/seqlock5.c	/^test_seqlock5 (void) $/;"	f	typeref:typename:void
test_sleep	src/tests/threads/alarm-simultaneous.c	/^test_sleep (int thread_cnt, int iterations) $/;"	f	typeref:typename:void	file:
test_sleep	src/tests/threads/alarm-wait.c	/^test_sleep (int thread_cnt, int iterations) $/;"	f	typeref:typename:void	file:
tests	src/tests/threads/tests.c	/^static const struct test tests[] = $/;"	v	typeref:typename:const struct test[]	file:
thread	src/threads/thread.h	/^struct thread$/;"	s
thread_action_func	src/threads/thread.h	/^typedef void thread_action_func (struct thread *t, void *aux);$/;"	t	typeref:typename:void ()(struct thread * t,void * aux)
thread_block	src/threads/thread.c	/^thread_block (void) $/;"	f	typeref:typename:void
thread_create	src/threads/thread.c	/^thread_create (const char *name, int priority,$/;"	f	typeref:typename:tid_t
thread_current	src/threads/thread.c	/^thread_current (void) $/;"	f	typeref:struct:thread *
thread_exit	src/threads/thread.c	/^thread_exit (void) $/;"	f	typeref:typename:void
thread_foreach	src/threads/thread.c	/^thread_foreach (thread_action_func *func, void *aux)$/;"	f	typeref:typename:void
thread_func	src/threads/thread.h	/^typedef void thread_func (void *aux);$/;"	t	typeref:typename:void ()(void * aux)
thread_get_load_avg	src/threads/thread.c	/^thread_get_load_avg (void) $/;"	f	typeref:typename:int
thread_get_nice	src/threads/thread.c	/^thread_get_nice (void) $/;"	f	typeref:typename:int
thread_get_priority	src/threads/thread.c	/^thread_get_priority (void) $/;"	f	typeref:typename:int
thread_get_recent_cpu	src/threads/thread.c	/^thread_get_recent_cpu (void) $/;"	f	typeref:typename:int
thread_info	src/tests/threads/mlfqs-fair.c	/^struct thread_info $/;"	s	file:
thread_init	src/threads/thread.c	/^thread_init (void) $/;"	f	typeref:typename:void
thread_mlfqs	src/threads/thread.c	/^bool thread_mlfqs;$/;"	v	typeref:typename:bool
thread_name	src/threads/thread.c	/^thread_name (void) $/;"	f	typeref:typename:const char *
thread_print_stats	src/threads/thread.c	/^thread_print_stats (void) $/;"	f	typeref:typename:void
thread_report_latency	src/threads/thread.c	/^bool thread_report_latency;$/;"	v	typeref:typename:bool
thread_schedule_tail	src/threads/thread.c	/^thread_schedule_tail (struct thread *prev)$/;"	f	typeref:typename:void
thread_set_nice	src/threads/thread.c	/^thread_set_nice (int nice UNUSED) $/;"	f	typeref:typename:void
thread_set_priority	src/threads/thread.c	/^thread_set_priority (int new_priority) $/;"	f	typeref:typename:void
thread_sleep	src/threads/thread.c	/^void thread_sleep(int64_t wakeup_tick)$/;"	f	typeref:typename:void
thread_start	src/threads/thread.c	/^thread_start (void) $/;"	f	typeref:typename:void
thread_status	src/threads/thread.h	/^enum thread_status$/;"	g
thread_tick	src/threads/thread.c	/^thread_tick (void) $/;"	f	typeref:typename:void
thread_ticks	src/threads/thread.c	/^static unsigned thread_ticks;   \/* # of timer ticks since last yield. *\/$/;"	v	typeref:typename:unsigned	file:
thread_tid	src/threads/thread.c	/^thread_tid (void) $/;"	f	typeref:typename:tid_t
thread_unblock	src/threads/thread.c	/^thread_unblock (struct thread *t) $/;"	f	typeref:typename:void
thread_yield	src/threads/thread.c	/^thread_yield (void) $/;"	f	typeref:typename:void
threads/kernel.lds.s	src/threads/build/Makefile	/^threads\/kernel.lds.s: CPPFLAGS += -P$/;"	t
threads/kernel.lds.s	src/threads/build/Makefile	/^threads\/kernel.lds.s: threads\/kernel.lds.S threads\/loader.h$/;"	t
threads/loader.o	src/threads/build/Makefile	/^threads\/loader.o: threads\/loader.S$/;"	t
threads_SRC	src/threads/build/Makefile	/^threads_SRC  = threads\/start.S		# Startup code.$/;"	m
tick_count	src/tests/threads/mlfqs-fair.c	/^    int tick_count;$/;"	m	struct:thread_info	typeref:typename:int	file:
ticks	src/devices/timer.c	/^static int64_t ticks;$/;"	v	typeref:typename:int64_t	file:
tid	src/threads/thread.h	/^    tid_t tid;                          \/* Thread identifier. *\/$/;"	m	struct:thread	typeref:typename:tid_t
tid_lock	src/threads/thread.c	/^static struct lock tid_lock;$/;"	v	typeref:struct:lock	file:
tid_t	src/threads/thread.h	/^typedef int tid_t;$/;"	t	typeref:typename:int
time_t	src/devices/rtc.h	/^typedef unsigned long time_t;$/;"	t	typeref:typename:unsigned long
timeout	src/utils/pintos	/^sub timeout {$/;"	s
timer_calibrate	src/devices/timer.c	/^timer_calibrate (void) $/;"	f	typeref:typename:void
timer_elapsed	src/devices/timer.c	/^timer_elapsed (int64_t then) $/;"	f	typeref:typename:int64_t
timer_init	src/devices/timer.c	/^timer_init (void) $/;"	f	typeref:typename:void
timer_interrupt	src/devices/timer.c	/^static intr_handler_func timer_interrupt;$/;"	v	typeref:typename:intr_handler_func	file:
timer_interrupt	src/devices/timer.c	/^timer_interrupt (struct intr_frame *args UNUSED)$/;"	f	typeref:typename:void	file:
timer_mdelay	src/devices/timer.c	/^timer_mdelay (int64_t ms) $/;"	f	typeref:typename:void
timer_msleep	src/devices/timer.c	/^timer_msleep (int64_t ms) $/;"	f	typeref:typename:void
timer_ndelay	src/devices/timer.c	/^timer_ndelay (int64_t ns) $/;"	f	typeref:typename:void
timer_nsleep	src/devices/timer.c	/^timer_nsleep (int64_t ns) $/;"	f	typeref:typename:void
timer_print_stats	src/devices/timer.c	/^timer_print_stats (void) $/;"	f	typeref:typename:void
timer_sleep	src/devices/timer.c	/^timer_sleep (int64_t ticks) $/;"	f	typeref:typename:void
timer_ticks	src/devices/timer.c	/^timer_ticks (void) $/;"	f	typeref:typename:int64_t
timer_udelay	src/devices/timer.c	/^timer_udelay (int64_t us) $/;"	f	typeref:typename:void
timer_usleep	src/devices/timer.c	/^timer_usleep (int64_t us) $/;"	f	typeref:typename:void
tolower	src/lib/ctype.h	/^static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }$/;"	f	typeref:typename:int
too_many_loops	src/devices/timer.c	/^too_many_loops (unsigned loops) $/;"	f	typeref:typename:bool	file:
toupper	src/lib/ctype.h	/^static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }$/;"	f	typeref:typename:int
trace	src/userprog/tss.c	/^    uint16_t trace, bitmap;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
traverse_balanced	src/tests/Algorithm/Diff.pm	/^sub traverse_balanced$/;"	s
traverse_sequences	src/tests/Algorithm/Diff.pm	/^sub traverse_sequences$/;"	s
true	src/lib/stdbool.h	/^#define true	/;"	d
try_write	src/tests/userprog/child-rox.c	/^try_write (void) $/;"	f	typeref:typename:void	file:
tss	src/userprog/tss.c	/^static struct tss *tss;$/;"	v	typeref:struct:tss *	file:
tss	src/userprog/tss.c	/^struct tss$/;"	s	file:
tss_get	src/userprog/tss.c	/^tss_get (void) $/;"	f	typeref:struct:tss *
tss_init	src/userprog/tss.c	/^tss_init (void) $/;"	f	typeref:typename:void
tss_update	src/userprog/tss.c	/^tss_update (void) $/;"	f	typeref:typename:void
turn_off_least_1bit	src/lib/kernel/hash.c	/^turn_off_least_1bit (size_t x) $/;"	f	typeref:typename:size_t	file:
txq	src/devices/serial.c	/^static struct intq txq;$/;"	v	typeref:struct:intq	file:
type	src/devices/block.c	/^    enum block_type type;                \/* Type of block device. *\/$/;"	m	struct:block	typeref:enum:block_type	file:
type	src/devices/partition.c	/^      uint8_t type;             \/* Partition type (see partition_type_name). *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t	file:
type	src/lib/stdio.c	/^    type;$/;"	m	struct:printf_conversion	typeref:enum:printf_conversion::__anon90bc09760203	file:
typeflag	src/lib/ustar.c	/^    char typeflag;              \/* An enum ustar_type value. *\/$/;"	m	struct:ustar_header	typeref:typename:char	file:
udiv64	src/lib/arithmetic.c	/^udiv64 (uint64_t n, uint64_t d)$/;"	f	typeref:typename:uint64_t	file:
uid	src/lib/ustar.c	/^    char uid[8];                \/* User ID as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
uint16_t	src/lib/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t	typeref:typename:unsigned short int
uint32_t	src/lib/stdint.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	src/lib/stdint.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
uint8_t	src/lib/stdint.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintmax_t	src/lib/stdint.h	/^typedef uint64_t uintmax_t;$/;"	t	typeref:typename:uint64_t
uintptr_t	src/lib/stdint.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umod64	src/lib/arithmetic.c	/^umod64 (uint64_t n, uint64_t d)$/;"	f	typeref:typename:uint32_t	file:
uname	src/lib/ustar.c	/^    char uname[32];             \/* User name, always null-terminated. *\/$/;"	m	struct:ustar_header	typeref:typename:char[32]	file:
unexpected_cnt	src/threads/interrupt.c	/^static unsigned int unexpected_cnt[INTR_CNT];$/;"	v	typeref:typename:unsigned int[]	file:
unexpected_interrupt	src/threads/interrupt.c	/^unexpected_interrupt (const struct intr_frame *f)$/;"	f	typeref:typename:void	file:
unshifted_keymap	src/devices/kbd.c	/^static const struct keymap unshifted_keymap[] = $/;"	v	typeref:typename:const struct keymap[]	file:
unused	src/filesys/inode.c	/^    uint32_t unused[125];               \/* Not used. *\/$/;"	m	struct:inode_disk	typeref:typename:uint32_t[125]	file:
up_read	src/threads/synch.c	/^void up_read(struct rw_semaphore* rwsema)$/;"	f	typeref:typename:void
up_write	src/threads/synch.c	/^void up_write(struct rw_semaphore* rwsema)$/;"	f	typeref:typename:void
usage	src/tests/filesys/extended/tar.c	/^usage (void) $/;"	f	typeref:typename:void	file:
usage	src/threads/init.c	/^usage (void)$/;"	f	typeref:typename:void	file:
usage	src/utils/pintos	/^sub usage {$/;"	s
use_console_lock	src/lib/kernel/console.c	/^static bool use_console_lock;$/;"	v	typeref:typename:bool	file:
used_map	src/threads/palloc.c	/^    struct bitmap *used_map;            \/* Bitmap of free pages. *\/$/;"	m	struct:pool	typeref:struct:bitmap *	file:
user_page_limit	src/threads/init.c	/^static size_t user_page_limit = SIZE_MAX;$/;"	v	typeref:typename:size_t	file:
user_pool	src/threads/palloc.c	/^static struct pool kernel_pool, user_pool;$/;"	v	typeref:struct:pool	file:
user_ticks	src/threads/thread.c	/^static long long user_ticks;    \/* # of timer ticks in user programs. *\/$/;"	v	typeref:typename:long long	file:
userprog_SRC	src/threads/build/Makefile	/^userprog_SRC  = userprog\/process.c	# Process loading.$/;"	m
ustar_header	src/lib/ustar.c	/^struct ustar_header$/;"	s	file:
ustar_make_header	src/lib/ustar.c	/^ustar_make_header (const char *file_name, enum ustar_type type,$/;"	f	typeref:typename:bool
ustar_parse_header	src/lib/ustar.c	/^ustar_parse_header (const char header[USTAR_HEADER_SIZE],$/;"	f	typeref:typename:const char *
ustar_type	src/lib/ustar.h	/^enum ustar_type$/;"	g
va_arg	src/lib/stdarg.h	/^#define va_arg(/;"	d
va_copy	src/lib/stdarg.h	/^#define va_copy(/;"	d
va_end	src/lib/stdarg.h	/^#define va_end(/;"	d
va_list	src/lib/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	src/lib/stdarg.h	/^#define va_start(/;"	d
validate_segment	src/userprog/process.c	/^validate_segment (const struct Elf32_Phdr *phdr, struct file *file) $/;"	f	typeref:typename:bool	file:
value	src/tests/internal/list.c	/^    int value;                  \/* Item value. *\/$/;"	m	struct:value	typeref:typename:int	file:
value	src/tests/internal/list.c	/^struct value $/;"	s	file:
value	src/threads/synch.h	/^    unsigned value;             \/* Current value. *\/$/;"	m	struct:semaphore	typeref:typename:unsigned
value_less	src/tests/internal/list.c	/^value_less (const struct list_elem *a_, const struct list_elem *b_,$/;"	f	typeref:typename:bool	file:
vec_no	src/threads/interrupt.h	/^    uint32_t vec_no;            \/* Interrupt vector number. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
verify	src/tests/vm/page-merge-seq.c	/^verify (void) $/;"	f	typeref:typename:void	file:
verify	src/tests/vm/parallel-merge.c	/^verify (void) $/;"	f	typeref:typename:void	file:
verify_bsearch	src/tests/internal/stdlib.c	/^verify_bsearch (const int *array, size_t cnt) $/;"	f	typeref:typename:void	file:
verify_list_bkwd	src/tests/internal/list.c	/^verify_list_bkwd (struct list *list, int size) $/;"	f	typeref:typename:void	file:
verify_list_fwd	src/tests/internal/list.c	/^verify_list_fwd (struct list *list, int size) $/;"	f	typeref:typename:void	file:
verify_order	src/tests/internal/stdlib.c	/^verify_order (const int *array, size_t cnt) $/;"	f	typeref:typename:void	file:
version	src/lib/ustar.c	/^    char version[2];            \/* "00" *\/$/;"	m	struct:ustar_header	typeref:typename:char[2]	file:
vga_putc	src/devices/vga.c	/^vga_putc (int c)$/;"	f	typeref:typename:void
vgaromimage	src/utils/pintos	/^vgaromimage: file=\\$BXSHARE\/VGABIOS-lgpl-latest$/;"	l
vhprintf	src/lib/user/console.c	/^vhprintf (int handle, const char *format, va_list args) $/;"	f	typeref:typename:int
vhprintf_aux	src/lib/user/console.c	/^struct vhprintf_aux $/;"	s	file:
vmsg	src/tests/lib.c	/^vmsg (const char *format, va_list args, const char *suffix) $/;"	f	typeref:typename:void	file:
vprintf	src/lib/kernel/console.c	/^vprintf (const char *format, va_list args) $/;"	f	typeref:typename:int
vprintf	src/lib/user/console.c	/^vprintf (const char *format, va_list args) $/;"	f	typeref:typename:int
vprintf_helper	src/lib/kernel/console.c	/^vprintf_helper (char c, void *char_cnt_) $/;"	f	typeref:typename:void	file:
vsnprintf	src/lib/stdio.c	/^vsnprintf (char *buffer, size_t buf_size, const char *format, va_list args) $/;"	f	typeref:typename:int
vsnprintf_aux	src/lib/stdio.c	/^struct vsnprintf_aux $/;"	s	file:
vsnprintf_helper	src/lib/stdio.c	/^vsnprintf_helper (char ch, void *aux_)$/;"	f	typeref:typename:void	file:
vsprintf	src/lib/stdio.h	/^#define vsprintf /;"	d
vtop	src/threads/vaddr.h	/^vtop (const void *vaddr)$/;"	f	typeref:typename:uintptr_t
w_thread_func	src/tests/threads/rwsema1.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/rwsema1.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/rwsema2.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/rwsema2.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/rwsema3.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/rwsema3.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/rwsema4.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/rwsema4.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/rwsema5.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/rwsema5.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/rwsema6.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/rwsema6.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/seqlock3.c	/^static thread_func w_thread_func;$/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/seqlock3.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/seqlock4.c	/^static thread_func w_thread_func; $/;"	v	typeref:typename:thread_func	file:
w_thread_func	src/tests/threads/seqlock4.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/seqlock5.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
w_thread_func	src/tests/threads/seqlock6.c	/^w_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
wait	src/devices/intq.c	/^wait (struct intq *q UNUSED, struct thread **waiter) $/;"	f	typeref:typename:void	file:
wait	src/lib/user/syscall.c	/^wait (pid_t pid)$/;"	f	typeref:typename:int
wait_children	src/tests/lib.c	/^wait_children (pid_t pids[], size_t child_cnt) $/;"	f	typeref:typename:void
wait_sema	src/tests/threads/alarm-priority.c	/^static struct semaphore wait_sema;$/;"	v	typeref:struct:semaphore	file:
wait_until_idle	src/devices/ide.c	/^wait_until_idle (const struct ata_disk *d) $/;"	f	typeref:typename:void	file:
wait_while_busy	src/devices/ide.c	/^wait_while_busy (const struct ata_disk *d) $/;"	f	typeref:typename:bool	file:
waiters	src/threads/synch.h	/^    struct list waiters;        \/* List of waiting threads. *\/$/;"	m	struct:condition	typeref:struct:list
waiters	src/threads/synch.h	/^    struct list waiters;        \/* List of waiting threads. *\/$/;"	m	struct:semaphore	typeref:struct:list
wake_time	src/tests/threads/alarm-priority.c	/^static int64_t wake_time;$/;"	v	typeref:typename:int64_t	file:
wakeup	src/threads/thread.c	/^void wakeup()$/;"	f	typeref:typename:void
wakeup_tick	src/threads/thread.h	/^    int64_t wakeup_tick;		\/* Tick till wake up.  *\/$/;"	m	struct:thread	typeref:typename:int64_t
width	src/lib/stdio.c	/^    int width;$/;"	m	struct:printf_conversion	typeref:typename:int	file:
wrap_open	src/tests/filesys/extended/dir-rm-cwd.c	/^wrap_open (const char *name) $/;"	f	typeref:typename:int	file:
write	src/devices/block.h	/^    void (*write) (void *aux, block_sector_t, const void *buffer);$/;"	m	struct:block_operations	typeref:typename:void (*)(void * aux,block_sector_t,const void * buffer)
write	src/lib/user/syscall.c	/^write (int fd, const void *buffer, unsigned size)$/;"	f	typeref:typename:int
write_cnt	src/devices/block.c	/^    unsigned long long write_cnt;       \/* Number of sectors written. *\/$/;"	m	struct:block	typeref:typename:unsigned long long	file:
write_cnt	src/lib/kernel/console.c	/^static int64_t write_cnt;$/;"	v	typeref:typename:int64_t	file:
write_fully	src/utils/Pintos.pm	/^sub write_fully {$/;"	s
write_header	src/tests/filesys/extended/tar.c	/^write_header (const char *file_name, enum ustar_type type, int size,$/;"	f	typeref:typename:bool	file:
write_ier	src/devices/serial.c	/^write_ier (void) $/;"	f	typeref:typename:void	file:
write_seqlock	src/threads/synch.c	/^void write_seqlock(struct seqlock* seqlock)$/;"	f	typeref:typename:void
write_sequnlock	src/threads/synch.c	/^void write_sequnlock(struct seqlock* seqlock)$/;"	f	typeref:typename:void
write_some_bytes	src/tests/filesys/extended/grow-two-files.c	/^write_some_bytes (const char *file_name, int fd, const char *buf, size_t *ofs) $/;"	f	typeref:typename:void	file:
write_waiters	src/threads/synch.h	/^    struct list write_waiters;$/;"	m	struct:rw_semaphore	typeref:struct:list
write_zeros	src/utils/Pintos.pm	/^sub write_zeros {$/;"	s
writer	src/threads/synch.h	/^    struct thread *writer;$/;"	m	struct:rw_semaphore	typeref:struct:thread *
writer	src/threads/synch.h	/^    struct thread *writer;$/;"	m	struct:seqlock	typeref:struct:thread *
x	src/lib/stdio.c	/^    int x;                      \/* `x' character to use, for base 16 only. *\/$/;"	m	struct:integer_base	typeref:typename:int	file:
x	src/tests/vm/mmap-over-data.c	/^static char x;$/;"	v	typeref:typename:char	file:
xsystem	src/utils/pintos	/^sub xsystem {$/;"	s
yield_on_return	src/threads/interrupt.c	/^static bool yield_on_return;    \/* Should we yield on interrupt return? *\/$/;"	v	typeref:typename:bool	file:
zero	src/threads/intr-stubs.S	/^#define zero /;"	d	file:
